{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6982\u8ff0 \u5ba2\u6237\u7aef\u5de5\u7a0b\u5e08\u8fdb\u9636\u77e5\u8bc6\u56fe\u8c31 \u8ba1\u7b97\u673a\u5de5\u7a0b\u9886\u57df\u4e2d\uff0c\u5165\u95e8\u4e00\u4e2a\u6280\u672f\u7684\u95e8\u69db\u5176\u5b9e\u4e0d\u9ad8\uff0c\u751a\u81f3\u6709\u4e9b\u5f00\u53d1\u8005\u7b11\u79f0\u81ea\u5df1\u662fCV\u5de5\u7a0b\u5e08\uff0c\u6709\u4e0d\u4f1a\u7684\uff0c\u641c\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\u5728\u641c\u7d22\u5f15\u64ce\u53ef\u4ee5\u5e2e\u6211\u4eec\u89e3\u51b3\u5927\u90e8\u5206\u95ee\u9898\u7684\u65f6\u5019\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981\u81ea\u5df1\u53bb\u8bb0\u5fc6\uff1f\u6b63\u662f\u4e3a\u4e86\u79ef\u7d2f\uff0c\u77e5\u8bc6\u662f\u4e00\u4e2a\u4e0d\u65ad\u7d2f\u79ef\u7684\u8fc7\u7a0b\uff0c\u6709\u79ef\u7d2f\u624d\u4f1a\u8fdb\u6b65\u3002 \u51e0\u4e4e\u6240\u6709\u7684\u5f00\u53d1\u8005\u90fd\u6709\u5b66\u4e60\u79ef\u7d2f\u7684\u610f\u8bc6\uff0c\u7edd\u5927\u591a\u6570\u4eba\u4f1a\u5728\u5de5\u4f5c\u4e4b\u4f59\u6d4f\u89c8\u6280\u672f\u6587\u7ae0\uff0c\u4e00\u90e8\u5206\u4eba\u4f1a\u81ea\u5df1\u5199\u6280\u672f\u6587\u7ae0\uff0c\u4f46\u662f\u65f6\u95f4\u4e45\u4e86\u4e4b\u540e\u53d1\u73b0\uff0c\u5f88\u591a\u77e5\u8bc6\u6ca1\u6709\u6210\u4f53\u7cfb\u7684\u7d2f\u79ef\uff0c\u5728\u770b\u8fc7\u4e4b\u540e\u53c8\u5f88\u5feb\u5fd8\u8bb0\u4e86\u3002\u6240\u4ee5\u8fd9\u91cc\u4ece\u4e00\u4e2aAndroid\u5f00\u53d1\u8005\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u5206\u7c7b\u5bf9\u4e00\u4e9b\u77e5\u8bc6\u70b9\u8fdb\u884c\u603b\u7ed3\uff0c\u4ece\u51e0\u4e2a\u5927\u7c7b\u4e0a\u5f62\u6210\u81ea\u5df1\u7684\u77e5\u8bc6\u6811\u3002 Android\u57fa\u7840 \u4f5c\u4e3aAndroid\u5e94\u7528\u5de5\u7a0b\u5e08\uff0c\u5bf9Android\u76f8\u5173\u77e5\u8bc6\u7684\u638c\u63e1\u662f\u4e0d\u8a00\u800c\u55bb\u7684\uff0c\u81f3\u5c11\u5173\u4e8eAndroid\u76f8\u5173\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u90fd\u80fd\u77e5\u5176\u7136\u4ea6\u77e5\u5176\u6240\u4ee5\u7136\u3002\u9700\u8981\u638c\u63e1\u7684\u77e5\u8bc6\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a \u5e38\u89c1\u63a7\u4ef6\u3001\u7ec4\u4ef6\u7684\u7528\u6cd5 \u6d88\u606f\u3001\u4e8b\u4ef6\u3001\u7a97\u53e3\u3001\u7ed8\u5236\u7b49\u539f\u7406\u4e0e\u6e90\u7801 \u5de5\u7a0b\u67b6\u6784\u76f8\u5173 \u7cfb\u7edf\u6e90\u7801 \u6027\u80fd\u4f18\u5316 \u5e38\u89c1\u7b2c\u4e09\u65b9\u5e93\u4f7f\u7528\u3001\u539f\u7406\u4e0e\u6e90\u7801 Android\u865a\u62df\u673a \u5de5\u7a0b\u6784\u5efa\u5de5\u5177\u76f8\u5173 Java\u57fa\u7840 \u867d\u7136Java\u5df2\u7ecf\u4e0d\u662fAndroid\u5f00\u53d1\u7684\u9996\u9009\u8bed\u8a00\uff0c\u4f46\u662fAndroid\u79bb\u4e0d\u5f00Java\uff0c\u53ea\u8981Android framework\u4e2d\u8fd8\u6709Java\u4ee3\u7801\u5b58\u5728\uff0c\u4f5c\u4e3aAndroid\u5f00\u53d1\u8005\u5c31\u5fc5\u987b\u638c\u63e1Java\u76f8\u5173\u77e5\u8bc6\uff0c\u5305\u62ec\uff1a \u57fa\u672c\u77e5\u8bc6\u70b9 \u6ce8\u89e3\u3001\u8303\u578b\u3001\u53cd\u5c04\u3001\u5f02\u5e38\u3001IO\u7b49 \u9762\u5411\u5bf9\u8c61\u4e0e\u8bbe\u8ba1\u6a21\u5f0f \u5e38\u7528\u7684\u5305\u6e90\u7801\uff0c\u5982\u96c6\u5408\u3001\u591a\u7ebf\u7a0b\u4e0e\u5e76\u53d1 Java\u65b0\u7248\u672c\u7684\u7279\u6027\uff0c\u5982lambda\uff0cstream\u7b49 Java\u865a\u62df\u673a\u76f8\u5173 AOP\u6280\u672f\u7b49 Kotlin\u57fa\u7840 \u4ece2017\u5e74\u8d77\uff0cKotlin\u5df2\u7ecf\u6210\u4e86Android\u5f00\u53d1\u7684\u5b98\u65b9\u8bed\u8a00\uff0c\u6ca1\u7406\u7531\u4e0d\u638c\u63e1Kotlin. \u5bf9\u4e8eKotlin\u9700\u8981\u4e86\u89e3\u7684\u6280\u672f\u5305\u62ec\uff1a \u57fa\u7840\u8bed\u6cd5 \u8303\u578b\u3001\u53cd\u5c04\u3001\u6ce8\u89e3\u7b49 \u534f\u7a0b \u8de8\u5e73\u53f0\u6280\u672f \u8de8\u5e73\u53f0\u6280\u672f\u5982\u4eca\u5df2\u7ecf\u6210\u4e3a\u4e86\u4e00\u79cd\u8d8b\u52bf\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u5ba2\u6237\u7aef\u5de5\u7a0b\u65f6\u90fd\u5e94\u8be5\u638c\u63e1\u81f3\u5c11\u4e00\u79cd\u8de8\u5e73\u53f0\u6280\u672f\uff0c\u4e86\u89e3\u5176\u4ed6\u8de8\u5e73\u53f0\u6280\u672f\u7684\u539f\u7406\u4e0e\u4f18\u7f3a\u70b9\u7b49\uff0c\u76ee\u524d\u4e3b\u6d41\u7684\u8de8\u5e73\u53f0\u6280\u672f\u5305\u62ec\uff1a React Native Weex Flutter Kotlin Native\u4e0eKotlin MultiPlatform Mobile \u5c0f\u7a0b\u5e8f\uff0c\u5feb\u5e94\u7528 Hybrid\u5e94\u7528 \u5176\u4ed6\u8de8\u5e73\u53f0\u6280\u672f\u539f\u7406\uff08Qt\u7b49\uff09 CS\u7406\u8bba\u57fa\u7840 \u8ba1\u7b97\u673a\u79d1\u5b66\u7406\u8bba\u57fa\u7840\u662f\u57fa\u672c\u529f\uff0c\u4e5f\u662f\u5fc5\u987b\u8981\u638c\u63e1\u7684\uff0c\u4f5c\u4e3a\u5ba2\u6237\u7aef\u5e94\u7528\u5f00\u53d1\u5de5\u7a0b\u5e08\uff0c\u4e0d\u5fc5\u638c\u63e1\u7684\u90a3\u4e48\u5e95\u5c42\uff0c\u4f46\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u77e5\u8bc6\u70b9\uff0c\u8fd8\u662f\u5fc5\u987b\u8981\u638c\u63e1\u7684\uff0c\u542b\uff1a \u6570\u636e\u7ed3\u6784\u4e0e\u5e38\u89c1\u7b97\u6cd5 \u64cd\u4f5c\u7cfb\u7edf \u7f51\u7edc\u901a\u4fe1 \u5b89\u5168\u76f8\u5173 \u6570\u636e\u5e93\u57fa\u7840 \u6570\u5b66\u7406\u8bba \u5de5\u5177\u4e0e\u5de5\u7a0b\u5316 \u5e38\u7528\u7684\u5f00\u53d1\u5de5\u5177\uff0c\u9879\u76ee\u5de5\u7a0b\u5316\u5728\u6bcf\u4e00\u4e2a\u5f00\u53d1\u8005\u6bcf\u5929\u7684\u5de5\u4f5c\u4e2d\u90fd\u4f1a\u63a5\u89e6\u5230\u7684\uff0c\u719f\u6089\u5e38\u7528\u5de5\u5177\u548c\u5de5\u7a0b\u80fd\u5e26\u6765\u6210\u500d\u7684\u6548\u7387\u589e\u52a0\uff0c\u4e5f\u53ef\u4ee5\u5904\u7406\u4e00\u4e9b\u7591\u96be\u7684\u95ee\u9898\uff0c\u8fd9\u4e9b\u5de5\u5177\u548c\u5de5\u7a0b\u5316\u76f8\u5173\u7684\u77e5\u8bc6\u70b9\u5305\u62ec\uff1a Gradle\u4e0eMaven \u6253\u5305\u76f8\u5173 Git\u3001SVN\u7b49\u9879\u76ee\u534f\u540c\u5de5\u5177 CI\u4e0eCD","title":"\u6982\u8ff0"},{"location":"#_1","text":"","title":"\u6982\u8ff0"},{"location":"#_2","text":"\u8ba1\u7b97\u673a\u5de5\u7a0b\u9886\u57df\u4e2d\uff0c\u5165\u95e8\u4e00\u4e2a\u6280\u672f\u7684\u95e8\u69db\u5176\u5b9e\u4e0d\u9ad8\uff0c\u751a\u81f3\u6709\u4e9b\u5f00\u53d1\u8005\u7b11\u79f0\u81ea\u5df1\u662fCV\u5de5\u7a0b\u5e08\uff0c\u6709\u4e0d\u4f1a\u7684\uff0c\u641c\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\u5728\u641c\u7d22\u5f15\u64ce\u53ef\u4ee5\u5e2e\u6211\u4eec\u89e3\u51b3\u5927\u90e8\u5206\u95ee\u9898\u7684\u65f6\u5019\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981\u81ea\u5df1\u53bb\u8bb0\u5fc6\uff1f\u6b63\u662f\u4e3a\u4e86\u79ef\u7d2f\uff0c\u77e5\u8bc6\u662f\u4e00\u4e2a\u4e0d\u65ad\u7d2f\u79ef\u7684\u8fc7\u7a0b\uff0c\u6709\u79ef\u7d2f\u624d\u4f1a\u8fdb\u6b65\u3002 \u51e0\u4e4e\u6240\u6709\u7684\u5f00\u53d1\u8005\u90fd\u6709\u5b66\u4e60\u79ef\u7d2f\u7684\u610f\u8bc6\uff0c\u7edd\u5927\u591a\u6570\u4eba\u4f1a\u5728\u5de5\u4f5c\u4e4b\u4f59\u6d4f\u89c8\u6280\u672f\u6587\u7ae0\uff0c\u4e00\u90e8\u5206\u4eba\u4f1a\u81ea\u5df1\u5199\u6280\u672f\u6587\u7ae0\uff0c\u4f46\u662f\u65f6\u95f4\u4e45\u4e86\u4e4b\u540e\u53d1\u73b0\uff0c\u5f88\u591a\u77e5\u8bc6\u6ca1\u6709\u6210\u4f53\u7cfb\u7684\u7d2f\u79ef\uff0c\u5728\u770b\u8fc7\u4e4b\u540e\u53c8\u5f88\u5feb\u5fd8\u8bb0\u4e86\u3002\u6240\u4ee5\u8fd9\u91cc\u4ece\u4e00\u4e2aAndroid\u5f00\u53d1\u8005\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u5206\u7c7b\u5bf9\u4e00\u4e9b\u77e5\u8bc6\u70b9\u8fdb\u884c\u603b\u7ed3\uff0c\u4ece\u51e0\u4e2a\u5927\u7c7b\u4e0a\u5f62\u6210\u81ea\u5df1\u7684\u77e5\u8bc6\u6811\u3002","title":"\u5ba2\u6237\u7aef\u5de5\u7a0b\u5e08\u8fdb\u9636\u77e5\u8bc6\u56fe\u8c31"},{"location":"#android","text":"\u4f5c\u4e3aAndroid\u5e94\u7528\u5de5\u7a0b\u5e08\uff0c\u5bf9Android\u76f8\u5173\u77e5\u8bc6\u7684\u638c\u63e1\u662f\u4e0d\u8a00\u800c\u55bb\u7684\uff0c\u81f3\u5c11\u5173\u4e8eAndroid\u76f8\u5173\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u90fd\u80fd\u77e5\u5176\u7136\u4ea6\u77e5\u5176\u6240\u4ee5\u7136\u3002\u9700\u8981\u638c\u63e1\u7684\u77e5\u8bc6\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a \u5e38\u89c1\u63a7\u4ef6\u3001\u7ec4\u4ef6\u7684\u7528\u6cd5 \u6d88\u606f\u3001\u4e8b\u4ef6\u3001\u7a97\u53e3\u3001\u7ed8\u5236\u7b49\u539f\u7406\u4e0e\u6e90\u7801 \u5de5\u7a0b\u67b6\u6784\u76f8\u5173 \u7cfb\u7edf\u6e90\u7801 \u6027\u80fd\u4f18\u5316 \u5e38\u89c1\u7b2c\u4e09\u65b9\u5e93\u4f7f\u7528\u3001\u539f\u7406\u4e0e\u6e90\u7801 Android\u865a\u62df\u673a \u5de5\u7a0b\u6784\u5efa\u5de5\u5177\u76f8\u5173","title":"Android\u57fa\u7840"},{"location":"#java","text":"\u867d\u7136Java\u5df2\u7ecf\u4e0d\u662fAndroid\u5f00\u53d1\u7684\u9996\u9009\u8bed\u8a00\uff0c\u4f46\u662fAndroid\u79bb\u4e0d\u5f00Java\uff0c\u53ea\u8981Android framework\u4e2d\u8fd8\u6709Java\u4ee3\u7801\u5b58\u5728\uff0c\u4f5c\u4e3aAndroid\u5f00\u53d1\u8005\u5c31\u5fc5\u987b\u638c\u63e1Java\u76f8\u5173\u77e5\u8bc6\uff0c\u5305\u62ec\uff1a \u57fa\u672c\u77e5\u8bc6\u70b9 \u6ce8\u89e3\u3001\u8303\u578b\u3001\u53cd\u5c04\u3001\u5f02\u5e38\u3001IO\u7b49 \u9762\u5411\u5bf9\u8c61\u4e0e\u8bbe\u8ba1\u6a21\u5f0f \u5e38\u7528\u7684\u5305\u6e90\u7801\uff0c\u5982\u96c6\u5408\u3001\u591a\u7ebf\u7a0b\u4e0e\u5e76\u53d1 Java\u65b0\u7248\u672c\u7684\u7279\u6027\uff0c\u5982lambda\uff0cstream\u7b49 Java\u865a\u62df\u673a\u76f8\u5173 AOP\u6280\u672f\u7b49","title":"Java\u57fa\u7840"},{"location":"#kotlin","text":"\u4ece2017\u5e74\u8d77\uff0cKotlin\u5df2\u7ecf\u6210\u4e86Android\u5f00\u53d1\u7684\u5b98\u65b9\u8bed\u8a00\uff0c\u6ca1\u7406\u7531\u4e0d\u638c\u63e1Kotlin. \u5bf9\u4e8eKotlin\u9700\u8981\u4e86\u89e3\u7684\u6280\u672f\u5305\u62ec\uff1a \u57fa\u7840\u8bed\u6cd5 \u8303\u578b\u3001\u53cd\u5c04\u3001\u6ce8\u89e3\u7b49 \u534f\u7a0b","title":"Kotlin\u57fa\u7840"},{"location":"#_3","text":"\u8de8\u5e73\u53f0\u6280\u672f\u5982\u4eca\u5df2\u7ecf\u6210\u4e3a\u4e86\u4e00\u79cd\u8d8b\u52bf\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u5ba2\u6237\u7aef\u5de5\u7a0b\u65f6\u90fd\u5e94\u8be5\u638c\u63e1\u81f3\u5c11\u4e00\u79cd\u8de8\u5e73\u53f0\u6280\u672f\uff0c\u4e86\u89e3\u5176\u4ed6\u8de8\u5e73\u53f0\u6280\u672f\u7684\u539f\u7406\u4e0e\u4f18\u7f3a\u70b9\u7b49\uff0c\u76ee\u524d\u4e3b\u6d41\u7684\u8de8\u5e73\u53f0\u6280\u672f\u5305\u62ec\uff1a React Native Weex Flutter Kotlin Native\u4e0eKotlin MultiPlatform Mobile \u5c0f\u7a0b\u5e8f\uff0c\u5feb\u5e94\u7528 Hybrid\u5e94\u7528 \u5176\u4ed6\u8de8\u5e73\u53f0\u6280\u672f\u539f\u7406\uff08Qt\u7b49\uff09","title":"\u8de8\u5e73\u53f0\u6280\u672f"},{"location":"#cs","text":"\u8ba1\u7b97\u673a\u79d1\u5b66\u7406\u8bba\u57fa\u7840\u662f\u57fa\u672c\u529f\uff0c\u4e5f\u662f\u5fc5\u987b\u8981\u638c\u63e1\u7684\uff0c\u4f5c\u4e3a\u5ba2\u6237\u7aef\u5e94\u7528\u5f00\u53d1\u5de5\u7a0b\u5e08\uff0c\u4e0d\u5fc5\u638c\u63e1\u7684\u90a3\u4e48\u5e95\u5c42\uff0c\u4f46\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u77e5\u8bc6\u70b9\uff0c\u8fd8\u662f\u5fc5\u987b\u8981\u638c\u63e1\u7684\uff0c\u542b\uff1a \u6570\u636e\u7ed3\u6784\u4e0e\u5e38\u89c1\u7b97\u6cd5 \u64cd\u4f5c\u7cfb\u7edf \u7f51\u7edc\u901a\u4fe1 \u5b89\u5168\u76f8\u5173 \u6570\u636e\u5e93\u57fa\u7840 \u6570\u5b66\u7406\u8bba","title":"CS\u7406\u8bba\u57fa\u7840"},{"location":"#_4","text":"\u5e38\u7528\u7684\u5f00\u53d1\u5de5\u5177\uff0c\u9879\u76ee\u5de5\u7a0b\u5316\u5728\u6bcf\u4e00\u4e2a\u5f00\u53d1\u8005\u6bcf\u5929\u7684\u5de5\u4f5c\u4e2d\u90fd\u4f1a\u63a5\u89e6\u5230\u7684\uff0c\u719f\u6089\u5e38\u7528\u5de5\u5177\u548c\u5de5\u7a0b\u80fd\u5e26\u6765\u6210\u500d\u7684\u6548\u7387\u589e\u52a0\uff0c\u4e5f\u53ef\u4ee5\u5904\u7406\u4e00\u4e9b\u7591\u96be\u7684\u95ee\u9898\uff0c\u8fd9\u4e9b\u5de5\u5177\u548c\u5de5\u7a0b\u5316\u76f8\u5173\u7684\u77e5\u8bc6\u70b9\u5305\u62ec\uff1a Gradle\u4e0eMaven \u6253\u5305\u76f8\u5173 Git\u3001SVN\u7b49\u9879\u76ee\u534f\u540c\u5de5\u5177 CI\u4e0eCD","title":"\u5de5\u5177\u4e0e\u5de5\u7a0b\u5316"},{"location":"none/","text":"\u656c\u8bf7\u671f\u5f85","title":"\u656c\u8bf7\u671f\u5f85"},{"location":"Android/1-Basic/Android-GC/","text":"Android GC\u539f\u7406 JVM GC\u7b97\u6cd5 \u6807\u8bb0\u56de\u6536\u7b97\u6cd5(Mark and Sweep) \u4eceGC\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u904d\u5386\u4e00\u904d\u5185\u5b58\u7a7a\u95f4\uff0c\u4fdd\u7559\u53ef\u4ee5\u88abGC\u6839\u8282\u70b9\u76f4\u63a5\u6216\u95f4\u63a5\u5f15\u7528\u7684\u5bf9\u8c61\uff0c\u5269\u4e0b\u7684\u5bf9\u8c61\u90fd\u53ef\u4ee5\u88ab\u56de\u6536\u3002\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c \u9700\u8981\u4e2d\u65ad\u8fdb\u7a0b\u5185\u5176\u4ed6\u7ec4\u4ef6\u7684\u6267\u884c\uff0c\u5bb9\u6613\u4ea7\u751f\u5185\u5b58\u788e\u7247\u3002 \u590d\u5236(Copying) \u5c06\u5185\u5b58\u5212\u5206\u4e3a\u4e24\u5757\uff0c\u6bcf\u6b21\u53ea\u4f7f\u7528\u5176\u4e2d\u7684\u4e00\u5757\uff0cGC\u65f6\uff0c\u628a\u5b58\u6d3b\u7684\u5bf9\u8c61\u62f7\u8d1d\u5230\u53e6\u4e00\u5757\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u56de\u6536\u5f53\u524d\u5185\u5b58\u5757\u4e2d\u7684\u6240\u6709\u5bf9\u8c61\u3002 \u6807\u8bb0\u538b\u7f29(Mark-Compat) \u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5bf9\u6240\u6709\u53ef\u8fbe\u5bf9\u8c61\u505a\u4e00\u6b21\u6807\u8bb0\uff0cGC\u65f6\uff0c\u628a\u5b58\u6d3b\u7684\u5bf9\u8c61\u538b\u7f29\u5230\u5185\u5b58\u7684\u4e00\u8fb9\uff0c\u7136\u540e\u6e05\u9664\u8fb9\u754c\u4e4b\u5916\u7684\u5bf9\u8c61\u3002 \u5206\u4ee3 \u65b0\u5efa\u7684\u5bf9\u8c61\u90fd\u653e\u5728\u5e74\u8f7b\u4ee3\u7684\u5185\u5b58\u533a\uff0c\u5e74\u8f7b\u4ee3\u7684\u5bf9\u8c61\u90fd\u5f88\u5bb9\u6613\u88ab\u56de\u6536\u3002\u4e00\u4e2a\u5bf9\u8c61\u7ecf\u8fc7\u51e0\u6b21GC\u4e4b\u540e\u4ecd\u7136\u5b58\u6d3b\uff0c\u5c31\u628a\u5b83\u653e\u5165\u5230\u8001\u751f\u4ee3\u7684\u5185\u5b58\u533a\u3002\u5e74\u8f7b\u4ee3\u91c7\u7528\u590d\u5236\u7b97\u6cd5\uff0c\u8001\u751f\u4ee3\u91c7\u7528\u6807\u8bb0\u538b\u7f29\u7b97\u6cd5\u3002 //todo to be completed \u53c2\u8003 Android GC\u539f\u7406\u63a2\u6790 JAVA\u5783\u573e\u56de\u6536\u673a\u5236","title":"Android GC\u539f\u7406"},{"location":"Android/1-Basic/Android-GC/#android-gc","text":"","title":"Android GC\u539f\u7406"},{"location":"Android/1-Basic/Android-GC/#jvm-gc","text":"","title":"JVM GC\u7b97\u6cd5"},{"location":"Android/1-Basic/Android-GC/#mark-and-sweep","text":"\u4eceGC\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u904d\u5386\u4e00\u904d\u5185\u5b58\u7a7a\u95f4\uff0c\u4fdd\u7559\u53ef\u4ee5\u88abGC\u6839\u8282\u70b9\u76f4\u63a5\u6216\u95f4\u63a5\u5f15\u7528\u7684\u5bf9\u8c61\uff0c\u5269\u4e0b\u7684\u5bf9\u8c61\u90fd\u53ef\u4ee5\u88ab\u56de\u6536\u3002\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c \u9700\u8981\u4e2d\u65ad\u8fdb\u7a0b\u5185\u5176\u4ed6\u7ec4\u4ef6\u7684\u6267\u884c\uff0c\u5bb9\u6613\u4ea7\u751f\u5185\u5b58\u788e\u7247\u3002","title":"\u6807\u8bb0\u56de\u6536\u7b97\u6cd5(Mark and Sweep)"},{"location":"Android/1-Basic/Android-GC/#copying","text":"\u5c06\u5185\u5b58\u5212\u5206\u4e3a\u4e24\u5757\uff0c\u6bcf\u6b21\u53ea\u4f7f\u7528\u5176\u4e2d\u7684\u4e00\u5757\uff0cGC\u65f6\uff0c\u628a\u5b58\u6d3b\u7684\u5bf9\u8c61\u62f7\u8d1d\u5230\u53e6\u4e00\u5757\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u56de\u6536\u5f53\u524d\u5185\u5b58\u5757\u4e2d\u7684\u6240\u6709\u5bf9\u8c61\u3002","title":"\u590d\u5236(Copying)"},{"location":"Android/1-Basic/Android-GC/#mark-compat","text":"\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5bf9\u6240\u6709\u53ef\u8fbe\u5bf9\u8c61\u505a\u4e00\u6b21\u6807\u8bb0\uff0cGC\u65f6\uff0c\u628a\u5b58\u6d3b\u7684\u5bf9\u8c61\u538b\u7f29\u5230\u5185\u5b58\u7684\u4e00\u8fb9\uff0c\u7136\u540e\u6e05\u9664\u8fb9\u754c\u4e4b\u5916\u7684\u5bf9\u8c61\u3002","title":"\u6807\u8bb0\u538b\u7f29(Mark-Compat)"},{"location":"Android/1-Basic/Android-GC/#_1","text":"\u65b0\u5efa\u7684\u5bf9\u8c61\u90fd\u653e\u5728\u5e74\u8f7b\u4ee3\u7684\u5185\u5b58\u533a\uff0c\u5e74\u8f7b\u4ee3\u7684\u5bf9\u8c61\u90fd\u5f88\u5bb9\u6613\u88ab\u56de\u6536\u3002\u4e00\u4e2a\u5bf9\u8c61\u7ecf\u8fc7\u51e0\u6b21GC\u4e4b\u540e\u4ecd\u7136\u5b58\u6d3b\uff0c\u5c31\u628a\u5b83\u653e\u5165\u5230\u8001\u751f\u4ee3\u7684\u5185\u5b58\u533a\u3002\u5e74\u8f7b\u4ee3\u91c7\u7528\u590d\u5236\u7b97\u6cd5\uff0c\u8001\u751f\u4ee3\u91c7\u7528\u6807\u8bb0\u538b\u7f29\u7b97\u6cd5\u3002 //todo to be completed \u53c2\u8003 Android GC\u539f\u7406\u63a2\u6790 JAVA\u5783\u573e\u56de\u6536\u673a\u5236","title":"\u5206\u4ee3"},{"location":"Android/1-Basic/Android-collections/","text":"Android\u4e2d\u5bf9\u96c6\u5408\u7684\u4f18\u5316 \u5728Android\u4e2d\uff0c\u4e3a\u4e86\u8282\u7ea6\u5185\u5b58\uff0c\u4f7f\u7528\u4e86SparseArray\u6765\u4ee3\u66ffkey\u662fInt\u7684HashMap\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709ArrayMap\u548cArraySet. SparseArray SparseArray<V> \u53ef\u4ee5\u7528\u6765\u4ee3\u66ff HashMap<Integer,V> \uff0c\u4f7f\u7528SparseArray\u53ef\u4ee5\u8282\u7701\u5185\u5b58\u7a7a\u95f4\uff0c\u4f46\u662f\u5e76\u4e0d\u80fd\u63d0\u9ad8\u67e5\u627e\u6548\u7387\u3002 SparseArray\u5185\u90e8\uff0c\u4f7f\u7528\u4e24\u4e2a\u6570\u7ec4\u6765\u5206\u522b\u5b58\u50a8key\u548cvalue\uff0c\u63d2\u5165\u65f6\uff0c\u5982\u679c\u5982\u679ckey\u5b58\u5728\uff0c\u76f4\u63a5\u8986\u76d6\uff0c\u6ca1\u6709\u5219\u65b0\u63d2\u5165key\u548cvalue. \u67e5\u627e\u65f6\uff0c\u5148\u4ecekey\u7684\u6570\u7ec4\u4e2d\u7528\u4e8c\u5206\u67e5\u627e\u627e\u5230key\uff0c\u7136\u540e\u76f4\u63a5\u6839\u636ekey\u7684index\u53bb\u67e5\u627evalue\u6570\u7ec4\u4e2d\u7684value\u503c\u3002\u5220\u9664\u65f6\uff0c\u8fd8\u662f\u5148\u67e5\u627e\u5230key\u7684index\uff0c\u7136\u540e\u628a\u76f8\u5e94\u4f4d\u7f6e\u7684value\u6807\u8bb0\u4e3aDELETED\uff0c\u5176\u4e2dDELETED\u662f\u4e00\u4e2aObject\u5bf9\u8c61\uff0c\u5e76\u6807\u8bb0\u53ef\u4ee5GC\u3002gc\u65b9\u6cd5\u4e2d\uff0c\u904d\u5386\u6570\u7ec4\uff0c\u9047\u5230\u6709\u4f4d\u7f6e\u7684\u5143\u7d20\u88ab\u5220\u9664\u4e86\uff0c\u5c31\u628a\u540e\u9762\u672a\u5220\u9664\u7684\u5143\u7d20\u524d\u79fb\u3002 SparseArray<V> --> Map<Integer, V> SparseIntArray --> Map<Integer, Integer> SparseBooleanArray --> Map<Integer, Boolean> SparseLongArray --> Map<Integer, Long> ArrayMap ArrayMap\u53ef\u4ee5\u7528\u6765\u4ee3\u66ff ArrayMap<K,V> \uff0c\u548cSparseArray\u7c7b\u4f3c\uff0cArrayMap\u4e2d\u4e5f\u6709\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u662fint\u7c7b\u578bmHashes\uff0c\u4e13\u95e8\u7528\u6765\u5b58key\u7684hash\u503c\uff0c\u6709\u5e8f\u6392\u5217\uff0c\u53e6\u5916\u8fd8\u6709\u4e00\u4e2aObject\u7c7b\u578b\u7684\u6570\u7ec4mArray\uff0c\u7528\u6765\u653e\u771f\u6b63\u7684key\u548cvalue\uff0c\u5176\u4e2d\u6839\u636ekey\u7684hash\u503c\u7b97\u51fa\u4e00\u4e2aindex\uff0c\u7136\u540e\uff0c\u628akey\u653e\u5728mArray[index]\u7684\u4f4d\u7f6e\uff0c\u628avalue\u653e\u5728mArray[index + 1]\u7684\u4f4d\u7f6e\u3002 \u6570\u7ec4\u6269\u5bb9\u65f6\uff0c\u5927\u4e8e8\u4e2a\u76f4\u63a5\u6269\u5927\u52301.5\u500d\uff0c\u5927\u4e8e4\u4e2a\u7684\u65f6\u5019\uff0c\u6269\u5927\u52308\uff0c\u5c0f\u4e8e4\u4e2a\u7684\u65f6\u5019\uff0c\u6269\u5927\u52304\u4e2a\u3002 \u6b64\u5916ArrayMap\u4e2d\u8fd8\u6709\u4e24\u4e2a\u7f13\u5b58\uff0c\u662f\u4e24\u4e2a\u9759\u6001\u6570\u7ec4\uff0cmBaseCache\u548cmBaseTwiceCache\uff0c\u6269\u5bb9\u7684\u65f6\u5019\uff0c\u4f1a\u628a\u539f\u6765\u65e7\u7684\u6570\u7ec4\u8d4b\u503c\u7ed9\u8fd9\u4e24\u4e2acache\uff0c\u6269\u5bb9\u91cd\u65b0\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u7684\u65f6\u5019\uff0c\u4f1a\u4f18\u5148\u53d6\u4e24\u4e2acache\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53e6\u5916\u5728\u65b0\u5efa\u53e6\u5916\u4e00\u4e2aArrayMap\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u53d6\u7f13\u5b58\uff0c\u4e0d\u7528\u53bb\u65b0\u7533\u8bf7\u7a7a\u95f4\uff0c\u8fd9\u6837\u4e5f\u5c31\u8282\u7701\u4e86\u7a7a\u95f4\u3002 \u5220\u9664\u65f6\uff0c\u6839\u636ekey\u7684hash\u503c\u627e\u5230index\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u76f4\u63a5\u628a\u4e24\u4e2a\u6570\u7ec4\u8d4b\u503c\u6210\u7a7a\u6570\u7ec4\uff0c\u5982\u679chash\u6570\u7ec4\u7684\u957f\u5ea6\u5927\u4e8e8\u4e14map\u7684\u5927\u5c0f\u5c0f\u4e8ehash\u6570\u7ec4\u957f\u5ea6\u76841/3\uff0c\u5219\u91cd\u65b0\u5206\u914d\u6570\u7ec4\u7a7a\u95f4\uff0c\u5426\u5219\uff0c\u628a\u76f8\u5e94\u4f4d\u7f6e\u7684\u5143\u7d20\u5220\u4e86\uff0c\u540e\u9762\u7684\u5143\u7d20\u5f80\u524d\u79fb\u52a8\u3002","title":"Android\u4e2d\u5bf9\u96c6\u5408\u7684\u4f18\u5316"},{"location":"Android/1-Basic/Android-collections/#android","text":"\u5728Android\u4e2d\uff0c\u4e3a\u4e86\u8282\u7ea6\u5185\u5b58\uff0c\u4f7f\u7528\u4e86SparseArray\u6765\u4ee3\u66ffkey\u662fInt\u7684HashMap\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709ArrayMap\u548cArraySet.","title":"Android\u4e2d\u5bf9\u96c6\u5408\u7684\u4f18\u5316"},{"location":"Android/1-Basic/Android-collections/#sparsearray","text":"SparseArray<V> \u53ef\u4ee5\u7528\u6765\u4ee3\u66ff HashMap<Integer,V> \uff0c\u4f7f\u7528SparseArray\u53ef\u4ee5\u8282\u7701\u5185\u5b58\u7a7a\u95f4\uff0c\u4f46\u662f\u5e76\u4e0d\u80fd\u63d0\u9ad8\u67e5\u627e\u6548\u7387\u3002 SparseArray\u5185\u90e8\uff0c\u4f7f\u7528\u4e24\u4e2a\u6570\u7ec4\u6765\u5206\u522b\u5b58\u50a8key\u548cvalue\uff0c\u63d2\u5165\u65f6\uff0c\u5982\u679c\u5982\u679ckey\u5b58\u5728\uff0c\u76f4\u63a5\u8986\u76d6\uff0c\u6ca1\u6709\u5219\u65b0\u63d2\u5165key\u548cvalue. \u67e5\u627e\u65f6\uff0c\u5148\u4ecekey\u7684\u6570\u7ec4\u4e2d\u7528\u4e8c\u5206\u67e5\u627e\u627e\u5230key\uff0c\u7136\u540e\u76f4\u63a5\u6839\u636ekey\u7684index\u53bb\u67e5\u627evalue\u6570\u7ec4\u4e2d\u7684value\u503c\u3002\u5220\u9664\u65f6\uff0c\u8fd8\u662f\u5148\u67e5\u627e\u5230key\u7684index\uff0c\u7136\u540e\u628a\u76f8\u5e94\u4f4d\u7f6e\u7684value\u6807\u8bb0\u4e3aDELETED\uff0c\u5176\u4e2dDELETED\u662f\u4e00\u4e2aObject\u5bf9\u8c61\uff0c\u5e76\u6807\u8bb0\u53ef\u4ee5GC\u3002gc\u65b9\u6cd5\u4e2d\uff0c\u904d\u5386\u6570\u7ec4\uff0c\u9047\u5230\u6709\u4f4d\u7f6e\u7684\u5143\u7d20\u88ab\u5220\u9664\u4e86\uff0c\u5c31\u628a\u540e\u9762\u672a\u5220\u9664\u7684\u5143\u7d20\u524d\u79fb\u3002 SparseArray<V> --> Map<Integer, V> SparseIntArray --> Map<Integer, Integer> SparseBooleanArray --> Map<Integer, Boolean> SparseLongArray --> Map<Integer, Long>","title":"SparseArray"},{"location":"Android/1-Basic/Android-collections/#arraymap","text":"ArrayMap\u53ef\u4ee5\u7528\u6765\u4ee3\u66ff ArrayMap<K,V> \uff0c\u548cSparseArray\u7c7b\u4f3c\uff0cArrayMap\u4e2d\u4e5f\u6709\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u662fint\u7c7b\u578bmHashes\uff0c\u4e13\u95e8\u7528\u6765\u5b58key\u7684hash\u503c\uff0c\u6709\u5e8f\u6392\u5217\uff0c\u53e6\u5916\u8fd8\u6709\u4e00\u4e2aObject\u7c7b\u578b\u7684\u6570\u7ec4mArray\uff0c\u7528\u6765\u653e\u771f\u6b63\u7684key\u548cvalue\uff0c\u5176\u4e2d\u6839\u636ekey\u7684hash\u503c\u7b97\u51fa\u4e00\u4e2aindex\uff0c\u7136\u540e\uff0c\u628akey\u653e\u5728mArray[index]\u7684\u4f4d\u7f6e\uff0c\u628avalue\u653e\u5728mArray[index + 1]\u7684\u4f4d\u7f6e\u3002 \u6570\u7ec4\u6269\u5bb9\u65f6\uff0c\u5927\u4e8e8\u4e2a\u76f4\u63a5\u6269\u5927\u52301.5\u500d\uff0c\u5927\u4e8e4\u4e2a\u7684\u65f6\u5019\uff0c\u6269\u5927\u52308\uff0c\u5c0f\u4e8e4\u4e2a\u7684\u65f6\u5019\uff0c\u6269\u5927\u52304\u4e2a\u3002 \u6b64\u5916ArrayMap\u4e2d\u8fd8\u6709\u4e24\u4e2a\u7f13\u5b58\uff0c\u662f\u4e24\u4e2a\u9759\u6001\u6570\u7ec4\uff0cmBaseCache\u548cmBaseTwiceCache\uff0c\u6269\u5bb9\u7684\u65f6\u5019\uff0c\u4f1a\u628a\u539f\u6765\u65e7\u7684\u6570\u7ec4\u8d4b\u503c\u7ed9\u8fd9\u4e24\u4e2acache\uff0c\u6269\u5bb9\u91cd\u65b0\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u7684\u65f6\u5019\uff0c\u4f1a\u4f18\u5148\u53d6\u4e24\u4e2acache\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53e6\u5916\u5728\u65b0\u5efa\u53e6\u5916\u4e00\u4e2aArrayMap\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u53d6\u7f13\u5b58\uff0c\u4e0d\u7528\u53bb\u65b0\u7533\u8bf7\u7a7a\u95f4\uff0c\u8fd9\u6837\u4e5f\u5c31\u8282\u7701\u4e86\u7a7a\u95f4\u3002 \u5220\u9664\u65f6\uff0c\u6839\u636ekey\u7684hash\u503c\u627e\u5230index\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u76f4\u63a5\u628a\u4e24\u4e2a\u6570\u7ec4\u8d4b\u503c\u6210\u7a7a\u6570\u7ec4\uff0c\u5982\u679chash\u6570\u7ec4\u7684\u957f\u5ea6\u5927\u4e8e8\u4e14map\u7684\u5927\u5c0f\u5c0f\u4e8ehash\u6570\u7ec4\u957f\u5ea6\u76841/3\uff0c\u5219\u91cd\u65b0\u5206\u914d\u6570\u7ec4\u7a7a\u95f4\uff0c\u5426\u5219\uff0c\u628a\u76f8\u5e94\u4f4d\u7f6e\u7684\u5143\u7d20\u5220\u4e86\uff0c\u540e\u9762\u7684\u5143\u7d20\u5f80\u524d\u79fb\u52a8\u3002","title":"ArrayMap"},{"location":"Android/1-Basic/Android-database/","text":"Android SQLite\u6570\u636e\u5e93\u4f18\u5316 \u5efa\u7acb\u7d22\u5f15 \u5efa\u7acb\u7d22\u5f15\u7684\u8bed\u53e5\uff1a //\u4e3a\u6574\u5f20\u8868\u5efa\u7acb\u7d22\u5f15 CREATE INDEX index_name ON table_name ; //\u521b\u5efa\u5355\u5217\u7d22\u5f15 CREATE INDEX index_name ON table_name ( column_name ); \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7d22\u5f15\u4f1a\u4f7f\u67e5\u8be2\u7684\u901f\u5ea6\u52a0\u5feb\uff0c\u4f46\u662f\u5374\u4f1a\u4f7f\u63d2\u5165\uff0c\u5220\u9664\u548c\u66f4\u65b0\u7684\u901f\u5ea6\u53d8\u6162\uff0c\u5728\u6570\u636e\u91cf\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\uff0c\u65b0\u5efa\u7d22\u5f15\u53cd\u800c\u4f1a\u589e\u5927\u6570\u636e\u5e93\u7684\u5927\u5c0f\u3002 \u7f16\u8bd1SQL\u8bed\u53e5 \u5bf9\u4e8e\u9700\u8981\u91cd\u590d\u6267\u884c\u5f88\u591a\u6b21\u7684SQL\u8bed\u53e5\uff0c\u53ef\u4ee5\u7f16\u8bd1\u6210SQLiteStatement\u8bed\u53e5\u3002 \u4f7f\u7528\u4e8b\u52a1 \u6279\u91cf\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e8b\u52a1\uff0c\u51cf\u5c11\u53cd\u590d\u6570\u636e\u5e93\u6587\u4ef6\u7684IO\u64cd\u4f5c\u3002 \u5176\u5b83\u7684\u4f18\u5316 db.query\u8bed\u53e5\uff0c\u53ea\u8fd4\u56de\u9700\u8981\u7684\u5217\uff1b \u904d\u5386cursor\u65f6\uff0c\u63d0\u524d\u901a\u8fc7curcor.getColumnIndex()\u83b7\u53d6\u5230index\uff0c\u4e0d\u5728\u5faa\u73af\u4e2d\u505a\uff1b ContentValue\u5e95\u5c42\u662f\u7528HashMap\u5b9e\u73b0\u7684\uff0c\u6839\u636e\u9700\u8981\u6307\u5b9a\u5bb9\u91cf\uff1b db\u548ccursor\u5bf9\u8c61\u53ca\u65f6\u5173\u95ed\uff1b \u8017\u65f6\u7684\u64cd\u4f5c\u653e\u5728\u5b50\u7ebf\u7a0b\uff1b Android \u4e2d SQLite \u6027\u80fd\u4f18\u5316","title":"Android SQLite\u6570\u636e\u5e93\u4f18\u5316"},{"location":"Android/1-Basic/Android-database/#android-sqlite","text":"","title":"Android SQLite\u6570\u636e\u5e93\u4f18\u5316"},{"location":"Android/1-Basic/Android-database/#_1","text":"\u5efa\u7acb\u7d22\u5f15\u7684\u8bed\u53e5\uff1a //\u4e3a\u6574\u5f20\u8868\u5efa\u7acb\u7d22\u5f15 CREATE INDEX index_name ON table_name ; //\u521b\u5efa\u5355\u5217\u7d22\u5f15 CREATE INDEX index_name ON table_name ( column_name ); \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7d22\u5f15\u4f1a\u4f7f\u67e5\u8be2\u7684\u901f\u5ea6\u52a0\u5feb\uff0c\u4f46\u662f\u5374\u4f1a\u4f7f\u63d2\u5165\uff0c\u5220\u9664\u548c\u66f4\u65b0\u7684\u901f\u5ea6\u53d8\u6162\uff0c\u5728\u6570\u636e\u91cf\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\uff0c\u65b0\u5efa\u7d22\u5f15\u53cd\u800c\u4f1a\u589e\u5927\u6570\u636e\u5e93\u7684\u5927\u5c0f\u3002","title":"\u5efa\u7acb\u7d22\u5f15"},{"location":"Android/1-Basic/Android-database/#sql","text":"\u5bf9\u4e8e\u9700\u8981\u91cd\u590d\u6267\u884c\u5f88\u591a\u6b21\u7684SQL\u8bed\u53e5\uff0c\u53ef\u4ee5\u7f16\u8bd1\u6210SQLiteStatement\u8bed\u53e5\u3002","title":"\u7f16\u8bd1SQL\u8bed\u53e5"},{"location":"Android/1-Basic/Android-database/#_2","text":"\u6279\u91cf\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e8b\u52a1\uff0c\u51cf\u5c11\u53cd\u590d\u6570\u636e\u5e93\u6587\u4ef6\u7684IO\u64cd\u4f5c\u3002","title":"\u4f7f\u7528\u4e8b\u52a1"},{"location":"Android/1-Basic/Android-database/#_3","text":"db.query\u8bed\u53e5\uff0c\u53ea\u8fd4\u56de\u9700\u8981\u7684\u5217\uff1b \u904d\u5386cursor\u65f6\uff0c\u63d0\u524d\u901a\u8fc7curcor.getColumnIndex()\u83b7\u53d6\u5230index\uff0c\u4e0d\u5728\u5faa\u73af\u4e2d\u505a\uff1b ContentValue\u5e95\u5c42\u662f\u7528HashMap\u5b9e\u73b0\u7684\uff0c\u6839\u636e\u9700\u8981\u6307\u5b9a\u5bb9\u91cf\uff1b db\u548ccursor\u5bf9\u8c61\u53ca\u65f6\u5173\u95ed\uff1b \u8017\u65f6\u7684\u64cd\u4f5c\u653e\u5728\u5b50\u7ebf\u7a0b\uff1b Android \u4e2d SQLite \u6027\u80fd\u4f18\u5316","title":"\u5176\u5b83\u7684\u4f18\u5316"},{"location":"Android/1-Basic/Android-memory/","text":"Android\u5185\u5b58\u6cc4\u6f0f \u6982\u5ff5 Android\u5185\u5b58\u6cc4\u6f0f\u662f\u6307\u67d0\u4e9b\u5bf9\u8c61\u5b9e\u9645\u5df2\u7ecf\u6ca1\u6709\u4e86\u4f7f\u7528\u4ef7\u503c\uff0c\u4f46\u662f\u8fd8\u662f\u95f4\u63a5\u6216\u76f4\u63a5\u5f15\u7528GC Roots\uff0c\u5bfc\u81f4\u5bf9\u8c61\u65e0\u6cd5\u88ab\u56de\u6536\uff0c\u4e00\u76f4\u5360\u7528\u7740\u5185\u5b58\u7a7a\u95f4\u3002 \u5e38\u89c1\u7684\u5185\u5b58\u6cc4\u6f0f \u5355\u4f8b\u6a21\u5f0f\u7684\u4e0d\u5f53\u4f7f\u7528 \u9759\u6001\u7684\u5355\u4f8b\u6a21\u5f0f\u4f1a\u5728\u5e94\u7528\u7684\u751f\u547d\u5468\u671f\u5185\u4e00\u76f4\u5b58\u5728\uff0c\u5982\u679c\u7a7f\u5165Activity\u7684Context\u5bf9\u8c61\uff0c\u4f1a\u5bfc\u81f4Activity\u5bf9\u8c61\u4e00\u76f4\u5f97\u4e0d\u5230\u91ca\u653e\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a \u5355\u4f8b\u6a21\u5f0f\u5fc5\u8981\u7684\u65f6\u5019\u624d\u4f7f\u7528\uff0c\u4f7f\u7528\u5355\u4f8b\u7684\u65f6\u5019\uff0c\u5982\u679c\u9700\u8981\u4f20\u5165Context\uff0c\u5c3d\u91cf\u4f7f\u7528Application\u7684Context. \u975e\u9759\u6001\u5185\u90e8\u7c7b \u975e\u9759\u6001\u5185\u90e8\u7c7b\u4f1a\u9690\u5f0f\u6301\u6709\u5916\u90e8\u7c7b\u7684\u5f15\u7528\uff0c\u5982\u679c\u5185\u90e8\u7c7b\u7684\u5b58\u6d3b\u5468\u671f\u6bd4\u8f83\u957f\uff0c\u4e5f\u4f1a\u9020\u6210\u5916\u90e8\u7c7b\u7684\u5bf9\u8c61\u5f97\u4e0d\u5230\u91ca\u653e\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a \u5fc5\u8981\u65f6\u4f7f\u7528\u9759\u6001\u5185\u90e8\u7c7b\u6216\u8005\u5916\u90e8\u7c7b\u4ee3\u66ff Handler\uff0cThread\uff0cTimer\u7b49 \u539f\u7406\u548c\u975e\u9759\u6001\u5185\u90e8\u7c7b\u7684\u539f\u7406\u7c7b\u4f3c\uff0c\u5728Activity\u4e2d\u5b9a\u4e49Handler\uff0cThread\uff0cTimer\u7b49\uff0c\u5b83\u4eec\u4f1a\u9690\u5f0f\u6301\u6709Activity\u7684\u5f15\u7528\uff0c\u5982\u679c\u6709\u5ef6\u65f6\u64cd\u4f5c\uff0c\u4f1a\u9020\u6210Activity\u7ed3\u675f\u4ee5\u540e\uff0c\u5185\u5b58\u5f97\u4e0d\u5230\u91ca\u653e\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a \u4f7f\u7528\u5f31\u5f15\u7528\u83b7\u53d6Activity\u5b9e\u4f8b\uff0c\u5728Activity\u7684onDestory()\u65b9\u6cd5\u4e2d\u53d6\u6d88Handler\u7684\u6d88\u606f\uff0c\u5173\u95ed\u7ebf\u7a0b\u6c60\uff0c\u53d6\u6d88Timer. WebView\u9020\u6210\u7684\u6cc4\u6f0f WebView\u52a0\u8f7d\u7f51\u9875\u4f1a\u5f00\u542f\u5f02\u6b65\u7ebf\u7a0b\uff0c\u9875\u9762\u7ed3\u675f\u4e4b\u540e\uff0c\u7ebf\u7a0b\u6ca1\u6709\u7ed3\u675f\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a 1. \u624b\u52a8\u8c03\u7528WebView\u7684onStop()\u548conDestroy()\u65b9\u6cd5\uff0c\u5728\u9875\u9762\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u79fb\u9664WebView\u6240\u6709\u7684\u5b50View; 2. \u4f7f\u7528\u591a\u8fdb\u7a0b\uff0c\u5c06\u52a0\u8f7d\u7f51\u9875\u7684Activity\u653e\u5728\u5355\u72ec\u7684\u8fdb\u7a0b\u4e2d\u3002 \u8d44\u6e90\u5bf9\u8c61\u672a\u5173\u95ed Cursor\uff0cIO\u6d41\u7b49\u5bf9\u8c61\u4f7f\u7528\u5b8c\u4e4b\u540e\u5fc5\u987b\u5173\u95ed\uff0c\u672a\u5173\u95ed\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a \u53ca\u65f6\u5173\u95ed\u8d44\u6e90\u5bf9\u8c61\u3002 BroadCastReceiver\uff0cEventBus\u7b49\u6ca1\u6709\u53ca\u65f6\u89e3\u6ce8\u518c \u89e3\u51b3\u529e\u6cd5\uff1a \u9002\u5f53\u7684\u65f6\u5019\u89e3\u6ce8\u518c\u3002 \u68c0\u67e5\u5185\u5b58\u6cc4\u6f0f\u7684\u65b9\u6cd5 Android Studio\u81ea\u5e26\u7684Device Monitor\u89c2\u5bdf\u5185\u5b58\u72b6\u51b5\uff0c\u624b\u52a8GC\uff0cdump\u51fa\u5806\u7684hprof\u6587\u4ef6\uff0c\u5206\u6790\u5185\u5b58\u72b6\u51b5\u3002 \u4f7f\u7528DDMS\u548cMAT\u5de5\u5177\u5206\u6790\u5806\u7684\u72b6\u51b5\uff1b \u4f7f\u7528\u7b2c\u4e09\u65b9\u5de5\u5177\uff0cLeakCanary. LeakCanary\u7684\u539f\u7406\uff1a WeakReference\u52a0ReferenceQueue\uff0c\u8c03\u7528watch\u65b9\u6cd5\u65f6\uff0c\u4f1a\u6784\u9020\u4e00\u4e2a\u5f31\u5f15\u7528\uff0c\u5e76\u6307\u5b9a\u4e00\u4e2aReferenceQueue\uff0c\u5f53\u5f31\u5f15\u7528\u6307\u5411\u7684\u5bf9\u8c61\u88ab\u56de\u6536\u65f6\uff0c\u5c06\u5176\u52a0\u5165ReferenceQueue\uff0c\u56e0\u6b64\u5982\u679c\u671f\u671b\u4e00\u4e2a\u5bf9\u8c61\u88ab\u56de\u6536\uff0c\u90a3\u4e48\u5728\u9884\u671f\u7684\u65f6\u95f4\u5185\uff0c\u5728ReferenceQueue\u4e2d\u5e94\u8be5\u53ef\u4ee5\u627e\u5230\u5b83\uff0c\u6ca1\u627e\u5230\uff0c\u5219\u8868\u793a\u6709\u5185\u5b58\u6cc4\u6f0f\u3002 \u53c2\u8003: Android\u6027\u80fd\u4f18\u5316-\u5185\u5b58\u6cc4\u9732\u7684\u68c0\u67e5\u4e0e\u5904\u7406 LeakCanary \u5185\u5b58\u6cc4\u9732\u76d1\u6d4b\u539f\u7406\u7814\u7a76","title":"Android\u5185\u5b58\u6cc4\u6f0f"},{"location":"Android/1-Basic/Android-memory/#android","text":"","title":"Android\u5185\u5b58\u6cc4\u6f0f"},{"location":"Android/1-Basic/Android-memory/#_1","text":"Android\u5185\u5b58\u6cc4\u6f0f\u662f\u6307\u67d0\u4e9b\u5bf9\u8c61\u5b9e\u9645\u5df2\u7ecf\u6ca1\u6709\u4e86\u4f7f\u7528\u4ef7\u503c\uff0c\u4f46\u662f\u8fd8\u662f\u95f4\u63a5\u6216\u76f4\u63a5\u5f15\u7528GC Roots\uff0c\u5bfc\u81f4\u5bf9\u8c61\u65e0\u6cd5\u88ab\u56de\u6536\uff0c\u4e00\u76f4\u5360\u7528\u7740\u5185\u5b58\u7a7a\u95f4\u3002","title":"\u6982\u5ff5"},{"location":"Android/1-Basic/Android-memory/#_2","text":"\u5355\u4f8b\u6a21\u5f0f\u7684\u4e0d\u5f53\u4f7f\u7528 \u9759\u6001\u7684\u5355\u4f8b\u6a21\u5f0f\u4f1a\u5728\u5e94\u7528\u7684\u751f\u547d\u5468\u671f\u5185\u4e00\u76f4\u5b58\u5728\uff0c\u5982\u679c\u7a7f\u5165Activity\u7684Context\u5bf9\u8c61\uff0c\u4f1a\u5bfc\u81f4Activity\u5bf9\u8c61\u4e00\u76f4\u5f97\u4e0d\u5230\u91ca\u653e\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a \u5355\u4f8b\u6a21\u5f0f\u5fc5\u8981\u7684\u65f6\u5019\u624d\u4f7f\u7528\uff0c\u4f7f\u7528\u5355\u4f8b\u7684\u65f6\u5019\uff0c\u5982\u679c\u9700\u8981\u4f20\u5165Context\uff0c\u5c3d\u91cf\u4f7f\u7528Application\u7684Context. \u975e\u9759\u6001\u5185\u90e8\u7c7b \u975e\u9759\u6001\u5185\u90e8\u7c7b\u4f1a\u9690\u5f0f\u6301\u6709\u5916\u90e8\u7c7b\u7684\u5f15\u7528\uff0c\u5982\u679c\u5185\u90e8\u7c7b\u7684\u5b58\u6d3b\u5468\u671f\u6bd4\u8f83\u957f\uff0c\u4e5f\u4f1a\u9020\u6210\u5916\u90e8\u7c7b\u7684\u5bf9\u8c61\u5f97\u4e0d\u5230\u91ca\u653e\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a \u5fc5\u8981\u65f6\u4f7f\u7528\u9759\u6001\u5185\u90e8\u7c7b\u6216\u8005\u5916\u90e8\u7c7b\u4ee3\u66ff Handler\uff0cThread\uff0cTimer\u7b49 \u539f\u7406\u548c\u975e\u9759\u6001\u5185\u90e8\u7c7b\u7684\u539f\u7406\u7c7b\u4f3c\uff0c\u5728Activity\u4e2d\u5b9a\u4e49Handler\uff0cThread\uff0cTimer\u7b49\uff0c\u5b83\u4eec\u4f1a\u9690\u5f0f\u6301\u6709Activity\u7684\u5f15\u7528\uff0c\u5982\u679c\u6709\u5ef6\u65f6\u64cd\u4f5c\uff0c\u4f1a\u9020\u6210Activity\u7ed3\u675f\u4ee5\u540e\uff0c\u5185\u5b58\u5f97\u4e0d\u5230\u91ca\u653e\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a \u4f7f\u7528\u5f31\u5f15\u7528\u83b7\u53d6Activity\u5b9e\u4f8b\uff0c\u5728Activity\u7684onDestory()\u65b9\u6cd5\u4e2d\u53d6\u6d88Handler\u7684\u6d88\u606f\uff0c\u5173\u95ed\u7ebf\u7a0b\u6c60\uff0c\u53d6\u6d88Timer. WebView\u9020\u6210\u7684\u6cc4\u6f0f WebView\u52a0\u8f7d\u7f51\u9875\u4f1a\u5f00\u542f\u5f02\u6b65\u7ebf\u7a0b\uff0c\u9875\u9762\u7ed3\u675f\u4e4b\u540e\uff0c\u7ebf\u7a0b\u6ca1\u6709\u7ed3\u675f\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a 1. \u624b\u52a8\u8c03\u7528WebView\u7684onStop()\u548conDestroy()\u65b9\u6cd5\uff0c\u5728\u9875\u9762\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u79fb\u9664WebView\u6240\u6709\u7684\u5b50View; 2. \u4f7f\u7528\u591a\u8fdb\u7a0b\uff0c\u5c06\u52a0\u8f7d\u7f51\u9875\u7684Activity\u653e\u5728\u5355\u72ec\u7684\u8fdb\u7a0b\u4e2d\u3002 \u8d44\u6e90\u5bf9\u8c61\u672a\u5173\u95ed Cursor\uff0cIO\u6d41\u7b49\u5bf9\u8c61\u4f7f\u7528\u5b8c\u4e4b\u540e\u5fc5\u987b\u5173\u95ed\uff0c\u672a\u5173\u95ed\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a \u53ca\u65f6\u5173\u95ed\u8d44\u6e90\u5bf9\u8c61\u3002 BroadCastReceiver\uff0cEventBus\u7b49\u6ca1\u6709\u53ca\u65f6\u89e3\u6ce8\u518c \u89e3\u51b3\u529e\u6cd5\uff1a \u9002\u5f53\u7684\u65f6\u5019\u89e3\u6ce8\u518c\u3002","title":"\u5e38\u89c1\u7684\u5185\u5b58\u6cc4\u6f0f"},{"location":"Android/1-Basic/Android-memory/#_3","text":"Android Studio\u81ea\u5e26\u7684Device Monitor\u89c2\u5bdf\u5185\u5b58\u72b6\u51b5\uff0c\u624b\u52a8GC\uff0cdump\u51fa\u5806\u7684hprof\u6587\u4ef6\uff0c\u5206\u6790\u5185\u5b58\u72b6\u51b5\u3002 \u4f7f\u7528DDMS\u548cMAT\u5de5\u5177\u5206\u6790\u5806\u7684\u72b6\u51b5\uff1b \u4f7f\u7528\u7b2c\u4e09\u65b9\u5de5\u5177\uff0cLeakCanary. LeakCanary\u7684\u539f\u7406\uff1a WeakReference\u52a0ReferenceQueue\uff0c\u8c03\u7528watch\u65b9\u6cd5\u65f6\uff0c\u4f1a\u6784\u9020\u4e00\u4e2a\u5f31\u5f15\u7528\uff0c\u5e76\u6307\u5b9a\u4e00\u4e2aReferenceQueue\uff0c\u5f53\u5f31\u5f15\u7528\u6307\u5411\u7684\u5bf9\u8c61\u88ab\u56de\u6536\u65f6\uff0c\u5c06\u5176\u52a0\u5165ReferenceQueue\uff0c\u56e0\u6b64\u5982\u679c\u671f\u671b\u4e00\u4e2a\u5bf9\u8c61\u88ab\u56de\u6536\uff0c\u90a3\u4e48\u5728\u9884\u671f\u7684\u65f6\u95f4\u5185\uff0c\u5728ReferenceQueue\u4e2d\u5e94\u8be5\u53ef\u4ee5\u627e\u5230\u5b83\uff0c\u6ca1\u627e\u5230\uff0c\u5219\u8868\u793a\u6709\u5185\u5b58\u6cc4\u6f0f\u3002 \u53c2\u8003: Android\u6027\u80fd\u4f18\u5316-\u5185\u5b58\u6cc4\u9732\u7684\u68c0\u67e5\u4e0e\u5904\u7406 LeakCanary \u5185\u5b58\u6cc4\u9732\u76d1\u6d4b\u539f\u7406\u7814\u7a76","title":"\u68c0\u67e5\u5185\u5b58\u6cc4\u6f0f\u7684\u65b9\u6cd5"},{"location":"Android/1-Basic/Android-new-features/","text":"Android 5.0\u52307.0\u7684\u884c\u4e3a\u53d8\u66f4 Android 5.0(Lollipop) Android 5.0 \u884c\u4e3a\u53d8\u66f4 Android Runtime (ART)\u66ff\u4ee3\u4e86Dalvik \u901a\u77e5\u884c\u4e3a\u53d8\u66f4 Material Design \u58f0\u97f3\u548c\u9707\u52a8\u7684\u8bbe\u7f6e\u65b9\u5f0f\u53d8\u52a8 \u9501\u5b9a\u5c4f\u5e55\u53ef\u89c1\u6027\uff0c\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u4fdd\u62a4\u654f\u611f\u4fe1\u606f\u4e0d\u516c\u5f00\uff0c\u7f29\u51cf\u663e\u793a\u7684\u6587\u672c \u591a\u5a92\u4f53\u64ad\u653e\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684RemoteView \u6d6e\u52a8\u901a\u77e5 \u5a92\u4f53\u63a7\u4ef6\u548c RemoteControlClient getRecentTasks()\u5f03\u7528\uff0c\u5982\u679c\u60a8\u7684\u5e94\u7528\u4f7f\u7528\u6b64\u65b9\u6cd5\u68c0\u7d22\u5b83\u81ea\u5df1\u7684\u4efb\u52a1\uff0c\u5219\u6539\u7528 getAppTasks() \u68c0\u7d22\u8be5\u4fe1\u606f\u3002 Android NDK \u4e2d\u7684 64 \u4f4d\u652f\u6301 \u7ed1\u5b9a\u5230\u670d\u52a1\uff0cContext.bindService() \u65b9\u6cd5\u73b0\u5728\u9700\u8981\u663e\u5f0f Intent WebView\uff0c\u9ed8\u8ba4\u4f1a\u963b\u6b62\u7b2c\u4e09\u65b9Cookie\u548c\u6df7\u5408\u5185\u5bb9\uff0c\u7cfb\u7edf\u73b0\u5728\u53ef\u4ee5\u667a\u80fd\u5730\u9009\u62e9\u8981\u7ed8\u5236\u7684 HTML \u6587\u6863\u90e8\u5206 \u81ea\u5b9a\u4e49\u6743\u9650\u552f\u4e00\u6027\u8981\u6c42\uff0c\u53ea\u6709\u4e00\u4e2a\u5e94\u7528\u53ef\u4ee5\u5b9a\u4e49\u7ed9\u5b9a\u81ea\u5b9a\u4e49\u6743\u9650\uff0c\u9664\u975e\u4f7f\u7528\u4e0e\u5b9a\u4e49\u6743\u9650\u7684\u5176\u4ed6\u5e94\u7528\u76f8\u540c\u7684\u5bc6\u94a5\u8fdb\u884c\u7b7e\u540d TLS/SSL \u9ed8\u8ba4\u914d\u7f6e\u53d8\u66f4 \u652f\u6301\u6258\u7ba1\u914d\u7f6e\u6587\u4ef6 Android 6.0(Mushroom) Android 6.0\u884c\u4e3a\u53d8\u66f4 \u8fd0\u884c\u65f6\u6743\u9650 \u4f4e\u7535\u8017\u6a21\u5f0f\u548c\u5e94\u7528\u5f85\u673a\u6a21\u5f0f \u53d6\u6d88\u652f\u6301 Apache HTTP \u5ba2\u6237\u7aef \u7531OpenSSL\u8f6c\u5230BoringSSL \u786c\u4ef6\u6807\u8bc6\u7b26\u8bbf\u95ee\u6743 \u901a\u77e5 \u97f3\u9891\u7ba1\u7406\u5668\u53d8\u66f4 \u6587\u672c\u9009\u62e9 \u6d4f\u89c8\u5668\u4e66\u7b7e\u53d8\u66f4 Android \u5bc6\u94a5\u5e93\u53d8\u66f4 WLAN \u548c\u7f51\u7edc\u8fde\u63a5\u53d8\u66f4 \u76f8\u673a\u670d\u52a1\u53d8\u66f4 \u8fd0\u884c\u65f6 APK \u9a8c\u8bc1 USB \u8fde\u63a5 \u6307\u7eb9\u8eab\u4efd\u9a8c\u8bc1 \u53ef\u91c7\u7528\u7684\u5b58\u50a8\u8bbe\u5907\uff0c\u52a8\u6001\u8fd4\u56de\u6587\u4ef6\u8def\u5f84 Andorid 7.0(Nougat) Android 7.0 \u5f00\u53d1\u8005\u7248\u672c \u7535\u6c60\u548c\u5185\u5b58\uff0c\u79fb\u9664\u4e86\u4e00\u4e9b\u9690\u5f0f\u5e7f\u64ad \u6743\u9650\u66f4\u6539\uff0c\u79c1\u6709\u6587\u4ef6\u7684\u5b89\u5168\u6027\uff0c\u5206\u4eab\u79c1\u6709\u6587\u4ef6\u5185\u5bb9\u7684\u63a8\u8350\u65b9\u6cd5\u662f\u4f7f\u7528 FileProvider\u3002DownloadManager \u4e0d\u518d\u6309\u6587\u4ef6\u540d\u5206\u4eab\u79c1\u4eba\u5b58\u50a8\u7684\u6587\u4ef6\u3002Android \u6846\u67b6\u6267\u884c\u7684 StrictMode API \u653f\u7b56\u7981\u6b62\u5728\u60a8\u7684\u5e94\u7528\u5916\u90e8\u516c\u5f00 file:// URI\u3002 \u591a\u7a97\u53e3\u652f\u6301 \u914d\u7f6e\u6587\u4ef6\u6307\u5bfc\u7684 JIT/AOT \u7f16\u8bd1\uff0c\u5feb\u901f\u7684\u5e94\u7528\u5b89\u88c5\u8def\u5f84 \u968f\u65f6\u968f\u5730\u4f4e\u7535\u8017\u6a21\u5f0f... Android \u4e2d\u7684 ICU4J API WebView\uff0cChrome \u548c WebView \u914d\u5408\u4f7f\u7528\uff0c\u591a\u8fdb\u7a0b\uff0cJavascript \u5728\u9875\u9762\u52a0\u8f7d\u4e4b\u524d\u8fd0\u884c Android 8.0(O) \u5177\u900f | Android O \u7a81\u7136\u5c31\u6765\u4e86\uff0c\u9996\u4e2a\u5f00\u53d1\u8005\u9884\u89c8\u7248\u90fd\u6709\u54ea\u4e9b\u65b0\u4e1c\u897f\uff1f \u66f4\u6fc0\u8fdb\u7684\u540e\u53f0\u7ba1\u7406\u7b56\u7565 \u652f\u6301\u66f4\u9ad8\u9636\u7684\u84dd\u7259\u97f3\u9891\u89e3\u7801\u534f\u8bae \u591a\u6e20\u9053\u901a\u77e5\u5206\u7c7b, \u901a\u77e5\u5ef6\u540e\u529f\u80fd, \u72b6\u6001\u6807\u8bb0\uff08\u5e94\u7528\u89d2\u6807\uff09 XML \u5b57\u4f53\u652f\u6301 \u5bfc\u822a\u680f\u81ea\u5b9a\u4e49\u529f\u80fd","title":"Android\u5404\u7248\u672c\u7684\u884c\u4e3a\u53d8\u66f4"},{"location":"Android/1-Basic/Android-new-features/#android-5070","text":"","title":"Android 5.0\u52307.0\u7684\u884c\u4e3a\u53d8\u66f4"},{"location":"Android/1-Basic/Android-new-features/#android-50lollipop","text":"Android 5.0 \u884c\u4e3a\u53d8\u66f4 Android Runtime (ART)\u66ff\u4ee3\u4e86Dalvik \u901a\u77e5\u884c\u4e3a\u53d8\u66f4 Material Design \u58f0\u97f3\u548c\u9707\u52a8\u7684\u8bbe\u7f6e\u65b9\u5f0f\u53d8\u52a8 \u9501\u5b9a\u5c4f\u5e55\u53ef\u89c1\u6027\uff0c\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u4fdd\u62a4\u654f\u611f\u4fe1\u606f\u4e0d\u516c\u5f00\uff0c\u7f29\u51cf\u663e\u793a\u7684\u6587\u672c \u591a\u5a92\u4f53\u64ad\u653e\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684RemoteView \u6d6e\u52a8\u901a\u77e5 \u5a92\u4f53\u63a7\u4ef6\u548c RemoteControlClient getRecentTasks()\u5f03\u7528\uff0c\u5982\u679c\u60a8\u7684\u5e94\u7528\u4f7f\u7528\u6b64\u65b9\u6cd5\u68c0\u7d22\u5b83\u81ea\u5df1\u7684\u4efb\u52a1\uff0c\u5219\u6539\u7528 getAppTasks() \u68c0\u7d22\u8be5\u4fe1\u606f\u3002 Android NDK \u4e2d\u7684 64 \u4f4d\u652f\u6301 \u7ed1\u5b9a\u5230\u670d\u52a1\uff0cContext.bindService() \u65b9\u6cd5\u73b0\u5728\u9700\u8981\u663e\u5f0f Intent WebView\uff0c\u9ed8\u8ba4\u4f1a\u963b\u6b62\u7b2c\u4e09\u65b9Cookie\u548c\u6df7\u5408\u5185\u5bb9\uff0c\u7cfb\u7edf\u73b0\u5728\u53ef\u4ee5\u667a\u80fd\u5730\u9009\u62e9\u8981\u7ed8\u5236\u7684 HTML \u6587\u6863\u90e8\u5206 \u81ea\u5b9a\u4e49\u6743\u9650\u552f\u4e00\u6027\u8981\u6c42\uff0c\u53ea\u6709\u4e00\u4e2a\u5e94\u7528\u53ef\u4ee5\u5b9a\u4e49\u7ed9\u5b9a\u81ea\u5b9a\u4e49\u6743\u9650\uff0c\u9664\u975e\u4f7f\u7528\u4e0e\u5b9a\u4e49\u6743\u9650\u7684\u5176\u4ed6\u5e94\u7528\u76f8\u540c\u7684\u5bc6\u94a5\u8fdb\u884c\u7b7e\u540d TLS/SSL \u9ed8\u8ba4\u914d\u7f6e\u53d8\u66f4 \u652f\u6301\u6258\u7ba1\u914d\u7f6e\u6587\u4ef6","title":"Android 5.0(Lollipop)"},{"location":"Android/1-Basic/Android-new-features/#android-60mushroom","text":"Android 6.0\u884c\u4e3a\u53d8\u66f4 \u8fd0\u884c\u65f6\u6743\u9650 \u4f4e\u7535\u8017\u6a21\u5f0f\u548c\u5e94\u7528\u5f85\u673a\u6a21\u5f0f \u53d6\u6d88\u652f\u6301 Apache HTTP \u5ba2\u6237\u7aef \u7531OpenSSL\u8f6c\u5230BoringSSL \u786c\u4ef6\u6807\u8bc6\u7b26\u8bbf\u95ee\u6743 \u901a\u77e5 \u97f3\u9891\u7ba1\u7406\u5668\u53d8\u66f4 \u6587\u672c\u9009\u62e9 \u6d4f\u89c8\u5668\u4e66\u7b7e\u53d8\u66f4 Android \u5bc6\u94a5\u5e93\u53d8\u66f4 WLAN \u548c\u7f51\u7edc\u8fde\u63a5\u53d8\u66f4 \u76f8\u673a\u670d\u52a1\u53d8\u66f4 \u8fd0\u884c\u65f6 APK \u9a8c\u8bc1 USB \u8fde\u63a5 \u6307\u7eb9\u8eab\u4efd\u9a8c\u8bc1 \u53ef\u91c7\u7528\u7684\u5b58\u50a8\u8bbe\u5907\uff0c\u52a8\u6001\u8fd4\u56de\u6587\u4ef6\u8def\u5f84","title":"Android 6.0(Mushroom)"},{"location":"Android/1-Basic/Android-new-features/#andorid-70nougat","text":"Android 7.0 \u5f00\u53d1\u8005\u7248\u672c \u7535\u6c60\u548c\u5185\u5b58\uff0c\u79fb\u9664\u4e86\u4e00\u4e9b\u9690\u5f0f\u5e7f\u64ad \u6743\u9650\u66f4\u6539\uff0c\u79c1\u6709\u6587\u4ef6\u7684\u5b89\u5168\u6027\uff0c\u5206\u4eab\u79c1\u6709\u6587\u4ef6\u5185\u5bb9\u7684\u63a8\u8350\u65b9\u6cd5\u662f\u4f7f\u7528 FileProvider\u3002DownloadManager \u4e0d\u518d\u6309\u6587\u4ef6\u540d\u5206\u4eab\u79c1\u4eba\u5b58\u50a8\u7684\u6587\u4ef6\u3002Android \u6846\u67b6\u6267\u884c\u7684 StrictMode API \u653f\u7b56\u7981\u6b62\u5728\u60a8\u7684\u5e94\u7528\u5916\u90e8\u516c\u5f00 file:// URI\u3002 \u591a\u7a97\u53e3\u652f\u6301 \u914d\u7f6e\u6587\u4ef6\u6307\u5bfc\u7684 JIT/AOT \u7f16\u8bd1\uff0c\u5feb\u901f\u7684\u5e94\u7528\u5b89\u88c5\u8def\u5f84 \u968f\u65f6\u968f\u5730\u4f4e\u7535\u8017\u6a21\u5f0f... Android \u4e2d\u7684 ICU4J API WebView\uff0cChrome \u548c WebView \u914d\u5408\u4f7f\u7528\uff0c\u591a\u8fdb\u7a0b\uff0cJavascript \u5728\u9875\u9762\u52a0\u8f7d\u4e4b\u524d\u8fd0\u884c","title":"Andorid 7.0(Nougat)"},{"location":"Android/1-Basic/Android-new-features/#android-80o","text":"\u5177\u900f | Android O \u7a81\u7136\u5c31\u6765\u4e86\uff0c\u9996\u4e2a\u5f00\u53d1\u8005\u9884\u89c8\u7248\u90fd\u6709\u54ea\u4e9b\u65b0\u4e1c\u897f\uff1f \u66f4\u6fc0\u8fdb\u7684\u540e\u53f0\u7ba1\u7406\u7b56\u7565 \u652f\u6301\u66f4\u9ad8\u9636\u7684\u84dd\u7259\u97f3\u9891\u89e3\u7801\u534f\u8bae \u591a\u6e20\u9053\u901a\u77e5\u5206\u7c7b, \u901a\u77e5\u5ef6\u540e\u529f\u80fd, \u72b6\u6001\u6807\u8bb0\uff08\u5e94\u7528\u89d2\u6807\uff09 XML \u5b57\u4f53\u652f\u6301 \u5bfc\u822a\u680f\u81ea\u5b9a\u4e49\u529f\u80fd","title":"Android 8.0(O)"},{"location":"Android/1-Basic/Android-window/","text":"\u7406\u89e3Activity\uff0cView\uff0cWindow\u4e09\u8005\u5173\u7cfb \u8fd9\u4e2a\u95ee\u9898\u771f\u7684\u5f88\u4e0d\u597d\u56de\u7b54\u3002\u6240\u4ee5\u8fd9\u91cc\u5148\u6765\u4e2a\u7b97\u662f\u6bd4\u8f83\u6070\u5f53\u7684\u6bd4\u55bb\u6765\u5f62\u5bb9\u4e0b\u5b83\u4eec\u7684\u5173\u7cfb\u5427\u3002Activity\u50cf\u4e00\u4e2a\u5de5\u5320\uff08\u63a7\u5236\u5355\u5143\uff09\uff0cWindow\u50cf\u7a97\u6237\uff08\u627f\u8f7d\u6a21\u578b\uff09\uff0cView\u50cf\u7a97\u82b1\uff08\u663e\u793a\u89c6\u56fe\uff09LayoutInflater\u50cf\u526a\u5200\uff0cXml\u914d\u7f6e\u50cf\u7a97\u82b1\u56fe\u7eb8\u3002 1\u3001Activity\u6784\u9020\u7684\u65f6\u5019\u4f1a\u521d\u59cb\u5316\u4e00\u4e2aWindow\uff0c\u51c6\u786e\u7684\u8bf4\u662fPhoneWindow\u3002 2\u3001\u8fd9\u4e2aPhoneWindow\u6709\u4e00\u4e2a\u201cViewRoot\u201d\uff0c\u8fd9\u4e2a\u201cViewRoot\u201d\u662f\u4e00\u4e2aView\u6216\u8005\u8bf4ViewGroup\uff0c\u662f\u6700\u521d\u59cb\u7684\u6839\u89c6\u56fe\u3002 3\u3001\u201cViewRoot\u201d\u901a\u8fc7addView\u65b9\u6cd5\u6765\u4e00\u4e2a\u4e2a\u7684\u6dfb\u52a0View\u3002\u6bd4\u5982TextView\uff0cButton\u7b49 4\u3001\u8fd9\u4e9bView\u7684\u4e8b\u4ef6\u76d1\u542c\uff0c\u662f\u7531WindowManagerService\u6765\u63a5\u53d7\u6d88\u606f\uff0c\u5e76\u4e14\u56de\u8c03Activity\u51fd\u6570\u3002\u6bd4\u5982onClickListener\uff0conKeyDown\u7b49\u3002 Activity Window View\u4e4b\u95f4\u7684\u4e09\u89d2\u5173\u7cfb \u7406\u6e05Activity\u3001View\u53caWindow\u4e4b\u95f4\u5173\u7cfb","title":"\u7406\u89e3Activity\uff0cView\uff0cWindow\u4e09\u8005\u5173\u7cfb"},{"location":"Android/1-Basic/Android-window/#activityviewwindow","text":"\u8fd9\u4e2a\u95ee\u9898\u771f\u7684\u5f88\u4e0d\u597d\u56de\u7b54\u3002\u6240\u4ee5\u8fd9\u91cc\u5148\u6765\u4e2a\u7b97\u662f\u6bd4\u8f83\u6070\u5f53\u7684\u6bd4\u55bb\u6765\u5f62\u5bb9\u4e0b\u5b83\u4eec\u7684\u5173\u7cfb\u5427\u3002Activity\u50cf\u4e00\u4e2a\u5de5\u5320\uff08\u63a7\u5236\u5355\u5143\uff09\uff0cWindow\u50cf\u7a97\u6237\uff08\u627f\u8f7d\u6a21\u578b\uff09\uff0cView\u50cf\u7a97\u82b1\uff08\u663e\u793a\u89c6\u56fe\uff09LayoutInflater\u50cf\u526a\u5200\uff0cXml\u914d\u7f6e\u50cf\u7a97\u82b1\u56fe\u7eb8\u3002 1\u3001Activity\u6784\u9020\u7684\u65f6\u5019\u4f1a\u521d\u59cb\u5316\u4e00\u4e2aWindow\uff0c\u51c6\u786e\u7684\u8bf4\u662fPhoneWindow\u3002 2\u3001\u8fd9\u4e2aPhoneWindow\u6709\u4e00\u4e2a\u201cViewRoot\u201d\uff0c\u8fd9\u4e2a\u201cViewRoot\u201d\u662f\u4e00\u4e2aView\u6216\u8005\u8bf4ViewGroup\uff0c\u662f\u6700\u521d\u59cb\u7684\u6839\u89c6\u56fe\u3002 3\u3001\u201cViewRoot\u201d\u901a\u8fc7addView\u65b9\u6cd5\u6765\u4e00\u4e2a\u4e2a\u7684\u6dfb\u52a0View\u3002\u6bd4\u5982TextView\uff0cButton\u7b49 4\u3001\u8fd9\u4e9bView\u7684\u4e8b\u4ef6\u76d1\u542c\uff0c\u662f\u7531WindowManagerService\u6765\u63a5\u53d7\u6d88\u606f\uff0c\u5e76\u4e14\u56de\u8c03Activity\u51fd\u6570\u3002\u6bd4\u5982onClickListener\uff0conKeyDown\u7b49\u3002 Activity Window View\u4e4b\u95f4\u7684\u4e09\u89d2\u5173\u7cfb \u7406\u6e05Activity\u3001View\u53caWindow\u4e4b\u95f4\u5173\u7cfb","title":"\u7406\u89e3Activity\uff0cView\uff0cWindow\u4e09\u8005\u5173\u7cfb"},{"location":"Android/1-Basic/Animations/","text":"Android\u52a8\u753b\u7b80\u4ecb ViewAnimation ViewAnimation\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u52a8\u753b\uff0c\u4e00\u5171\u67094\u79cdalpha, rotate, translate, scale. \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cViewAnimation\u5e76\u4e0d\u4f1a\u6539\u53d8View\u672c\u8eab\u7684\u5c5e\u6027\u3002 \u4f7f\u7528\u65b9\u6cd5 \u4f7f\u7528xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <set xmlns:android= \"http://schemas.android.com/apk/res/android\" > <alpha android:duration= \"300\" android:fromAlpha= \"1.0\" android:toAlpha= \"0.0\" /> </set> view . startAnimation ( AnimationUtils . loadAnimation ( context , R . anim . alpha )); \u4ee3\u7801\u5b9e\u73b0 TranslateAnimation translateAnimation = new TranslateAnimation ( Animation . RELATIVE_TO_SELF , 0f , Animation . RELATIVE_TO_SELF , 100 f , Animation . RELATIVE_TO_SELF , 0f , Animation . RELATIVE_TO_SELF , 100 f ); translateAnimation . setDuration ( 1000 ); view . startAnimation ( translateAnimation ); DrawableAnimation DrawableAnimation\u662f\u901a\u8fc7\u8bbe\u7f6e\u4e00\u7ec4\u56fe\u7247\uff0c\u7136\u540e\u987a\u5e8f\u64ad\u653e\u6765\u5b9e\u73b0\u52a8\u753b\uff0c\u6bd4\u5982ImageView\u7684\u80cc\u666f\u3002 \u4f7f\u7528\u65b9\u6cd5 \u548cViewAnimation\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u901a\u8fc7xml\u548c\u4ee3\u7801\u6765\u5b9e\u73b0\u3002 - xml\u65b9\u5f0f \u5728drawable\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa <animation-list xmlns:android= \"http://schemas.android.com/apk/res/android\" android:oneshot= \"false\" > <item android:drawable= \"@drawable/ic_battery_charging_20\" android:duration= \"300\" /> <item android:drawable= \"@drawable/ic_battery_charging_30\" android:duration= \"300\" /> </animation-list> \u5728\u4ee3\u7801\u4e2d view . setBackgroundResource ( R . drawable . charging ); (( AnimationDrawable ) view . getBackground ()). start () \u7eaf\u4ee3\u7801 animationDrawable = new AnimationDrawable (); Drawable drawable = getResources (). getDrawable ( R . drawable . image ); animationDrawable . addFrame ( mDrawable , 500 ); animationDrawable . setOneShot ( false ); view . setBackgroundDrawable ( animationDrawable ); animationDrawable . start (); PropertyAnimation PropertyAnimation\u662fAndroid 3.0\uff08API 11\uff09\u4e4b\u540e\u5f15\u5165\u7684\u52a8\u753b\uff0c\u5b83\u662f\u901a\u8fc7\u771f\u5b9e\u7684\u6539\u53d8View\u7684\u503c\u6765\u5b9e\u73b0\u7684\u52a8\u753b\uff0c\u662f\u6700\u5f3a\u5927\u7684\u52a8\u753b\u3002\u53ea\u8981\u662fView\u7684set\u65b9\u6cd5\u53ef\u4ee5\u8bbe\u7f6e\u7684\u5c5e\u6027\uff0c\u90fd\u53ef\u4ee5\u8fdb\u884c\u52a8\u753b\uff0c\u6bd4\u5982scale\uff0cbackgroudColor\uff0calpha\u7b49\u7b49\u3002 \u7528\u6cd5 \u548c\u5176\u4ed6\u4e24\u79cd\u52a8\u753b\u4e00\u6837\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7xml\u548c\u4ee3\u7801\u7684\u5f62\u5f0f\u6765\u5b9e\u73b0\u3002 - \u901a\u8fc7xml\u7684\u65f6\u5019\uff0c\u9700\u8981\u5148\u5b9a\u4e49animator-list\uff0c\u5728\u5176\u4e2d\u5199\u5c5e\u6027\u52a8\u753b\uff0c\u53ef\u4ee5\u987a\u5e8f\u64ad\u653e\uff0c\u4e5f\u53ef\u4ee5\u540c\u65f6\u64ad\u653e\uff0c\u901a\u8fc7AnimatorInflater.loadAnimato(context, animator)\uff1b - \u901a\u8fc7\u4ee3\u7801\uff0cObjectAnimator.of(view, propertyName, args)\u6765\u5b9e\u73b0\u3002 \u81ea\u5b9a\u4e49\u5c5e\u6027\u52a8\u753b ValueAnimator animator = ValueAnimator . ofObject ( new TypeEvaluator () { @Override public Object evaluate ( float fraction , Object startValue , Object endValue ) { return null ; } } , 0 , 100 ); animator . addUpdateListener ( new ValueAnimator . AnimatorUpdateListener () { @Override public void onAnimationUpdate ( ValueAnimator animation ) { //\u8bbe\u7f6eView\u7684\u5c5e\u6027 } }); animator . setDuration ( 2000 ); animator . start (); Animation\u4e0eAnimator\u7684\u533a\u522b Animation\u662f\u6539\u53d8View\u7684\u5916\u89c2\uff0c\u5b9e\u9645\u4e0d\u4f1a\u6539\u53d8View\u7684\u4f4d\u7f6e\uff1b Animator\u662f\u6539\u53d8View\u7684\u5c5e\u6027\uff0c\u771f\u6b63\u6539\u53d8\u4e86View\u7684\u5c5e\u6027\u3002 Android \u52a8\u753b,\u770b\u5b8c\u8fd9\u4e9b\u8fd8\u4e0d\u591f","title":"Android\u52a8\u753b\u7b80\u4ecb"},{"location":"Android/1-Basic/Animations/#android","text":"","title":"Android\u52a8\u753b\u7b80\u4ecb"},{"location":"Android/1-Basic/Animations/#viewanimation","text":"ViewAnimation\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u52a8\u753b\uff0c\u4e00\u5171\u67094\u79cdalpha, rotate, translate, scale. \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cViewAnimation\u5e76\u4e0d\u4f1a\u6539\u53d8View\u672c\u8eab\u7684\u5c5e\u6027\u3002 \u4f7f\u7528\u65b9\u6cd5 \u4f7f\u7528xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <set xmlns:android= \"http://schemas.android.com/apk/res/android\" > <alpha android:duration= \"300\" android:fromAlpha= \"1.0\" android:toAlpha= \"0.0\" /> </set> view . startAnimation ( AnimationUtils . loadAnimation ( context , R . anim . alpha )); \u4ee3\u7801\u5b9e\u73b0 TranslateAnimation translateAnimation = new TranslateAnimation ( Animation . RELATIVE_TO_SELF , 0f , Animation . RELATIVE_TO_SELF , 100 f , Animation . RELATIVE_TO_SELF , 0f , Animation . RELATIVE_TO_SELF , 100 f ); translateAnimation . setDuration ( 1000 ); view . startAnimation ( translateAnimation );","title":"ViewAnimation"},{"location":"Android/1-Basic/Animations/#drawableanimation","text":"DrawableAnimation\u662f\u901a\u8fc7\u8bbe\u7f6e\u4e00\u7ec4\u56fe\u7247\uff0c\u7136\u540e\u987a\u5e8f\u64ad\u653e\u6765\u5b9e\u73b0\u52a8\u753b\uff0c\u6bd4\u5982ImageView\u7684\u80cc\u666f\u3002 \u4f7f\u7528\u65b9\u6cd5 \u548cViewAnimation\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u901a\u8fc7xml\u548c\u4ee3\u7801\u6765\u5b9e\u73b0\u3002 - xml\u65b9\u5f0f \u5728drawable\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa <animation-list xmlns:android= \"http://schemas.android.com/apk/res/android\" android:oneshot= \"false\" > <item android:drawable= \"@drawable/ic_battery_charging_20\" android:duration= \"300\" /> <item android:drawable= \"@drawable/ic_battery_charging_30\" android:duration= \"300\" /> </animation-list> \u5728\u4ee3\u7801\u4e2d view . setBackgroundResource ( R . drawable . charging ); (( AnimationDrawable ) view . getBackground ()). start () \u7eaf\u4ee3\u7801 animationDrawable = new AnimationDrawable (); Drawable drawable = getResources (). getDrawable ( R . drawable . image ); animationDrawable . addFrame ( mDrawable , 500 ); animationDrawable . setOneShot ( false ); view . setBackgroundDrawable ( animationDrawable ); animationDrawable . start ();","title":"DrawableAnimation"},{"location":"Android/1-Basic/Animations/#propertyanimation","text":"PropertyAnimation\u662fAndroid 3.0\uff08API 11\uff09\u4e4b\u540e\u5f15\u5165\u7684\u52a8\u753b\uff0c\u5b83\u662f\u901a\u8fc7\u771f\u5b9e\u7684\u6539\u53d8View\u7684\u503c\u6765\u5b9e\u73b0\u7684\u52a8\u753b\uff0c\u662f\u6700\u5f3a\u5927\u7684\u52a8\u753b\u3002\u53ea\u8981\u662fView\u7684set\u65b9\u6cd5\u53ef\u4ee5\u8bbe\u7f6e\u7684\u5c5e\u6027\uff0c\u90fd\u53ef\u4ee5\u8fdb\u884c\u52a8\u753b\uff0c\u6bd4\u5982scale\uff0cbackgroudColor\uff0calpha\u7b49\u7b49\u3002 \u7528\u6cd5 \u548c\u5176\u4ed6\u4e24\u79cd\u52a8\u753b\u4e00\u6837\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7xml\u548c\u4ee3\u7801\u7684\u5f62\u5f0f\u6765\u5b9e\u73b0\u3002 - \u901a\u8fc7xml\u7684\u65f6\u5019\uff0c\u9700\u8981\u5148\u5b9a\u4e49animator-list\uff0c\u5728\u5176\u4e2d\u5199\u5c5e\u6027\u52a8\u753b\uff0c\u53ef\u4ee5\u987a\u5e8f\u64ad\u653e\uff0c\u4e5f\u53ef\u4ee5\u540c\u65f6\u64ad\u653e\uff0c\u901a\u8fc7AnimatorInflater.loadAnimato(context, animator)\uff1b - \u901a\u8fc7\u4ee3\u7801\uff0cObjectAnimator.of(view, propertyName, args)\u6765\u5b9e\u73b0\u3002 \u81ea\u5b9a\u4e49\u5c5e\u6027\u52a8\u753b ValueAnimator animator = ValueAnimator . ofObject ( new TypeEvaluator () { @Override public Object evaluate ( float fraction , Object startValue , Object endValue ) { return null ; } } , 0 , 100 ); animator . addUpdateListener ( new ValueAnimator . AnimatorUpdateListener () { @Override public void onAnimationUpdate ( ValueAnimator animation ) { //\u8bbe\u7f6eView\u7684\u5c5e\u6027 } }); animator . setDuration ( 2000 ); animator . start ();","title":"PropertyAnimation"},{"location":"Android/1-Basic/Animations/#animationanimator","text":"Animation\u662f\u6539\u53d8View\u7684\u5916\u89c2\uff0c\u5b9e\u9645\u4e0d\u4f1a\u6539\u53d8View\u7684\u4f4d\u7f6e\uff1b Animator\u662f\u6539\u53d8View\u7684\u5c5e\u6027\uff0c\u771f\u6b63\u6539\u53d8\u4e86View\u7684\u5c5e\u6027\u3002 Android \u52a8\u753b,\u770b\u5b8c\u8fd9\u4e9b\u8fd8\u4e0d\u591f","title":"Animation\u4e0eAnimator\u7684\u533a\u522b"},{"location":"Android/1-Basic/AsyncTask/","text":"AsyncTask\u539f\u7406\u89e3\u6790 AsyncTask\u4f7f\u7528\u9650\u5236 4.1\u4e4b\u524d\uff0cAsyncTask\u7c7b\u5fc5\u987b\u5728UI\u7ebf\u7a0b\u4e2d\u52a0\u8f7d\uff0c4.1\u4e4b\u540e\uff0c\u7cfb\u7edf\u5904\u7406\u8fc7\uff0c\u5728ActivityThread\u4e2d\u52a0\u8f7d\uff1b AsyncTask\u5bf9\u8c61\u5fc5\u987b\u5728UI\u7ebf\u7a0b\u4e2d\u521b\u5efa\uff1b execute()\u65b9\u6cd5\u4e5f\u5fc5\u987b\u5728UI\u7ebf\u7a0b\u4e2d\u8c03\u7528\uff1b onXXX\u65b9\u6cd5\u4e0d\u80fd\u624b\u52a8\u8c03\u7528\uff1b \u4e0d\u80fd\u591f\u5904\u7406\u592a\u8017\u65f6\u7684\u4efb\u52a1\uff1b execute()\u65b9\u6cd5\u53ea\u80fd\u8c03\u7528\u4e00\u6b21\uff1b 1.6\u4e4b\u524d\uff0c\u4efb\u52a1\u662f\u4e32\u884c\u6267\u884c\u7684\uff0c\u4e4b\u540e\u76f4\u52303.0\u662f\u5e76\u884c\u7684\uff0c\u4e4b\u540e\u7531\u6539\u6210\u4e86\u4e32\u884c\uff1b AsyncTask\u6e90\u7801\u89e3\u6790 AsyncTask\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u521d\u59cb\u5316\u4e86\u4e00\u4e2aWorkerRunnable \u548cFutureTask \u5bf9\u8c61\uff0c\u5206\u522b\u662fmWorker\u548cmFuture\u3002 \u5176\u4e2d\uff0cmWorker\u5b9e\u73b0\u4e86Callable\u63a5\u53e3\uff0c\u7528\u6765\u6267\u884cdoInBackground()\u65b9\u6cd5\u4e2d\u7684\u4ee3\u7801\uff0c\u901a\u8fc7Process.setThreadPriority()\u8bbe\u7f6e\u4e3a\u540e\u53f0\u6267\u884c\uff0cWorker\u4f5c\u4e3aFutureTask\u7684\u8303\u578b\u53c2\u6570\uff0c\u5b9e\u9645\u4e0a\u662fFutureTask\u5bf9Worker\u8fdb\u884c\u4e86\u4e00\u6b21\u5305\u88c5\uff1b \u6267\u884cexecute()\u65b9\u6cd5\u65f6\uff0c\u4f1a\u8c03\u7528executeOnExecutor()\u65b9\u6cd5\u5e76\u4f20\u5165sDefaultExecutor\uff1bsDefaultExecutor\u662f\u4e00\u4e2aSerialExecutor\uff0c\u662fAsyncTask\u5185\u90e8\u7684\u4e00\u4e2a\u4e32\u884c\u7684\u7ebf\u7a0b\u6c60\uff1b \u6267\u884cexecuteOnExecutor\u65b9\u6cd5\u65f6\uff0c\u4f1a\u628aParams\u53c2\u6570\u590d\u5236\u7ed9mWorker\u5bf9\u8c61\uff0c\u5728\u628amFuture\u5bf9\u8c61\u653e\u5165\u53c2\u6570\u4e2d\u7684\u7ebf\u7a0b\u6c60\u4e2d\u5f00\u59cb\u6267\u884c\u4efb\u52a1\uff1b AsyncTask\u5185\u90e8\u8fd8\u6709\u4e00\u4e2aInternalHandler\uff0c\u662f\u4e00\u4e2a\u5355\u4f8b\uff0c\u901a\u8fc7getHandler\u83b7\u5f97\uff0c\u5b83\u7684handleMessage\u65b9\u6cd5\u4e2d\u5904\u7406MESSAGE_POST_PROGRESS\u548cMESSAGE_POST_RESULT\u4e24\u79cd\u6d88\u606f\uff1b \u8c03\u7528publishProgress()\u65b9\u6cd5\u65f6\uff0c\u4f1a\u901a\u8fc7handler\u53d1\u9001MESSAGE_POST_PROGRESS\u6d88\u606f\uff0c\u66f4\u65b0\u8fdb\u5ea6\uff1bmWorker\u4e2ddoInBackground\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u901a\u8fc7handler\u5206\u53d1\u5230\u4e3b\u7ebf\u7a0b\u4e2d Callable\u3001Future\u548cFutureTask \u5728Java\u591a\u7ebf\u7a0b\u4e2d\uff0c\u7ee7\u627fThread\u548c\u5b9e\u73b0Runnable\u63a5\u53e3\u90fd\u53ef\u4ee5\u5b9e\u73b0\u591a\u7ebf\u7a0b\uff0c\u4f46\u662f\u6ca1\u529e\u6cd5\u83b7\u53d6\u8fd4\u56de\u7684\u7ed3\u679c\uff0cFuture\u53ef\u4ee5\u5b9e\u73b0\u83b7\u53d6\u7ed3\u679c\u3002 Callable\uff0c\u63a5\u53e3\uff0c\u6709\u4e00\u4e2acall\u65b9\u6cd5\uff1b Future \uff0c\u63a5\u53e3\uff0c\u6709cancel\uff0cisCanceled\uff0cisDone\uff0cget\u7b49\u65b9\u6cd5\uff1b FutureTask \uff0c\u5b9e\u73b0\u4e86RunnableFuture\u63a5\u53e3\uff0cRunnableFuture\u63a5\u53e3\u7ee7\u627f\u4e86Future\u548cRunnable\u63a5\u53e3\u3002 Future\uff0cCallable\u4e00\u822c\u548cExecutorService\u4e00\u8d77\u4f7f\u7528\uff0cExecutorService.submit(...)\u65b9\u6cd5\u4f1a\u8fd4\u56deFuture\u5bf9\u8c61\u3002 \u6df1\u5165\u7406\u89e3AsyncTask\u539f\u7406 Android\u6e90\u7801\u5206\u6790\u2014\u5e26\u4f60\u8ba4\u8bc6\u4e0d\u4e00\u6837\u7684AsyncTask Java\u5e76\u53d1\u7f16\u7a0b\uff1aCallable\u3001Future\u548cFutureTask","title":"AsyncTask\u539f\u7406\u89e3\u6790"},{"location":"Android/1-Basic/AsyncTask/#asynctask","text":"","title":"AsyncTask\u539f\u7406\u89e3\u6790"},{"location":"Android/1-Basic/AsyncTask/#asynctask_1","text":"4.1\u4e4b\u524d\uff0cAsyncTask\u7c7b\u5fc5\u987b\u5728UI\u7ebf\u7a0b\u4e2d\u52a0\u8f7d\uff0c4.1\u4e4b\u540e\uff0c\u7cfb\u7edf\u5904\u7406\u8fc7\uff0c\u5728ActivityThread\u4e2d\u52a0\u8f7d\uff1b AsyncTask\u5bf9\u8c61\u5fc5\u987b\u5728UI\u7ebf\u7a0b\u4e2d\u521b\u5efa\uff1b execute()\u65b9\u6cd5\u4e5f\u5fc5\u987b\u5728UI\u7ebf\u7a0b\u4e2d\u8c03\u7528\uff1b onXXX\u65b9\u6cd5\u4e0d\u80fd\u624b\u52a8\u8c03\u7528\uff1b \u4e0d\u80fd\u591f\u5904\u7406\u592a\u8017\u65f6\u7684\u4efb\u52a1\uff1b execute()\u65b9\u6cd5\u53ea\u80fd\u8c03\u7528\u4e00\u6b21\uff1b 1.6\u4e4b\u524d\uff0c\u4efb\u52a1\u662f\u4e32\u884c\u6267\u884c\u7684\uff0c\u4e4b\u540e\u76f4\u52303.0\u662f\u5e76\u884c\u7684\uff0c\u4e4b\u540e\u7531\u6539\u6210\u4e86\u4e32\u884c\uff1b","title":"AsyncTask\u4f7f\u7528\u9650\u5236"},{"location":"Android/1-Basic/AsyncTask/#asynctask_2","text":"AsyncTask\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u521d\u59cb\u5316\u4e86\u4e00\u4e2aWorkerRunnable \u548cFutureTask \u5bf9\u8c61\uff0c\u5206\u522b\u662fmWorker\u548cmFuture\u3002 \u5176\u4e2d\uff0cmWorker\u5b9e\u73b0\u4e86Callable\u63a5\u53e3\uff0c\u7528\u6765\u6267\u884cdoInBackground()\u65b9\u6cd5\u4e2d\u7684\u4ee3\u7801\uff0c\u901a\u8fc7Process.setThreadPriority()\u8bbe\u7f6e\u4e3a\u540e\u53f0\u6267\u884c\uff0cWorker\u4f5c\u4e3aFutureTask\u7684\u8303\u578b\u53c2\u6570\uff0c\u5b9e\u9645\u4e0a\u662fFutureTask\u5bf9Worker\u8fdb\u884c\u4e86\u4e00\u6b21\u5305\u88c5\uff1b \u6267\u884cexecute()\u65b9\u6cd5\u65f6\uff0c\u4f1a\u8c03\u7528executeOnExecutor()\u65b9\u6cd5\u5e76\u4f20\u5165sDefaultExecutor\uff1bsDefaultExecutor\u662f\u4e00\u4e2aSerialExecutor\uff0c\u662fAsyncTask\u5185\u90e8\u7684\u4e00\u4e2a\u4e32\u884c\u7684\u7ebf\u7a0b\u6c60\uff1b \u6267\u884cexecuteOnExecutor\u65b9\u6cd5\u65f6\uff0c\u4f1a\u628aParams\u53c2\u6570\u590d\u5236\u7ed9mWorker\u5bf9\u8c61\uff0c\u5728\u628amFuture\u5bf9\u8c61\u653e\u5165\u53c2\u6570\u4e2d\u7684\u7ebf\u7a0b\u6c60\u4e2d\u5f00\u59cb\u6267\u884c\u4efb\u52a1\uff1b AsyncTask\u5185\u90e8\u8fd8\u6709\u4e00\u4e2aInternalHandler\uff0c\u662f\u4e00\u4e2a\u5355\u4f8b\uff0c\u901a\u8fc7getHandler\u83b7\u5f97\uff0c\u5b83\u7684handleMessage\u65b9\u6cd5\u4e2d\u5904\u7406MESSAGE_POST_PROGRESS\u548cMESSAGE_POST_RESULT\u4e24\u79cd\u6d88\u606f\uff1b \u8c03\u7528publishProgress()\u65b9\u6cd5\u65f6\uff0c\u4f1a\u901a\u8fc7handler\u53d1\u9001MESSAGE_POST_PROGRESS\u6d88\u606f\uff0c\u66f4\u65b0\u8fdb\u5ea6\uff1bmWorker\u4e2ddoInBackground\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u901a\u8fc7handler\u5206\u53d1\u5230\u4e3b\u7ebf\u7a0b\u4e2d","title":"AsyncTask\u6e90\u7801\u89e3\u6790"},{"location":"Android/1-Basic/AsyncTask/#callablefuturefuturetask","text":"\u5728Java\u591a\u7ebf\u7a0b\u4e2d\uff0c\u7ee7\u627fThread\u548c\u5b9e\u73b0Runnable\u63a5\u53e3\u90fd\u53ef\u4ee5\u5b9e\u73b0\u591a\u7ebf\u7a0b\uff0c\u4f46\u662f\u6ca1\u529e\u6cd5\u83b7\u53d6\u8fd4\u56de\u7684\u7ed3\u679c\uff0cFuture\u53ef\u4ee5\u5b9e\u73b0\u83b7\u53d6\u7ed3\u679c\u3002 Callable\uff0c\u63a5\u53e3\uff0c\u6709\u4e00\u4e2acall\u65b9\u6cd5\uff1b Future \uff0c\u63a5\u53e3\uff0c\u6709cancel\uff0cisCanceled\uff0cisDone\uff0cget\u7b49\u65b9\u6cd5\uff1b FutureTask \uff0c\u5b9e\u73b0\u4e86RunnableFuture\u63a5\u53e3\uff0cRunnableFuture\u63a5\u53e3\u7ee7\u627f\u4e86Future\u548cRunnable\u63a5\u53e3\u3002 Future\uff0cCallable\u4e00\u822c\u548cExecutorService\u4e00\u8d77\u4f7f\u7528\uff0cExecutorService.submit(...)\u65b9\u6cd5\u4f1a\u8fd4\u56deFuture\u5bf9\u8c61\u3002 \u6df1\u5165\u7406\u89e3AsyncTask\u539f\u7406 Android\u6e90\u7801\u5206\u6790\u2014\u5e26\u4f60\u8ba4\u8bc6\u4e0d\u4e00\u6837\u7684AsyncTask Java\u5e76\u53d1\u7f16\u7a0b\uff1aCallable\u3001Future\u548cFutureTask","title":"Callable\u3001Future\u548cFutureTask"},{"location":"Android/1-Basic/Fresco/","text":"Fresco\u76f8\u5173 Fresco\u7684\u4f18\u52bf \u5728 Android5.0 \u4ee5\u4e0b\u7cfb\u7edf\uff0c\u56fe\u7247\u4e0d\u5b58\u50a8\u5728 Java heap \u4e2d\uff0c\u800c\u662f\u5b58\u50a8\u5728 ashmemheap \u4e2d\uff0c\u5728\u56fe\u7247\u4e0d\u663e\u793a\u7684\u65f6\u5019\uff0c\u5360\u7528\u7684\u5185\u5b58\u4f1a\u81ea\u52a8\u91ca\u653e\uff0c\u964d\u4f4e\u4e86 OOM \u7684\u98ce\u9669 \u53ef\u4ee5\u5b9e\u73b0\u6e10\u8fdb\u5f0f\u7684 JPEG \u56fe\u7247\u5448\u73b0 \u652f\u6301 gif \u548c WebP \u683c\u5f0f\u56fe\u7247\u52a0\u8f7d image pipeline \u8bbe\u8ba1\u5141\u8bb8\u591a\u65b9\u9762\u63a7\u5236\u56fe\u7247\u7684\u52a0\u8f7d Drawees \u8bbe\u8ba1\u5141\u8bb8\u591a\u79cd\u65b9\u5f0f\u5904\u7406\u56fe\u7247\u7684\u5448\u73b0 ImagePipeline \u52a0\u8f7d\u56fe\u50cf\u6d41\u7a0b \u68c0\u67e5\u5185\u5b58\u7f13\u5b58\uff0c\u5982\u6709\uff0c\u8fd4\u56de \u540e\u53f0\u7ebf\u7a0b\u5f00\u59cb\u540e\u7eed\u5de5\u4f5c \u68c0\u67e5\u662f\u5426\u5728\u672a\u89e3\u7801\u5185\u5b58\u7f13\u5b58\u4e2d\u3002\u5982\u6709\uff0c\u89e3\u7801\uff0c\u53d8\u6362\uff0c\u8fd4\u56de\uff0c\u7136\u540e\u7f13\u5b58\u5230\u5185\u5b58\u7f13\u5b58\u4e2d\u3002 \u68c0\u67e5\u662f\u5426\u5728\u78c1\u76d8\u7f13\u5b58\u4e2d\uff0c\u5982\u679c\u6709\uff0c\u53d8\u6362\uff0c\u8fd4\u56de\u3002\u7f13\u5b58\u5230\u672a\u89e3\u7801\u7f13\u5b58\u548c\u5185\u5b58\u7f13\u5b58\u4e2d\u3002 \u4ece\u7f51\u7edc\u6216\u8005\u672c\u5730\u52a0\u8f7d\u3002\u52a0\u8f7d\u5b8c\u6210\u540e\uff0c\u89e3\u7801\uff0c\u53d8\u6362\uff0c\u8fd4\u56de\u3002\u5b58\u5230\u5404\u4e2a\u7f13\u5b58\u4e2d\u3002 \u7f13\u5b58 1. Bitmap\u7f13\u5b58 Bitmap\u7f13\u5b58\u5b58\u50a8Bitmap\u5bf9\u8c61\uff0c\u8fd9\u4e9bBitmap\u5bf9\u8c61\u53ef\u4ee5\u7acb\u523b\u7528\u6765\u663e\u793a\u6216\u8005\u7528\u4e8e\u540e\u5904\u7406 \u57285.0\u4ee5\u4e0b\u7cfb\u7edf\uff0cBitmap\u7f13\u5b58\u4f4d\u4e8eashmem\uff0c\u8fd9\u6837Bitmap\u5bf9\u8c61\u7684\u521b\u5efa\u548c\u91ca\u653e\u5c06\u4e0d\u4f1a\u5f15\u53d1GC\uff0c\u66f4\u5c11\u7684GC\u4f1a\u4f7f\u4f60\u7684APP\u8fd0\u884c\u5f97\u66f4\u52a0\u6d41\u7545\u3002 5.0\u53ca\u5176\u4ee5\u4e0a\u7cfb\u7edf\uff0c\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5185\u5b58\u7ba1\u7406\u6709\u4e86\u5f88\u5927\u6539\u8fdb\uff0c\u6240\u4ee5Bitmap\u7f13\u5b58\u76f4\u63a5\u4f4d\u4e8eJava\u7684heap\u4e0a\u3002 \u5f53\u5e94\u7528\u5728\u540e\u53f0\u8fd0\u884c\u65f6\uff0c\u8be5\u5185\u5b58\u4f1a\u88ab\u6e05\u7a7a\u3002 2. \u672a\u89e3\u7801\u56fe\u7247\u7684\u5185\u5b58\u7f13\u5b58 \u8fd9\u4e2a\u7f13\u5b58\u5b58\u50a8\u7684\u662f\u539f\u59cb\u538b\u7f29\u683c\u5f0f\u7684\u56fe\u7247\u3002\u4ece\u8be5\u7f13\u5b58\u53d6\u5230\u7684\u56fe\u7247\u5728\u4f7f\u7528\u4e4b\u524d\uff0c\u9700\u8981\u5148\u8fdb\u884c\u89e3\u7801\u3002 \u5982\u679c\u6709\u8c03\u6574\u5927\u5c0f\uff0c\u65cb\u8f6c\uff0c\u6216\u8005WebP\u7f16\u7801\u8f6c\u6362\u5de5\u4f5c\u9700\u8981\u5b8c\u6210\uff0c\u8fd9\u4e9b\u5de5\u4f5c\u4f1a\u5728\u89e3\u7801\u4e4b\u524d\u8fdb\u884c\u3002 3. \u78c1\u76d8\u7f13\u5b58 \u548c\u672a\u89e3\u7801\u7684\u5185\u5b58\u7f13\u5b58\u76f8\u4f3c\uff0c\u78c1\u76d8\u7f13\u5b58\u5b58\u50a8\u7684\u662f\u672a\u89e3\u7801\u7684\u539f\u59cb\u538b\u7f29\u683c\u5f0f\u7684\u56fe\u7247\uff0c\u5728\u4f7f\u7528\u4e4b\u524d\u540c\u6837\u9700\u8981\u7ecf\u8fc7\u89e3\u7801\u7b49\u5904\u7406\u3002 \u548c\u78c1\u76d8\u7f13\u5b58\u4e0d\u4e00\u6837\uff0cAPP\u5728\u540e\u53f0\u65f6\uff0c\u5185\u5bb9\u662f\u4e0d\u4f1a\u88ab\u6e05\u7a7a\u7684\u3002\u5373\u4f7f\u5173\u673a\u4e5f\u4e0d\u4f1a\u3002\u7528\u6237\u53ef\u4ee5\u968f\u65f6\u7528\u7cfb\u7edf\u7684\u8bbe\u7f6e\u83dc\u5355\u4e2d\u8fdb\u884c\u6e05\u7a7a\u7f13\u5b58\u64cd\u4f5c\u3002 setUri()\u8fc7\u7a0b\u6e90\u7801\u89e3\u6790 setUri\u6700\u7ec8\u90fd\u662fImageRequest\uff0cDraweeController\u8bbe\u7f6eBitmap\uff1b \u8bbe\u7f6eController\u7684\u65f6\u5019\uff0c\u5c06Controller\u8bbe\u7f6e\u7ed9DraweeHolder\uff0c\u4eceDraweeHolder\u4e2d\u53d6Drawable\u8bbe\u7f6e\u7ed9ImageView\uff0c\u540c\u65f6\u5f00\u59cbController\u7684onAttach()\u65b9\u6cd5\uff0c\u5f00\u59cb\u5f02\u6b65\u52a0\u8f7d\u56fe\u7247\uff1b DraweeHolder\u4e2d\u6301\u6709Hierarchy\u548cController\u7684\u5b9e\u4f8b\uff0cController\u7684onAttach\u65b9\u6cd5\u4e2dsubmitRequest()\uff0c\u5f00\u59cb\u83b7\u53d6\u56fe\u7247\uff1b \u83b7\u53d6\u5230\u56fe\u7247\u4e4b\u540e\uff0c\u901a\u8fc7Hierarchy\uff0c\u7528\u56de\u8c03\u7684\u65b9\u5f0f\u8c03\u7528invalidateDrawable\u7684\u65b9\u5f0f\u7ed8\u5236ImageView. Glide\uff0cPicasso\u548cFresco\u6bd4\u8f83 Glide\u4e0ePicasso\u7684\u533a\u522b Glide.with(context).load(url).into(imageview); 1. \u4f18\u4e8eFresco\uff0c\u9ed8\u8ba4\u4f7f\u7528RGB_565\uff0c\u6bd4ARGB_8888\u66f4\u7701\u5185\u5b58\uff1b 2. Glide\u7f13\u5b58ImageView\u5927\u5c0f\u7684\u56fe\uff0cPicasso\u7f13\u5b58\u5168\u5c3a\u5bf8\u7684\uff1b 3. Glide\u652f\u6301Gif\u56fe\u52a0\u8f7d 4. \u81ea\u5e26\u4e8c\u7ea7\u7f13\u5b58\uff1b \u53c2\u8003 Fresco Android\u56fe\u7247\u52a0\u8f7d\u6846\u67b6\u6bd4\u8f83----Glide,Picasso,Fresco","title":"Fresco\u76f8\u5173"},{"location":"Android/1-Basic/Fresco/#fresco","text":"","title":"Fresco\u76f8\u5173"},{"location":"Android/1-Basic/Fresco/#fresco_1","text":"\u5728 Android5.0 \u4ee5\u4e0b\u7cfb\u7edf\uff0c\u56fe\u7247\u4e0d\u5b58\u50a8\u5728 Java heap \u4e2d\uff0c\u800c\u662f\u5b58\u50a8\u5728 ashmemheap \u4e2d\uff0c\u5728\u56fe\u7247\u4e0d\u663e\u793a\u7684\u65f6\u5019\uff0c\u5360\u7528\u7684\u5185\u5b58\u4f1a\u81ea\u52a8\u91ca\u653e\uff0c\u964d\u4f4e\u4e86 OOM \u7684\u98ce\u9669 \u53ef\u4ee5\u5b9e\u73b0\u6e10\u8fdb\u5f0f\u7684 JPEG \u56fe\u7247\u5448\u73b0 \u652f\u6301 gif \u548c WebP \u683c\u5f0f\u56fe\u7247\u52a0\u8f7d image pipeline \u8bbe\u8ba1\u5141\u8bb8\u591a\u65b9\u9762\u63a7\u5236\u56fe\u7247\u7684\u52a0\u8f7d Drawees \u8bbe\u8ba1\u5141\u8bb8\u591a\u79cd\u65b9\u5f0f\u5904\u7406\u56fe\u7247\u7684\u5448\u73b0","title":"Fresco\u7684\u4f18\u52bf"},{"location":"Android/1-Basic/Fresco/#imagepipeline","text":"","title":"ImagePipeline"},{"location":"Android/1-Basic/Fresco/#_1","text":"\u68c0\u67e5\u5185\u5b58\u7f13\u5b58\uff0c\u5982\u6709\uff0c\u8fd4\u56de \u540e\u53f0\u7ebf\u7a0b\u5f00\u59cb\u540e\u7eed\u5de5\u4f5c \u68c0\u67e5\u662f\u5426\u5728\u672a\u89e3\u7801\u5185\u5b58\u7f13\u5b58\u4e2d\u3002\u5982\u6709\uff0c\u89e3\u7801\uff0c\u53d8\u6362\uff0c\u8fd4\u56de\uff0c\u7136\u540e\u7f13\u5b58\u5230\u5185\u5b58\u7f13\u5b58\u4e2d\u3002 \u68c0\u67e5\u662f\u5426\u5728\u78c1\u76d8\u7f13\u5b58\u4e2d\uff0c\u5982\u679c\u6709\uff0c\u53d8\u6362\uff0c\u8fd4\u56de\u3002\u7f13\u5b58\u5230\u672a\u89e3\u7801\u7f13\u5b58\u548c\u5185\u5b58\u7f13\u5b58\u4e2d\u3002 \u4ece\u7f51\u7edc\u6216\u8005\u672c\u5730\u52a0\u8f7d\u3002\u52a0\u8f7d\u5b8c\u6210\u540e\uff0c\u89e3\u7801\uff0c\u53d8\u6362\uff0c\u8fd4\u56de\u3002\u5b58\u5230\u5404\u4e2a\u7f13\u5b58\u4e2d\u3002","title":"\u52a0\u8f7d\u56fe\u50cf\u6d41\u7a0b"},{"location":"Android/1-Basic/Fresco/#_2","text":"","title":"\u7f13\u5b58"},{"location":"Android/1-Basic/Fresco/#1-bitmap","text":"Bitmap\u7f13\u5b58\u5b58\u50a8Bitmap\u5bf9\u8c61\uff0c\u8fd9\u4e9bBitmap\u5bf9\u8c61\u53ef\u4ee5\u7acb\u523b\u7528\u6765\u663e\u793a\u6216\u8005\u7528\u4e8e\u540e\u5904\u7406 \u57285.0\u4ee5\u4e0b\u7cfb\u7edf\uff0cBitmap\u7f13\u5b58\u4f4d\u4e8eashmem\uff0c\u8fd9\u6837Bitmap\u5bf9\u8c61\u7684\u521b\u5efa\u548c\u91ca\u653e\u5c06\u4e0d\u4f1a\u5f15\u53d1GC\uff0c\u66f4\u5c11\u7684GC\u4f1a\u4f7f\u4f60\u7684APP\u8fd0\u884c\u5f97\u66f4\u52a0\u6d41\u7545\u3002 5.0\u53ca\u5176\u4ee5\u4e0a\u7cfb\u7edf\uff0c\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5185\u5b58\u7ba1\u7406\u6709\u4e86\u5f88\u5927\u6539\u8fdb\uff0c\u6240\u4ee5Bitmap\u7f13\u5b58\u76f4\u63a5\u4f4d\u4e8eJava\u7684heap\u4e0a\u3002 \u5f53\u5e94\u7528\u5728\u540e\u53f0\u8fd0\u884c\u65f6\uff0c\u8be5\u5185\u5b58\u4f1a\u88ab\u6e05\u7a7a\u3002","title":"1. Bitmap\u7f13\u5b58"},{"location":"Android/1-Basic/Fresco/#2","text":"\u8fd9\u4e2a\u7f13\u5b58\u5b58\u50a8\u7684\u662f\u539f\u59cb\u538b\u7f29\u683c\u5f0f\u7684\u56fe\u7247\u3002\u4ece\u8be5\u7f13\u5b58\u53d6\u5230\u7684\u56fe\u7247\u5728\u4f7f\u7528\u4e4b\u524d\uff0c\u9700\u8981\u5148\u8fdb\u884c\u89e3\u7801\u3002 \u5982\u679c\u6709\u8c03\u6574\u5927\u5c0f\uff0c\u65cb\u8f6c\uff0c\u6216\u8005WebP\u7f16\u7801\u8f6c\u6362\u5de5\u4f5c\u9700\u8981\u5b8c\u6210\uff0c\u8fd9\u4e9b\u5de5\u4f5c\u4f1a\u5728\u89e3\u7801\u4e4b\u524d\u8fdb\u884c\u3002","title":"2. \u672a\u89e3\u7801\u56fe\u7247\u7684\u5185\u5b58\u7f13\u5b58"},{"location":"Android/1-Basic/Fresco/#3","text":"\u548c\u672a\u89e3\u7801\u7684\u5185\u5b58\u7f13\u5b58\u76f8\u4f3c\uff0c\u78c1\u76d8\u7f13\u5b58\u5b58\u50a8\u7684\u662f\u672a\u89e3\u7801\u7684\u539f\u59cb\u538b\u7f29\u683c\u5f0f\u7684\u56fe\u7247\uff0c\u5728\u4f7f\u7528\u4e4b\u524d\u540c\u6837\u9700\u8981\u7ecf\u8fc7\u89e3\u7801\u7b49\u5904\u7406\u3002 \u548c\u78c1\u76d8\u7f13\u5b58\u4e0d\u4e00\u6837\uff0cAPP\u5728\u540e\u53f0\u65f6\uff0c\u5185\u5bb9\u662f\u4e0d\u4f1a\u88ab\u6e05\u7a7a\u7684\u3002\u5373\u4f7f\u5173\u673a\u4e5f\u4e0d\u4f1a\u3002\u7528\u6237\u53ef\u4ee5\u968f\u65f6\u7528\u7cfb\u7edf\u7684\u8bbe\u7f6e\u83dc\u5355\u4e2d\u8fdb\u884c\u6e05\u7a7a\u7f13\u5b58\u64cd\u4f5c\u3002","title":"3. \u78c1\u76d8\u7f13\u5b58"},{"location":"Android/1-Basic/Fresco/#seturi","text":"setUri\u6700\u7ec8\u90fd\u662fImageRequest\uff0cDraweeController\u8bbe\u7f6eBitmap\uff1b \u8bbe\u7f6eController\u7684\u65f6\u5019\uff0c\u5c06Controller\u8bbe\u7f6e\u7ed9DraweeHolder\uff0c\u4eceDraweeHolder\u4e2d\u53d6Drawable\u8bbe\u7f6e\u7ed9ImageView\uff0c\u540c\u65f6\u5f00\u59cbController\u7684onAttach()\u65b9\u6cd5\uff0c\u5f00\u59cb\u5f02\u6b65\u52a0\u8f7d\u56fe\u7247\uff1b DraweeHolder\u4e2d\u6301\u6709Hierarchy\u548cController\u7684\u5b9e\u4f8b\uff0cController\u7684onAttach\u65b9\u6cd5\u4e2dsubmitRequest()\uff0c\u5f00\u59cb\u83b7\u53d6\u56fe\u7247\uff1b \u83b7\u53d6\u5230\u56fe\u7247\u4e4b\u540e\uff0c\u901a\u8fc7Hierarchy\uff0c\u7528\u56de\u8c03\u7684\u65b9\u5f0f\u8c03\u7528invalidateDrawable\u7684\u65b9\u5f0f\u7ed8\u5236ImageView.","title":"setUri()\u8fc7\u7a0b\u6e90\u7801\u89e3\u6790"},{"location":"Android/1-Basic/Fresco/#glidepicassofresco","text":"","title":"Glide\uff0cPicasso\u548cFresco\u6bd4\u8f83"},{"location":"Android/1-Basic/Fresco/#glidepicasso","text":"Glide.with(context).load(url).into(imageview); 1. \u4f18\u4e8eFresco\uff0c\u9ed8\u8ba4\u4f7f\u7528RGB_565\uff0c\u6bd4ARGB_8888\u66f4\u7701\u5185\u5b58\uff1b 2. Glide\u7f13\u5b58ImageView\u5927\u5c0f\u7684\u56fe\uff0cPicasso\u7f13\u5b58\u5168\u5c3a\u5bf8\u7684\uff1b 3. Glide\u652f\u6301Gif\u56fe\u52a0\u8f7d 4. \u81ea\u5e26\u4e8c\u7ea7\u7f13\u5b58\uff1b \u53c2\u8003 Fresco Android\u56fe\u7247\u52a0\u8f7d\u6846\u67b6\u6bd4\u8f83----Glide,Picasso,Fresco","title":"Glide\u4e0ePicasso\u7684\u533a\u522b"},{"location":"Android/1-Basic/HandlerThread%26IntentService/","text":"HandlerThread\u4e0eIntentService HandlerThread HandlerThread\u662fThread\u7684\u5b50\u7c7b\uff0c\u5176\u4e2d\u81ea\u5e26\u4e00\u4e2aLooper\uff0c\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u4f18\u5148\u7ea7\uff0c\u8fd0\u884crun\u65b9\u6cd5\u4e4b\u524d\u4f1a\u8c03\u7528Looper\u7684prepare()\u65b9\u6cd5\u8bbe\u7f6e\u7ebf\u7a0b\uff0c\u4e4b\u540e\u5f00\u59cbloop(). \u5728HandlerThread\u7684run()\u65b9\u6cd5\u4e2d\u4f1a\u8c03\u7528onLooperPrepare()\u65b9\u6cd5\uff0c\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\uff0c\u53ef\u4ee5\u6267\u884c\u81ea\u5b9a\u4e49\u7684\u64cd\u4f5c\u3002 IntentService IntentService\u662fService\u7684\u5b50\u7c7b\uff0c\u4e0e\u666e\u901aService\u6240\u4e0d\u540c\u7684\u662f\uff0c\u5728IntentService\u7684onCreate()\u65b9\u6cd5\u4e2d\uff0c\u5b9e\u4f8b\u5316\u4e86\u4e00\u4e2aHandlerThread\uff0c\u7136\u540e\u83b7\u53d6\u5b83\u7684Looper\uff0c\u5e76\u901a\u8fc7\u5b83\u7684Looper\u5b9e\u4f8b\u5316\u4e00\u4e2ahandler\uff0c\u5728onStart()\u65b9\u6cd5\u4e2d\uff0c\u5229\u7528Handler\u53d1\u9001\u6d88\u606f\uff0c\u5728handleMessage()\u4e2d\u5904\u7406\u6d88\u606f\u3002\u4e5f\u5c31\u662f\u8bf4IntentService\u4e2d\u7684\u64cd\u4f5c\u662f\u5728\u5b50\u7ebf\u7a0b\u4e2d\u5b8c\u6210\u7684\u3002 IntentService\u2014\u2014Handler\u4e0eService\u7684\u7ed3\u5408","title":"HandlerThread\u4e0eIntentService"},{"location":"Android/1-Basic/HandlerThread%26IntentService/#handlerthreadintentservice","text":"HandlerThread HandlerThread\u662fThread\u7684\u5b50\u7c7b\uff0c\u5176\u4e2d\u81ea\u5e26\u4e00\u4e2aLooper\uff0c\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u4f18\u5148\u7ea7\uff0c\u8fd0\u884crun\u65b9\u6cd5\u4e4b\u524d\u4f1a\u8c03\u7528Looper\u7684prepare()\u65b9\u6cd5\u8bbe\u7f6e\u7ebf\u7a0b\uff0c\u4e4b\u540e\u5f00\u59cbloop(). \u5728HandlerThread\u7684run()\u65b9\u6cd5\u4e2d\u4f1a\u8c03\u7528onLooperPrepare()\u65b9\u6cd5\uff0c\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\uff0c\u53ef\u4ee5\u6267\u884c\u81ea\u5b9a\u4e49\u7684\u64cd\u4f5c\u3002 IntentService IntentService\u662fService\u7684\u5b50\u7c7b\uff0c\u4e0e\u666e\u901aService\u6240\u4e0d\u540c\u7684\u662f\uff0c\u5728IntentService\u7684onCreate()\u65b9\u6cd5\u4e2d\uff0c\u5b9e\u4f8b\u5316\u4e86\u4e00\u4e2aHandlerThread\uff0c\u7136\u540e\u83b7\u53d6\u5b83\u7684Looper\uff0c\u5e76\u901a\u8fc7\u5b83\u7684Looper\u5b9e\u4f8b\u5316\u4e00\u4e2ahandler\uff0c\u5728onStart()\u65b9\u6cd5\u4e2d\uff0c\u5229\u7528Handler\u53d1\u9001\u6d88\u606f\uff0c\u5728handleMessage()\u4e2d\u5904\u7406\u6d88\u606f\u3002\u4e5f\u5c31\u662f\u8bf4IntentService\u4e2d\u7684\u64cd\u4f5c\u662f\u5728\u5b50\u7ebf\u7a0b\u4e2d\u5b8c\u6210\u7684\u3002 IntentService\u2014\u2014Handler\u4e0eService\u7684\u7ed3\u5408","title":"HandlerThread\u4e0eIntentService"},{"location":"Android/1-Basic/Hotfix/","text":"Android \u70ed\u4fee\u590d\u539f\u7406 1. QQ\u7a7a\u95f4\u7684\u65b9\u6848 \u5229\u7528dex\u6587\u4ef6\u52a0\u8f7d\u7684\u5148\u540e\u987a\u5e8f\uff0c\u5c06\u8865\u4e01\u7684dex\u653e\u5728dexElements\u6570\u7ec4\u7684\u6700\u524d\u9762\uff0c\u52a0\u8f7ddex\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5148\u52a0\u8f7d\u8865\u4e01\u7684dex\u3002 \u5b58\u5728\u95ee\u9898\uff0c\u5f53\u8865\u4e01\u4e2d\u7684\u67d0\u4e2a\u7c7b\u8c03\u7528\u5f15\u7528\u4e86\u975e\u8865\u4e01dex\u4e2d\u7684\u7c7b\u65f6\uff0c\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u539f\u56e0\u662fAPK\u5b89\u88c5\u8fc7\u7a0b\u4e2ddex\u4f1a\u88ab\u4f18\u5316\u6210odex\uff0c\u8c03\u7528\u5173\u7cfb\u5728\u540c\u4e00\u4e2adex\u7684\u7c7b\u4f1a\u88ab\u6253\u4e0a\u6807\u8bb0CLASS_ISVERIFIED\uff0c\u8865\u4e01dex\u4e2d\u7684\u7c7b\u5c31\u4f1a\u627e\u4e0d\u5230\u8981\u5f15\u7528\u7684\u7c7b\u3002\u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u5b9a\u4e49\u4e00\u4e2aAntiLazyLoad\u7c7b\u5728\u4e00\u4e2a\u5355\u72ec\u7684dex\u4e2d\uff0c\u5728\u7f16\u8bd1\u671f\uff0c\u7ed9\u6bcf\u4e2a\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u63d2\u5165\u4ee3\u7801\u6bb5\uff08\u6784\u9020\u65b9\u6cd5\u4e2d\u63d2\u5165\u662f\u4e3a\u4e86\u4e0d\u52a0\u5165\u591a\u4f59\u7684\u65b9\u6cd5\uff09\uff0c\u5f15\u7528AntiLazyLoad\u7c7b\uff0c\u8fd9\u6837\uff0c\u6bcf\u4e2a\u7c7b\u90fd\u4e0d\u4f1a\u88ab\u52a0\u4e0aCLASS_ISVERIFIED\u6807\u8bb0\u3002 \u4f18\u70b9\uff1a - \u4e00\u822c\u8865\u4e01\u5305\u8f83\u5c0f\uff0c\u65e0\u987b\u5408\u6210\u5b8c\u6574\u7684dex\u6587\u4ef6\uff1b - \u53ef\u4ee5\u5b9e\u73b0\u7c7b\u66ff\u6362\uff1b \u7f3a\u70b9\uff1a - \u91cd\u542f\u4e4b\u540e\u624d\u751f\u6548\uff1b - \u4fee\u590d\u7684\u7c7b\u8fc7\u591a\u4e4b\u540e\uff0c\u9020\u6210\u8865\u4e01\u5305\u8fc7\u5927\uff1b - ART\u73af\u5883\u4e0b\uff0c\u7c7b\u7ed3\u6784\u7684\u53d8\u5316\u4f1a\u9020\u6210\u5185\u5b58\u9519\u4e71\uff0c\u5fc5\u987b\u628a\u76f8\u5173\u8c03\u7528\u7c7b\u4ee5\u53ca\u7236\u7c7b\u5b50\u7c7b\u5168\u90e8\u52a0\u8f7d\u5230\u8865\u4e01\u5305\u4e2d\uff0c\u4e5f\u4f1a\u4f7f\u8865\u4e01\u5305\u8fc7\u5927\u3002 2. Tinker\u7684\u65b9\u6848 \u6253\u8865\u4e01\u5305\u65f6\uff0c\u5229\u7528BSDiff\u7b97\u6cd5\uff08Tinker\u9488\u5bf9dex\u6587\u4ef6\u7684\u7ed3\u6784\u505a\u4e86\u8c03\u6574\uff0c\u5199\u4e86DexDiff\u7b97\u6cd5\uff09\u5c06\u65b0\u7684dex\u6587\u4ef6\u4e0e\u65e7\u7684\u4f5c\u5dee\u5206\uff0c\u5f97\u5230\u8865\u4e01\u5305\u3002\u52a0\u8f7d\u65f6\uff0c\u5c06\u8865\u4e01\u5305\u4e0e\u65e7\u7684dex\u6587\u4ef6\u5408\u6210\u65b0\u7684dex\uff0c\u66ff\u6362\u65e7\u7684dex\u3002 \u4f18\u70b9\uff1a - \u4e0d\u7528\u50cfQQ\u7a7a\u95f4\u4e00\u6837\u589e\u52a0dex\uff0c\u5728\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u63d2\u5165\u4ee3\u7801\uff1b - \u517c\u5bb9\u6027\u548c\u7a33\u5b9a\u6027\u6bd4QQ\u7a7a\u95f4\u7684\u65b9\u6848\u5f3a\uff1b - \u5bf9\u6253\u5305\u8fc7\u7a0b\u6ca1\u6709\u4fb5\u5165\uff1b - \u8865\u4e01\u5305\u5c0f\uff1b \u7f3a\u70b9\uff1a - \u9700\u8981\u91cd\u542f\u4e4b\u540e\u751f\u6548\uff1b - \u5408\u6210dex\u6587\u4ef6\u65f6\u6d88\u8017\u7684\u5185\u5b58\u548c\u78c1\u76d8\u7a7a\u95f4\u90fd\u6bd4\u8f83\u591a\uff0c\u5fc5\u987b\u653e\u5728\u5355\u72ec\u8fdb\u7a0b\u4e2d\uff1b 3. \u963f\u91cc\u7684AndFix\u65b9\u6848 \u901a\u8fc7\u5bf9native\u5c42\u64cd\u4f5c\uff0c\u66ff\u6362\u6709\u95ee\u9898\u7684\u65b9\u6cd5\u3002 \u4f18\u70b9\uff1a - \u5373\u65f6\u751f\u6548\uff0c\u4e0d\u9700\u8981\u91cd\u542fAPP\uff1b - \u5bf9\u5e94\u7528\u65e0\u4fb5\u5165\uff1b \u7f3a\u70b9\uff1a - \u4e0d\u80fd\u589e\u52a0\u65b9\u6cd5\uff1b - \u7531\u4e8e\u5bf9native\u64cd\u4f5c\uff0c\u9700\u8981\u517c\u5bb9\u4e0d\u540c\u7684cpu\u67b6\u6784\uff0c\u90e8\u5206\u673a\u578b\u4e0d\u652f\u6301\u3002 - \u4e0d\u652f\u6301\u5bf9\u7c7b\u7684\u65b0\u589e\u548c\u66ff\u6362\u3002 Android\u70ed\u4fee\u590d\u6280\u672f\u9009\u578b\u2014\u2014\u4e09\u5927\u6d41\u6d3e\u89e3\u6790","title":"Android \u70ed\u4fee\u590d\u539f\u7406"},{"location":"Android/1-Basic/Hotfix/#android","text":"","title":"Android \u70ed\u4fee\u590d\u539f\u7406"},{"location":"Android/1-Basic/Hotfix/#1-qq","text":"\u5229\u7528dex\u6587\u4ef6\u52a0\u8f7d\u7684\u5148\u540e\u987a\u5e8f\uff0c\u5c06\u8865\u4e01\u7684dex\u653e\u5728dexElements\u6570\u7ec4\u7684\u6700\u524d\u9762\uff0c\u52a0\u8f7ddex\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5148\u52a0\u8f7d\u8865\u4e01\u7684dex\u3002 \u5b58\u5728\u95ee\u9898\uff0c\u5f53\u8865\u4e01\u4e2d\u7684\u67d0\u4e2a\u7c7b\u8c03\u7528\u5f15\u7528\u4e86\u975e\u8865\u4e01dex\u4e2d\u7684\u7c7b\u65f6\uff0c\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u539f\u56e0\u662fAPK\u5b89\u88c5\u8fc7\u7a0b\u4e2ddex\u4f1a\u88ab\u4f18\u5316\u6210odex\uff0c\u8c03\u7528\u5173\u7cfb\u5728\u540c\u4e00\u4e2adex\u7684\u7c7b\u4f1a\u88ab\u6253\u4e0a\u6807\u8bb0CLASS_ISVERIFIED\uff0c\u8865\u4e01dex\u4e2d\u7684\u7c7b\u5c31\u4f1a\u627e\u4e0d\u5230\u8981\u5f15\u7528\u7684\u7c7b\u3002\u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u5b9a\u4e49\u4e00\u4e2aAntiLazyLoad\u7c7b\u5728\u4e00\u4e2a\u5355\u72ec\u7684dex\u4e2d\uff0c\u5728\u7f16\u8bd1\u671f\uff0c\u7ed9\u6bcf\u4e2a\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u63d2\u5165\u4ee3\u7801\u6bb5\uff08\u6784\u9020\u65b9\u6cd5\u4e2d\u63d2\u5165\u662f\u4e3a\u4e86\u4e0d\u52a0\u5165\u591a\u4f59\u7684\u65b9\u6cd5\uff09\uff0c\u5f15\u7528AntiLazyLoad\u7c7b\uff0c\u8fd9\u6837\uff0c\u6bcf\u4e2a\u7c7b\u90fd\u4e0d\u4f1a\u88ab\u52a0\u4e0aCLASS_ISVERIFIED\u6807\u8bb0\u3002 \u4f18\u70b9\uff1a - \u4e00\u822c\u8865\u4e01\u5305\u8f83\u5c0f\uff0c\u65e0\u987b\u5408\u6210\u5b8c\u6574\u7684dex\u6587\u4ef6\uff1b - \u53ef\u4ee5\u5b9e\u73b0\u7c7b\u66ff\u6362\uff1b \u7f3a\u70b9\uff1a - \u91cd\u542f\u4e4b\u540e\u624d\u751f\u6548\uff1b - \u4fee\u590d\u7684\u7c7b\u8fc7\u591a\u4e4b\u540e\uff0c\u9020\u6210\u8865\u4e01\u5305\u8fc7\u5927\uff1b - ART\u73af\u5883\u4e0b\uff0c\u7c7b\u7ed3\u6784\u7684\u53d8\u5316\u4f1a\u9020\u6210\u5185\u5b58\u9519\u4e71\uff0c\u5fc5\u987b\u628a\u76f8\u5173\u8c03\u7528\u7c7b\u4ee5\u53ca\u7236\u7c7b\u5b50\u7c7b\u5168\u90e8\u52a0\u8f7d\u5230\u8865\u4e01\u5305\u4e2d\uff0c\u4e5f\u4f1a\u4f7f\u8865\u4e01\u5305\u8fc7\u5927\u3002","title":"1. QQ\u7a7a\u95f4\u7684\u65b9\u6848"},{"location":"Android/1-Basic/Hotfix/#2-tinker","text":"\u6253\u8865\u4e01\u5305\u65f6\uff0c\u5229\u7528BSDiff\u7b97\u6cd5\uff08Tinker\u9488\u5bf9dex\u6587\u4ef6\u7684\u7ed3\u6784\u505a\u4e86\u8c03\u6574\uff0c\u5199\u4e86DexDiff\u7b97\u6cd5\uff09\u5c06\u65b0\u7684dex\u6587\u4ef6\u4e0e\u65e7\u7684\u4f5c\u5dee\u5206\uff0c\u5f97\u5230\u8865\u4e01\u5305\u3002\u52a0\u8f7d\u65f6\uff0c\u5c06\u8865\u4e01\u5305\u4e0e\u65e7\u7684dex\u6587\u4ef6\u5408\u6210\u65b0\u7684dex\uff0c\u66ff\u6362\u65e7\u7684dex\u3002 \u4f18\u70b9\uff1a - \u4e0d\u7528\u50cfQQ\u7a7a\u95f4\u4e00\u6837\u589e\u52a0dex\uff0c\u5728\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u63d2\u5165\u4ee3\u7801\uff1b - \u517c\u5bb9\u6027\u548c\u7a33\u5b9a\u6027\u6bd4QQ\u7a7a\u95f4\u7684\u65b9\u6848\u5f3a\uff1b - \u5bf9\u6253\u5305\u8fc7\u7a0b\u6ca1\u6709\u4fb5\u5165\uff1b - \u8865\u4e01\u5305\u5c0f\uff1b \u7f3a\u70b9\uff1a - \u9700\u8981\u91cd\u542f\u4e4b\u540e\u751f\u6548\uff1b - \u5408\u6210dex\u6587\u4ef6\u65f6\u6d88\u8017\u7684\u5185\u5b58\u548c\u78c1\u76d8\u7a7a\u95f4\u90fd\u6bd4\u8f83\u591a\uff0c\u5fc5\u987b\u653e\u5728\u5355\u72ec\u8fdb\u7a0b\u4e2d\uff1b","title":"2. Tinker\u7684\u65b9\u6848"},{"location":"Android/1-Basic/Hotfix/#3-andfix","text":"\u901a\u8fc7\u5bf9native\u5c42\u64cd\u4f5c\uff0c\u66ff\u6362\u6709\u95ee\u9898\u7684\u65b9\u6cd5\u3002 \u4f18\u70b9\uff1a - \u5373\u65f6\u751f\u6548\uff0c\u4e0d\u9700\u8981\u91cd\u542fAPP\uff1b - \u5bf9\u5e94\u7528\u65e0\u4fb5\u5165\uff1b \u7f3a\u70b9\uff1a - \u4e0d\u80fd\u589e\u52a0\u65b9\u6cd5\uff1b - \u7531\u4e8e\u5bf9native\u64cd\u4f5c\uff0c\u9700\u8981\u517c\u5bb9\u4e0d\u540c\u7684cpu\u67b6\u6784\uff0c\u90e8\u5206\u673a\u578b\u4e0d\u652f\u6301\u3002 - \u4e0d\u652f\u6301\u5bf9\u7c7b\u7684\u65b0\u589e\u548c\u66ff\u6362\u3002 Android\u70ed\u4fee\u590d\u6280\u672f\u9009\u578b\u2014\u2014\u4e09\u5927\u6d41\u6d3e\u89e3\u6790","title":"3. \u963f\u91cc\u7684AndFix\u65b9\u6848"},{"location":"Android/1-Basic/Image/","text":"\u9ad8\u6548\u52a0\u8f7d\u56fe\u7247 \u52a0\u8f7d\u7f29\u7565\u56fe BitmapFactory.Options\u89e3\u7801\u56fe\u7247\uff0cinJustDecodeBound\u9009\u9879\uff0c\u7f6e\u4e3atrue\u7684\u65f6\u5019\uff0c\u89e3\u7801\u51fa\u6765\u7684\u56fe\u7247\uff0c\u53ea\u8fd4\u56de\u56fe\u7247\u7684\u5bbd\u9ad8\uff0c\u5e76\u4e0d\u628a\u56fe\u7247\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u8c03\u6574\u5408\u9002\u7684inSampleSize\uff0c\u7f29\u653e\u56fe\u7247\uff1b \u7f13\u5b58 \u4f7f\u7528LruCache\uff0c\u6839\u636e\u8bbe\u5907\u53ef\u7528\u5185\u5b58\uff0c\u7f29\u653e\u540e\u56fe\u7247\u7684\u5927\u5c0f\uff0c\u56fe\u7247\u4f7f\u7528\u9891\u7387\u7b49\u60c5\u51b5\u8bbe\u8ba1\u7f13\u5b58\u3002\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u5927\u56fe\u540e\u53f0\u7ebf\u7a0b\u52a0\u8f7d\u3002 Android\u9ad8\u6548\u52a0\u8f7d\u5927\u56fe\u3001\u591a\u56fe\u89e3\u51b3\u65b9\u6848\uff0c\u6709\u6548\u907f\u514d\u7a0b\u5e8fOOM","title":"\u9ad8\u6548\u52a0\u8f7d\u56fe\u7247"},{"location":"Android/1-Basic/Image/#_1","text":"\u52a0\u8f7d\u7f29\u7565\u56fe BitmapFactory.Options\u89e3\u7801\u56fe\u7247\uff0cinJustDecodeBound\u9009\u9879\uff0c\u7f6e\u4e3atrue\u7684\u65f6\u5019\uff0c\u89e3\u7801\u51fa\u6765\u7684\u56fe\u7247\uff0c\u53ea\u8fd4\u56de\u56fe\u7247\u7684\u5bbd\u9ad8\uff0c\u5e76\u4e0d\u628a\u56fe\u7247\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u8c03\u6574\u5408\u9002\u7684inSampleSize\uff0c\u7f29\u653e\u56fe\u7247\uff1b \u7f13\u5b58 \u4f7f\u7528LruCache\uff0c\u6839\u636e\u8bbe\u5907\u53ef\u7528\u5185\u5b58\uff0c\u7f29\u653e\u540e\u56fe\u7247\u7684\u5927\u5c0f\uff0c\u56fe\u7247\u4f7f\u7528\u9891\u7387\u7b49\u60c5\u51b5\u8bbe\u8ba1\u7f13\u5b58\u3002\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u5927\u56fe\u540e\u53f0\u7ebf\u7a0b\u52a0\u8f7d\u3002 Android\u9ad8\u6548\u52a0\u8f7d\u5927\u56fe\u3001\u591a\u56fe\u89e3\u51b3\u65b9\u6848\uff0c\u6709\u6548\u907f\u514d\u7a0b\u5e8fOOM","title":"\u9ad8\u6548\u52a0\u8f7d\u56fe\u7247"},{"location":"Android/1-Basic/Routing/","text":"","title":"Routing"},{"location":"Android/1-Basic/Serialization/","text":"\u5e8f\u5217\u5316 Implemetation //Serializable class SerializableObject implements Serializable { } //Parcellable class ParcellableObject implements Parcellable { //A Constructor with a Parcel parameter ParcellableObject ( Parcel in ) { this . name = in . readString (); this . programmingRelated = ( in . readInt () == 1 ); } //override writeToParcel method @Override void writeToParcel ( Parcel dest , int flags ) { } //a creator class static final Parcelable . Creator < ParcellableObject > CREATOR = new Parcelable . Creator < ParcellableObject > () { ParcellableObject createFromParcel ( Parcel in ) { return new Skill ( in ); } ParcellableObject [] newArray ( int size ) { return new Skill [ size ] ; } }; //override describeContents method @Override int describeContents () { return 0 ; } } Serializable Serializable is a standard Java interface. You can just implement Serializable interface and add override methods. The problem with this approach is that reflection is used and it is a slow process. This method create a lot of temporary objects and cause quite a bit of garbage collection. Serializable interface is easier to implement. Serializable\u662f\u6807\u51c6\u7684Java\u63a5\u53e3\u3002\u4f60\u53ef\u4ee5\u53ea\u5b9e\u73b0Serializable\u63a5\u53e3\u5e76\u8986\u5199\u5b83\u7684\u65b9\u6cd5\u3002\u4f46\u662f\u901a\u8fc7\u901a\u8fc7Serializable\u63a5\u53e3\u5b9e\u73b0\u5e8f\u5217\u5316\u65f6\u4f1a\u7528\u5230\u53cd\u5c04\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u6bd4\u8f83\u6162\u3002\u540c\u65f6\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\u4e2d\u8fd8\u4f1a\u4ea7\u751f\u5f88\u591a\u7684\u4e34\u65f6\u5bf9\u8c61\uff0c\u9020\u6210\u9891\u7e41\u7684GC\u3002\u4e0d\u8fc7\u597d\u5904\u662f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5b9e\u73b0\u5e8f\u5217\u5316\u4f1a\u975e\u5e38\u7b80\u5355\u3002 Parcelable Parcelable process is much faster than serializable. One of the reasons for this is that we are being explicit about the serialization process instead of using reflection to infer it. It also stands to reason that the code has been heavily optimized for this purpose. \u901a\u8fc7Parcelable\u5b9e\u73b0\u5e8f\u5217\u5316\u6bd4Serializable\u5feb\u5f88\u591a\uff0c\u539f\u56e0\u4e4b\u4e00\u5c31\u662f\uff0c\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\u662f\u5f88\u660e\u786e\u7684\uff0c\u4e0d\u50cfSeriazable\u4e00\u6837\u4f7f\u7528\u53cd\u5c04\u3002\u540c\u65f6\uff0c\u4e3a\u4e86\u5e8f\u5217\u5316\uff0c\u4ee3\u7801\u5df2\u7ecf\u7ecf\u8fc7\u4e86\u5f88\u5927\u7a0b\u5ea6\u7684\u4f18\u5316\u3002 Conclusion Parcelable is faster than Serializable interface; Parcelable interface takes more time for implemetation compared to serializable interface; Serializable interface is easier to implement; Serializable interface create a lot of temporary objects and cause quite a bit of garbage collection; Parcelable array can be pass via Intent in android; Parcelable\u63a5\u53e3\u6bd4Serializable\u66f4\u5feb; \u5728\u5b9e\u73b0\u7684\u65f6\u5019\uff0cParcelable\u66f4\u9ebb\u70e6\uff0c\u8981\u505a\u7684\u4e8b\u4f1a\u66f4\u591a; Serializable\u63a5\u53e3\u7684\u5b9e\u73b0\u66f4\u7b80\u5355\uff1b Serializable\u5728\u5e8f\u5217\u5316\u662f\u4f1a\u4ea7\u751f\u5f88\u591a\u7684\u4e34\u65f6\u5bf9\u8c61\uff0c\u9020\u6210\u9891\u7e41\u7684GC; Intent\u53ef\u4ee5\u4f20\u9012Parcelable\u6570\u7ec4;","title":"\u5e8f\u5217\u5316"},{"location":"Android/1-Basic/Serialization/#_1","text":"","title":"\u5e8f\u5217\u5316"},{"location":"Android/1-Basic/Serialization/#implemetation","text":"//Serializable class SerializableObject implements Serializable { } //Parcellable class ParcellableObject implements Parcellable { //A Constructor with a Parcel parameter ParcellableObject ( Parcel in ) { this . name = in . readString (); this . programmingRelated = ( in . readInt () == 1 ); } //override writeToParcel method @Override void writeToParcel ( Parcel dest , int flags ) { } //a creator class static final Parcelable . Creator < ParcellableObject > CREATOR = new Parcelable . Creator < ParcellableObject > () { ParcellableObject createFromParcel ( Parcel in ) { return new Skill ( in ); } ParcellableObject [] newArray ( int size ) { return new Skill [ size ] ; } }; //override describeContents method @Override int describeContents () { return 0 ; } }","title":"Implemetation"},{"location":"Android/1-Basic/Serialization/#serializable","text":"Serializable is a standard Java interface. You can just implement Serializable interface and add override methods. The problem with this approach is that reflection is used and it is a slow process. This method create a lot of temporary objects and cause quite a bit of garbage collection. Serializable interface is easier to implement. Serializable\u662f\u6807\u51c6\u7684Java\u63a5\u53e3\u3002\u4f60\u53ef\u4ee5\u53ea\u5b9e\u73b0Serializable\u63a5\u53e3\u5e76\u8986\u5199\u5b83\u7684\u65b9\u6cd5\u3002\u4f46\u662f\u901a\u8fc7\u901a\u8fc7Serializable\u63a5\u53e3\u5b9e\u73b0\u5e8f\u5217\u5316\u65f6\u4f1a\u7528\u5230\u53cd\u5c04\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u6bd4\u8f83\u6162\u3002\u540c\u65f6\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\u4e2d\u8fd8\u4f1a\u4ea7\u751f\u5f88\u591a\u7684\u4e34\u65f6\u5bf9\u8c61\uff0c\u9020\u6210\u9891\u7e41\u7684GC\u3002\u4e0d\u8fc7\u597d\u5904\u662f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5b9e\u73b0\u5e8f\u5217\u5316\u4f1a\u975e\u5e38\u7b80\u5355\u3002","title":"Serializable"},{"location":"Android/1-Basic/Serialization/#parcelable","text":"Parcelable process is much faster than serializable. One of the reasons for this is that we are being explicit about the serialization process instead of using reflection to infer it. It also stands to reason that the code has been heavily optimized for this purpose. \u901a\u8fc7Parcelable\u5b9e\u73b0\u5e8f\u5217\u5316\u6bd4Serializable\u5feb\u5f88\u591a\uff0c\u539f\u56e0\u4e4b\u4e00\u5c31\u662f\uff0c\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\u662f\u5f88\u660e\u786e\u7684\uff0c\u4e0d\u50cfSeriazable\u4e00\u6837\u4f7f\u7528\u53cd\u5c04\u3002\u540c\u65f6\uff0c\u4e3a\u4e86\u5e8f\u5217\u5316\uff0c\u4ee3\u7801\u5df2\u7ecf\u7ecf\u8fc7\u4e86\u5f88\u5927\u7a0b\u5ea6\u7684\u4f18\u5316\u3002","title":"Parcelable"},{"location":"Android/1-Basic/Serialization/#conclusion","text":"Parcelable is faster than Serializable interface; Parcelable interface takes more time for implemetation compared to serializable interface; Serializable interface is easier to implement; Serializable interface create a lot of temporary objects and cause quite a bit of garbage collection; Parcelable array can be pass via Intent in android; Parcelable\u63a5\u53e3\u6bd4Serializable\u66f4\u5feb; \u5728\u5b9e\u73b0\u7684\u65f6\u5019\uff0cParcelable\u66f4\u9ebb\u70e6\uff0c\u8981\u505a\u7684\u4e8b\u4f1a\u66f4\u591a; Serializable\u63a5\u53e3\u7684\u5b9e\u73b0\u66f4\u7b80\u5355\uff1b Serializable\u5728\u5e8f\u5217\u5316\u662f\u4f1a\u4ea7\u751f\u5f88\u591a\u7684\u4e34\u65f6\u5bf9\u8c61\uff0c\u9020\u6210\u9891\u7e41\u7684GC; Intent\u53ef\u4ee5\u4f20\u9012Parcelable\u6570\u7ec4;","title":"Conclusion"},{"location":"Android/1-Basic/aidl/","text":"","title":"aidl"},{"location":"Android/1-Basic/android-virtual-machine/","text":"Android\u865a\u62df\u673a\u76f8\u5173 64K\u539f\u56e0 \u6253\u5305\u4e4b\u540eJava\u4ee3\u7801\u88ab\u7f16\u8bd1\u6210dex\u6587\u4ef6\uff0c\u901a\u8fc7short\u7c7b\u578b\uff082\u5b57\u8282\uff09\u5f15\u7528dex\u6587\u4ef6\u4e2d\u7684\u65b9\u6cd5\uff0c\u4e0d\u80fd\u8d85\u8fc72 32 \uff0c\u537364K\u65b9\u6cd5\u3002 \u4e0d\u540c\u7684\u8fd0\u884c\u65f6 Android 5.0\u4e4b\u524d\uff0c\u4f7f\u7528Dalvik\u865a\u62df\u673a\uff0c\u4f7f\u7528JIT(Just-in-time)\u65b9\u5f0f\u8fd0\u884c\uff0c\u5373\u5728\u8fd0\u884c\u65f6\u624d\u7f16\u8bd1dex\u5b57\u8282\u7801\uff0c\u800c\u4e14\u6bcf\u4e2aapk\u4e2d\u53ea\u652f\u6301\u4e00\u4e2adex\u6587\u4ef6\u3002 Android 5.0\u4e4b\u540e\uff0c\u4f7f\u7528ART\u865a\u62df\u673a\uff0cART\u539f\u751f\u652f\u6301\u52a0\u8f7d\u591a\u4e2a\u6587\u4ef6\uff0c\u4f7f\u7528AOT(Ahead-of-time)\u65b9\u5f0f\u8fd0\u884c\uff0c\u5373\u5728\u5e94\u7528\u5b89\u88c5\u7684\u65f6\u5019\uff0c\u5c06\u6240\u6709\u7684dex\u6587\u4ef6\u7f16\u8bd1\u6210\u4e00\u4e2a.oat\u6587\u4ef6\uff0c\u56e0\u6b64\u5b89\u88c5\u7684\u65f6\u5019\u4f1a\u6bd4\u8f83\u6162\u3002 Mutidex\u5e94\u7528 minSdkVersion < 20\u7684\u5e94\u7528\uff1a 1. \u4f7f\u7528support-mutidex\u63d2\u4ef6\uff0cgradle\u5f00\u542fmultiDexEnabled\u9009\u9879\uff1b 2. \u6ca1\u6709\u4f7f\u7528\u8fc7\u81ea\u5b9a\u4e49\u7684Application: \u81ea\u5b9a\u4e49Application\u7ee7\u627fMutiDexApplication\u6216\u8005\u5728\u81ea\u5b9a\u4e49\u7684Application\u4e2d\u7684attachBaseContext\u65b9\u6cd5\u4e2d\u5b89\u88c5MultiDex. minSdkVersion > 20\u7684\u5e94\u7528\uff1a ART\u539f\u751f\u652f\u6301\u591adex\u52a0\u8f7d\uff0c\u65e0\u9700\u989d\u5916\u914d\u7f6e\u3002 \u5c40\u9650\u6027 dex\u5b89\u88c5\u8fc7\u7a0b\u590d\u6742\uff0cdex\u6587\u4ef6\u8fc7\u5927\u4f1aANR\uff0c\u5e94\u8be5\u5c3d\u91cf\u538b\u7f29\u548c\u79fb\u9664\u65e0\u7528\u4ee3\u7801 Dalvik linearAlloc \u539f\u56e0\uff0c\u57284.0\u4e4b\u524d\u7684\u8bbe\u5907\u4e0a\u53ef\u80fd\u65e0\u6cd5\u8fd0\u884c Dalvik linearAlloc \u53ef\u80fd\u4f1a\u7533\u8bf7\u5f88\u5927\u5185\u5b58\uff0c\u5728\u8fd0\u884c\u65f6\u53ef\u80fd\u4f1a\u5d29\u6e83\uff0c4.0\u63d0\u9ad8\u4e86\u5206\u914d\u9650\u5236\uff0c\u4f46\u4ecd\u7136\u6709\u53ef\u80fd\u51fa\u73b0\u3002 \u4fdd\u7559\u67d0\u4e9b\u7c7b\u5728\u4e3bdex\u6587\u4ef6 \u5e94\u7528\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u67d0\u4e9b\u7c7b\u662f\u5fc5\u987b\u8981\u7684\uff0c\u4f7f\u7528multiDexKeepFile\u4f7f\u8fd9\u4e9b\u7c7b\u4fdd\u7559\u5728\u4e3bdex\u6587\u4ef6\u4e2d \u4e3bdex\u8d85\u8fc764K\u65b9\u6cd5\u6570 dex\u81ea\u52a8\u5206\u5305\u8fc7\u7a0b\u4e2d\u7b56\u7565\u5f88\u4fdd\u5b88\uff0c\u4e3bdex\u4ecd\u7136\u6709\u53ef\u80fd\u8d85\u8fc764K\u65b9\u6cd5\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a\u81ea\u5b9a\u4e49\u5206\u5305\u8fc7\u7a0b\uff0cmaindexlist\uff0c\u6bd4\u5982\u7528dexknife. dex\u542f\u52a8\u4f18\u5316 \u5f00\u542fmultidex\u4e4b\u540e\uff0c\u5bf9\u4e8e5.0\u4ee5\u4e0b\u7684\u7cfb\u7edf\uff0c\u542f\u52a8\u65f6dexopt\u8fc7\u7a0b\u4f1a\u52a0\u8f7ddex\u6587\u4ef6\uff0c\u4f1a\u9020\u6210APP\u542f\u52a8\u65f6\u5728\u9996\u5c4f\u8017\u65f6\u8f83\u591a\uff0c\u8fdb\u5165\u4e3b\u9875\u65f6\u95f4\u6162\u3002 \u5fae\u4fe1\u65b9\u6848\uff1a\u81ea\u5b9a\u4e49\u5206\u5305\uff0c\u628a4\u5927\u7ec4\u4ef6\u548c\u5b83\u4eec\u76f4\u63a5\u7684\u4f9d\u8d56\u90fd\u653e\u5230\u4e00\u4e2adex\u91cc\uff0c\u653e\u5728asset\u76ee\u5f55\u4e0b\uff0c\u52a0\u8f7d\u4e4b\u524d\u5224\u65ad\u662f\u5426\u8fdb\u884c\u8fc7odex\u7684\u8fc7\u7a0b\uff0c\u6ca1\u8fdb\u884c\u8fc7\uff0c\u653e\u5728attachBaseContext\u4e2d\u52a0\u8f7d\uff0c\u5426\u5219\u653e\u5728\u542f\u52a8\u9875\u7684\u5730\u7403\u4e2d\u7528\u5b50\u7ebf\u7a0b\u52a0\u8f7d\u3002 Facebook\u65b9\u6848\uff1a\u548c\u5fae\u4fe1\u7c7b\u4f3c\uff0cFacebook\u7528buck\u6784\u5efa\uff0cdex\u7684\u5f62\u5f0f\u548c\u5fae\u4fe1\u7684\u4e00\u6837\uff08\u5fae\u4fe1\u501f\u9274Facebook\uff09\uff0c\u4e0d\u540c\u7684\u662f\uff0cMultiDex.install\u653e\u5728\u4e86\u5355\u72ec\u7684nodex\u8fdb\u7a0b\u4e2d\u3002\u542f\u52a8\u65f6\u5982\u679c\u8fdb\u884c\u8fc7odex\u8fc7\u7a0b\uff0c\u5219\u76f4\u63a5\u8df3\u8f6c\u4e3b\u9875\uff0c\u5426\u5219\u5148\u5728nodex\u8fdb\u7a0b\u4e2d\u52a0\u8f7ddex\u3002 \u7f8e\u56e2\u65b9\u6848\uff1a\u7f8e\u56e2\u662f\u901a\u8fc7\u63d2\u4ef6\u5e72\u6d89dex\u5206\u5305\u8fc7\u7a0b\uff0c\u4fdd\u8bc1\u88ab\u9996\u9875\u76f4\u63a5\u4f9d\u8d56\u7684\u7c7b\u90fd\u5728\u4e3bdex\u4e2d\uff0c\u5148\u542f\u52a8\u4e3bdex\uff0c\u5176\u4ed6dex\u5f02\u6b65\u52a0\u8f7d\uff0c\u5f53\u8fdb\u9996\u9875\u4e4b\u540e\uff0c\u5982\u679c\u4f7f\u7528\u5230\u4e86\u5176\u4ed6dex\u4e2d\u7684\u6587\u4ef6\uff0c\u5219\u5148\u8df3\u51fa\u4e00\u4e2aloadingActivity\uff0c\u7b49\u5f85\u7c7b\u6240\u5728dex\u52a0\u8f7d\u5b8c\u6210\u4e4b\u540e\u5728\u8df3\u8f6c\u3002 \u53c2\u8003: Android Developer \u914d\u7f6e\u65b9\u6cd5\u6570\u8d85\u8fc7 64K \u7684\u5e94\u7528 \u4ea6\u67ab-Android \u7a81\u7834 DEX \u6587\u4ef6\u7684 64K \u65b9\u6cd5\u6570\u9650\u5236 Android Dex\u5206\u5305\u6700\u5168\u603b\u7ed3\uff1a\u542bFacebook\u89e3\u51b3\u65b9\u6848","title":"Android\u865a\u62df\u673a\u76f8\u5173"},{"location":"Android/1-Basic/android-virtual-machine/#android","text":"","title":"Android\u865a\u62df\u673a\u76f8\u5173"},{"location":"Android/1-Basic/android-virtual-machine/#64k","text":"\u6253\u5305\u4e4b\u540eJava\u4ee3\u7801\u88ab\u7f16\u8bd1\u6210dex\u6587\u4ef6\uff0c\u901a\u8fc7short\u7c7b\u578b\uff082\u5b57\u8282\uff09\u5f15\u7528dex\u6587\u4ef6\u4e2d\u7684\u65b9\u6cd5\uff0c\u4e0d\u80fd\u8d85\u8fc72 32 \uff0c\u537364K\u65b9\u6cd5\u3002","title":"64K\u539f\u56e0"},{"location":"Android/1-Basic/android-virtual-machine/#_1","text":"Android 5.0\u4e4b\u524d\uff0c\u4f7f\u7528Dalvik\u865a\u62df\u673a\uff0c\u4f7f\u7528JIT(Just-in-time)\u65b9\u5f0f\u8fd0\u884c\uff0c\u5373\u5728\u8fd0\u884c\u65f6\u624d\u7f16\u8bd1dex\u5b57\u8282\u7801\uff0c\u800c\u4e14\u6bcf\u4e2aapk\u4e2d\u53ea\u652f\u6301\u4e00\u4e2adex\u6587\u4ef6\u3002 Android 5.0\u4e4b\u540e\uff0c\u4f7f\u7528ART\u865a\u62df\u673a\uff0cART\u539f\u751f\u652f\u6301\u52a0\u8f7d\u591a\u4e2a\u6587\u4ef6\uff0c\u4f7f\u7528AOT(Ahead-of-time)\u65b9\u5f0f\u8fd0\u884c\uff0c\u5373\u5728\u5e94\u7528\u5b89\u88c5\u7684\u65f6\u5019\uff0c\u5c06\u6240\u6709\u7684dex\u6587\u4ef6\u7f16\u8bd1\u6210\u4e00\u4e2a.oat\u6587\u4ef6\uff0c\u56e0\u6b64\u5b89\u88c5\u7684\u65f6\u5019\u4f1a\u6bd4\u8f83\u6162\u3002","title":"\u4e0d\u540c\u7684\u8fd0\u884c\u65f6"},{"location":"Android/1-Basic/android-virtual-machine/#mutidex","text":"minSdkVersion < 20\u7684\u5e94\u7528\uff1a 1. \u4f7f\u7528support-mutidex\u63d2\u4ef6\uff0cgradle\u5f00\u542fmultiDexEnabled\u9009\u9879\uff1b 2. \u6ca1\u6709\u4f7f\u7528\u8fc7\u81ea\u5b9a\u4e49\u7684Application: \u81ea\u5b9a\u4e49Application\u7ee7\u627fMutiDexApplication\u6216\u8005\u5728\u81ea\u5b9a\u4e49\u7684Application\u4e2d\u7684attachBaseContext\u65b9\u6cd5\u4e2d\u5b89\u88c5MultiDex. minSdkVersion > 20\u7684\u5e94\u7528\uff1a ART\u539f\u751f\u652f\u6301\u591adex\u52a0\u8f7d\uff0c\u65e0\u9700\u989d\u5916\u914d\u7f6e\u3002","title":"Mutidex\u5e94\u7528"},{"location":"Android/1-Basic/android-virtual-machine/#_2","text":"dex\u5b89\u88c5\u8fc7\u7a0b\u590d\u6742\uff0cdex\u6587\u4ef6\u8fc7\u5927\u4f1aANR\uff0c\u5e94\u8be5\u5c3d\u91cf\u538b\u7f29\u548c\u79fb\u9664\u65e0\u7528\u4ee3\u7801 Dalvik linearAlloc \u539f\u56e0\uff0c\u57284.0\u4e4b\u524d\u7684\u8bbe\u5907\u4e0a\u53ef\u80fd\u65e0\u6cd5\u8fd0\u884c Dalvik linearAlloc \u53ef\u80fd\u4f1a\u7533\u8bf7\u5f88\u5927\u5185\u5b58\uff0c\u5728\u8fd0\u884c\u65f6\u53ef\u80fd\u4f1a\u5d29\u6e83\uff0c4.0\u63d0\u9ad8\u4e86\u5206\u914d\u9650\u5236\uff0c\u4f46\u4ecd\u7136\u6709\u53ef\u80fd\u51fa\u73b0\u3002","title":"\u5c40\u9650\u6027"},{"location":"Android/1-Basic/android-virtual-machine/#dex","text":"\u5e94\u7528\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u67d0\u4e9b\u7c7b\u662f\u5fc5\u987b\u8981\u7684\uff0c\u4f7f\u7528multiDexKeepFile\u4f7f\u8fd9\u4e9b\u7c7b\u4fdd\u7559\u5728\u4e3bdex\u6587\u4ef6\u4e2d","title":"\u4fdd\u7559\u67d0\u4e9b\u7c7b\u5728\u4e3bdex\u6587\u4ef6"},{"location":"Android/1-Basic/android-virtual-machine/#dex64k","text":"dex\u81ea\u52a8\u5206\u5305\u8fc7\u7a0b\u4e2d\u7b56\u7565\u5f88\u4fdd\u5b88\uff0c\u4e3bdex\u4ecd\u7136\u6709\u53ef\u80fd\u8d85\u8fc764K\u65b9\u6cd5\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a\u81ea\u5b9a\u4e49\u5206\u5305\u8fc7\u7a0b\uff0cmaindexlist\uff0c\u6bd4\u5982\u7528dexknife.","title":"\u4e3bdex\u8d85\u8fc764K\u65b9\u6cd5\u6570"},{"location":"Android/1-Basic/android-virtual-machine/#dex_1","text":"\u5f00\u542fmultidex\u4e4b\u540e\uff0c\u5bf9\u4e8e5.0\u4ee5\u4e0b\u7684\u7cfb\u7edf\uff0c\u542f\u52a8\u65f6dexopt\u8fc7\u7a0b\u4f1a\u52a0\u8f7ddex\u6587\u4ef6\uff0c\u4f1a\u9020\u6210APP\u542f\u52a8\u65f6\u5728\u9996\u5c4f\u8017\u65f6\u8f83\u591a\uff0c\u8fdb\u5165\u4e3b\u9875\u65f6\u95f4\u6162\u3002 \u5fae\u4fe1\u65b9\u6848\uff1a\u81ea\u5b9a\u4e49\u5206\u5305\uff0c\u628a4\u5927\u7ec4\u4ef6\u548c\u5b83\u4eec\u76f4\u63a5\u7684\u4f9d\u8d56\u90fd\u653e\u5230\u4e00\u4e2adex\u91cc\uff0c\u653e\u5728asset\u76ee\u5f55\u4e0b\uff0c\u52a0\u8f7d\u4e4b\u524d\u5224\u65ad\u662f\u5426\u8fdb\u884c\u8fc7odex\u7684\u8fc7\u7a0b\uff0c\u6ca1\u8fdb\u884c\u8fc7\uff0c\u653e\u5728attachBaseContext\u4e2d\u52a0\u8f7d\uff0c\u5426\u5219\u653e\u5728\u542f\u52a8\u9875\u7684\u5730\u7403\u4e2d\u7528\u5b50\u7ebf\u7a0b\u52a0\u8f7d\u3002 Facebook\u65b9\u6848\uff1a\u548c\u5fae\u4fe1\u7c7b\u4f3c\uff0cFacebook\u7528buck\u6784\u5efa\uff0cdex\u7684\u5f62\u5f0f\u548c\u5fae\u4fe1\u7684\u4e00\u6837\uff08\u5fae\u4fe1\u501f\u9274Facebook\uff09\uff0c\u4e0d\u540c\u7684\u662f\uff0cMultiDex.install\u653e\u5728\u4e86\u5355\u72ec\u7684nodex\u8fdb\u7a0b\u4e2d\u3002\u542f\u52a8\u65f6\u5982\u679c\u8fdb\u884c\u8fc7odex\u8fc7\u7a0b\uff0c\u5219\u76f4\u63a5\u8df3\u8f6c\u4e3b\u9875\uff0c\u5426\u5219\u5148\u5728nodex\u8fdb\u7a0b\u4e2d\u52a0\u8f7ddex\u3002 \u7f8e\u56e2\u65b9\u6848\uff1a\u7f8e\u56e2\u662f\u901a\u8fc7\u63d2\u4ef6\u5e72\u6d89dex\u5206\u5305\u8fc7\u7a0b\uff0c\u4fdd\u8bc1\u88ab\u9996\u9875\u76f4\u63a5\u4f9d\u8d56\u7684\u7c7b\u90fd\u5728\u4e3bdex\u4e2d\uff0c\u5148\u542f\u52a8\u4e3bdex\uff0c\u5176\u4ed6dex\u5f02\u6b65\u52a0\u8f7d\uff0c\u5f53\u8fdb\u9996\u9875\u4e4b\u540e\uff0c\u5982\u679c\u4f7f\u7528\u5230\u4e86\u5176\u4ed6dex\u4e2d\u7684\u6587\u4ef6\uff0c\u5219\u5148\u8df3\u51fa\u4e00\u4e2aloadingActivity\uff0c\u7b49\u5f85\u7c7b\u6240\u5728dex\u52a0\u8f7d\u5b8c\u6210\u4e4b\u540e\u5728\u8df3\u8f6c\u3002 \u53c2\u8003: Android Developer \u914d\u7f6e\u65b9\u6cd5\u6570\u8d85\u8fc7 64K \u7684\u5e94\u7528 \u4ea6\u67ab-Android \u7a81\u7834 DEX \u6587\u4ef6\u7684 64K \u65b9\u6cd5\u6570\u9650\u5236 Android Dex\u5206\u5305\u6700\u5168\u603b\u7ed3\uff1a\u542bFacebook\u89e3\u51b3\u65b9\u6848","title":"dex\u542f\u52a8\u4f18\u5316"},{"location":"Android/1-Basic/event-dispatch/","text":"\u4e8b\u4ef6\u5206\u53d1\u673a\u5236 MotionEvent MotionEvent\u67094\u79cd\u72b6\u6001: - MotionEvent.ACTION_DOWN\uff0c\u624b\u6307\u6309\u4e0b\u7684\u77ac\u95f4\uff1b - MotionEvent.ACTION_MOVE\uff0c\u624b\u6307\u5728\u5c4f\u5e55\u4e0a\u79fb\u52a8\uff1b - MotionEvent.ACTION_UP\uff0c\u624b\u6307\u62ac\u8d77\u7684\u77ac\u95f4\uff1b - MotionEvent.ACTION_CANCEL\uff0c\u53d6\u6d88\u624b\u52bf\uff0c\u4e00\u822c\u4e0d\u7531\u7528\u6237\u624b\u52a8\u4ea7\u751f. \u4e8b\u4ef6\u5206\u53d1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e0a\u5c42\u5411\u4e0b\u5c42\u4f20\u9012\uff0c\u76f4\u5230\u4e8b\u4ef6\u88ab\u5904\u7406\uff0c\u5982\u679c\u4f20\u5230\u6700\u5e95\u5c42\u4e5f\u6ca1\u6709\u5904\u7406\uff0c\u5219\u7ee7\u7eed\u5411\u5916\u5c42\u5206\u53d1\u3002 3\u4e2a\u91cd\u8981\u65b9\u6cd5 dispatchTouchEvent()\uff0c\u51b3\u5b9a\u4e8b\u4ef6\u662f\u5426\u5f80\u4e0b\u5206\u53d1\uff0c\u8fd4\u56detrue\u8868\u793a\u4e8b\u4ef6\u5df2\u7ecf\u88ab\u6d88\u8d39\uff0cfalse\u8868\u793a\u5728\u672c\u5c42\u4e8b\u4ef6\u4e0d\u5728\u5f80\u4e0b\u5206\u53d1\u7531\u4e0a\u5c42\u7684onEvent\u5904\u7406\u4e8b\u4ef6\uff0csuper\u8868\u793a\u4e8b\u4ef6\u7531\u672c\u5c42\u7684onInterceptTouchEvent\u51b3\u5b9a\u662f\u5426\u7ee7\u7eed\u5411\u4e0b\u5206\u53d1\u3002 onInterceptTouchEvent()\uff0c\u662f\u5426\u5bf9\u4e8b\u4ef6\u62e6\u622a\uff0c\u8fd4\u56defalse\u7684\u65f6\u5019\uff0c\u8868\u793a\u4e0d\u62e6\u622a\uff0c\u4ea4\u7531\u4e0b\u5c42\u7684dispatchTouchEvent\u7ee7\u7eed\u5904\u7406\uff0c\u5426\u5219\u62e6\u622a\u4e8b\u4ef6\uff0c\u7531\u672c\u5c42\u7684onTouchEvent\u5904\u7406\uff1b onTouchEvent()\uff0c\u4e8b\u4ef6\u5904\u7406\uff0c\u8fd4\u56detrue\u7684\uff0c\u8868\u793a\u4e8b\u4ef6\u88ab\u6d88\u8d39\uff0c\u4e0d\u518d\u4f20\u9012\uff0c\u8fd4\u56defalse\u6216\u8005super\uff0c\u4e8b\u4ef6\u90fd\u7ee7\u7eed\u5411\u4e0a\u5c42\u7ee7\u7eed\u4f20\u9012\u3002 Android\u89e6\u6478\u4e8b\u4ef6\u6d41\u7a0b\u603b\u7ed3 \u4e00\u4e2a\u4e8b\u4ef6\u5e8f\u5217\u662f\u6307\u4ece\u624b\u6307\u89e6\u6478\u5c4f\u5e55\u5f00\u59cb\uff0c\u5230\u624b\u6307\u79bb\u5f00\u5c4f\u5e55\u7ed3\u675f\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u4e00\u7cfb\u5217\u4e8b\u4ef6\u3002\u540c\u4e00\u4e2a\u4e8b\u4ef6\u5e8f\u5217\u662f\u4ee5ACTION_DOWN\u4e8b\u4ef6\u5f00\u59cb\uff0c\u4e2d\u95f4\u542b\u6709\u6570\u91cf\u4e0d\u5b9a\u7684MOVE\u4e8b\u4ef6\uff0c\u6700\u7ec8\u4ee5ACTION_UP\u4e8b\u4ef6\u7ed3\u675f\u3002 \u4e8b\u4ef6\u4f20\u9012\u7684\u987a\u5e8f\u662f\uff1aActivity->Window->View\uff0c\u5373\u4e8b\u4ef6\u603b\u662f\u5148\u4f20\u9012\u7ed9Activity\uff0c\u7136\u540e\u5728\u4f20\u9012\u7ed9Window\uff0c\u6700\u540e\u5728\u4f20\u9012\u7ed9View\uff0c\u9876\u7ea7View\u63a5\u6536\u5230\u4e8b\u4ef6\u540e\uff0c\u5c31\u4f1a\u6309\u7167\u4e8b\u4ef6\u5206\u53d1\u673a\u5236\u53bb\u5206\u53d1\u4e8b\u4ef6\u3002 \u4e8b\u4ef6\u7684\u4f20\u9012\u8fc7\u7a0b\u662f\u7531\u5916\u5411\u5185\u7684\uff0c\u5373\u4e8b\u4ef6\u603b\u662f\u7531\u7236\u5143\u7d20\u5206\u53d1\u7ed9\u5b50\u5143\u7d20\u3002 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u4e8b\u4ef6\u5e8f\u5217\u53ea\u80fd\u88ab\u4e00\u4e2aView\u62e6\u622a\u4e14\u6d88\u8017\u3002\u4e00\u65e6\u4e00\u4e2a\u5143\u7d20\u62e6\u622a\u4e86\u67d0\u6b21\u4e8b\u4ef6\uff0c\u90a3\u4e48\u540c\u4e00\u4e2a\u4e8b\u4ef6\u5e8f\u5217\u5185\u7684\u6240\u6709\u4e8b\u4ef6\u90fd\u4f1a\u76f4\u63a5\u4ea4\u7ed9\u5b83\u5904\u7406\uff0c\u56e0\u6b64\u540c\u4e00\u4e2a\u4e8b\u4ef6\u5e8f\u5217\u4e2d\u7684\u4e8b\u4ef6\u4e0d\u80fd\u5206\u522b\u7531\u4e24\u4e2aView\u540c\u65f6\u5904\u7406\uff0c\u4f46\u662f\u901a\u8fc7\u7279\u6b8a\u624b\u6bb5\u53ef\u4ee5\u505a\u5230\uff0c\u6bd4\u5982\u4e00\u4e2aView\u5c06\u672c\u8be5\u81ea\u5df1\u5904\u7406\u7684\u4e8b\u4ef6\u901a\u8fc7onTouchEvent\u5f3a\u884c\u4f20\u9012\u7ed9\u5176\u4ed6View\u5904\u7406\u3002 \u67d0\u4e2aView\u4e00\u65e6\u5f00\u59cb\u5904\u7406\u4e8b\u4ef6\uff0c\u5982\u679c\u5b83\u4e0d\u6d88\u8017ACTION_DOWN\u4e8b\u4ef6\uff0c\u90a3\u4e48\u540c\u4e00\u4e8b\u4ef6\u5e8f\u5217\u7684\u5176\u4ed6\u4e8b\u60c5\u90fd\u4e0d\u4f1a\u518d\u4ea4\u7ed9\u5b83\u6765\u5904\u7406\uff0c\u5e76\u4e14\u4e8b\u4ef6\u5c06\u91cd\u65b0\u4ea4\u7ed9\u5b83\u7684\u7236\u5bb9\u5668\u53bb\u5904\u7406\uff08\u8c03\u7528\u7236\u5bb9\u5668\u7684onTouchEvent\u65b9\u6cd5\uff09\uff1b\u5982\u679c\u5b83\u6d88\u8017ACTION_DOWN\u4e8b\u4ef6\uff0c\u4f46\u662f\u4e0d\u6d88\u8017\u5176\u4ed6\u7c7b\u578b\u4e8b\u4ef6\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u51fb\u4e8b\u4ef6\u4f1a\u6d88\u5931\uff0c\u7236\u5bb9\u5668\u7684onTouchEvent\u65b9\u6cd5\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u5f53\u524dview\u4f9d\u7136\u53ef\u4ee5\u6536\u5230\u540e\u7eed\u7684\u4e8b\u4ef6\uff0c\u4f46\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u6700\u540e\u90fd\u4f1a\u4f20\u9012\u7ed9Activity\u5904\u7406\u3002 Android\u70b9\u51fb\u4e8b\u4ef6\u5206\u53d1\u662f\u5230\u8fbe\u9876\u7ea7View\u540e\uff08\u4e00\u822c\u662fViewGroup\uff09\uff0c\u4f1a\u8c03\u7528ViewGroup\u7684dispatchTouchEvent\u65b9\u6cd5\uff0c\u5176\u4e2d\u5b83\u7684onInterceptTouchEvent\u65b9\u6cd5\u5982\u679c\u8fd4\u56detrue\uff0c\u5219\u4f1a\u5bf9\u4e8b\u4ef6\u4f20\u9012\u8fdb\u884c\u62e6\u622a\uff0c\u4e8b\u4ef6\u7531ViewGroup\u5904\u7406\uff1b\u5982\u679conInterceptTouchEvent\u65b9\u6cd5\u8fd4\u56defalse\uff0c\u5219\u4ee3\u8868\u4e0d\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u62e6\u622a\uff0c\u9ed8\u8ba4\u8fd4\u56defalse\u3002\u5219\u6b64\u65f6\u5b50View\u4e2d\u7684dispatchTouchEvent\u65b9\u6cd5\u5c06\u88ab\u8c03\u7528\uff0c\u5230\u6b64\uff0c\u4e8b\u4ef6\u5df2\u7ecf\u7531\u9876\u7ea7View\u4f20\u9012\u7ed9\u4e86\u4e0b\u4e00\u5c42\u7684View\uff0c\u63a5\u4e0b\u6765\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u9012\u5f52\u5faa\u73af\u7684\u8fc7\u7a0b\uff0c\u548c\u9876\u7ea7View\u4e8b\u4ef6\u5206\u53d1\u8fc7\u7a0b\u662f\u4e00\u81f4\u7684\uff0c\u76f4\u5230\u5b8c\u6210\u6574\u4e2a\u4e8b\u4ef6\u5206\u53d1\u3002 \u53c2\u8003 Android\u4e8b\u4ef6\u5206\u53d1\u673a\u5236\u8be6\u89e3\uff1a\u53f2\u4e0a\u6700\u5168\u9762\u3001\u6700\u6613\u61c2 Android\u4e8b\u4ef6\u5206\u53d1\u673a\u5236\u5b8c\u5168\u89e3\u6790\uff0c\u5e26\u4f60\u4ece\u6e90\u7801\u7684\u89d2\u5ea6\u5f7b\u5e95\u7406\u89e3(\u4e0a) Android\u4e8b\u4ef6\u5206\u53d1\u673a\u5236\u5b8c\u5168\u89e3\u6790\uff0c\u5e26\u4f60\u4ece\u6e90\u7801\u7684\u89d2\u5ea6\u5f7b\u5e95\u7406\u89e3(\u4e0b)","title":"\u4e8b\u4ef6\u5206\u53d1\u673a\u5236"},{"location":"Android/1-Basic/event-dispatch/#_1","text":"","title":"\u4e8b\u4ef6\u5206\u53d1\u673a\u5236"},{"location":"Android/1-Basic/event-dispatch/#motionevent","text":"MotionEvent\u67094\u79cd\u72b6\u6001: - MotionEvent.ACTION_DOWN\uff0c\u624b\u6307\u6309\u4e0b\u7684\u77ac\u95f4\uff1b - MotionEvent.ACTION_MOVE\uff0c\u624b\u6307\u5728\u5c4f\u5e55\u4e0a\u79fb\u52a8\uff1b - MotionEvent.ACTION_UP\uff0c\u624b\u6307\u62ac\u8d77\u7684\u77ac\u95f4\uff1b - MotionEvent.ACTION_CANCEL\uff0c\u53d6\u6d88\u624b\u52bf\uff0c\u4e00\u822c\u4e0d\u7531\u7528\u6237\u624b\u52a8\u4ea7\u751f. \u4e8b\u4ef6\u5206\u53d1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e0a\u5c42\u5411\u4e0b\u5c42\u4f20\u9012\uff0c\u76f4\u5230\u4e8b\u4ef6\u88ab\u5904\u7406\uff0c\u5982\u679c\u4f20\u5230\u6700\u5e95\u5c42\u4e5f\u6ca1\u6709\u5904\u7406\uff0c\u5219\u7ee7\u7eed\u5411\u5916\u5c42\u5206\u53d1\u3002","title":"MotionEvent"},{"location":"Android/1-Basic/event-dispatch/#3","text":"dispatchTouchEvent()\uff0c\u51b3\u5b9a\u4e8b\u4ef6\u662f\u5426\u5f80\u4e0b\u5206\u53d1\uff0c\u8fd4\u56detrue\u8868\u793a\u4e8b\u4ef6\u5df2\u7ecf\u88ab\u6d88\u8d39\uff0cfalse\u8868\u793a\u5728\u672c\u5c42\u4e8b\u4ef6\u4e0d\u5728\u5f80\u4e0b\u5206\u53d1\u7531\u4e0a\u5c42\u7684onEvent\u5904\u7406\u4e8b\u4ef6\uff0csuper\u8868\u793a\u4e8b\u4ef6\u7531\u672c\u5c42\u7684onInterceptTouchEvent\u51b3\u5b9a\u662f\u5426\u7ee7\u7eed\u5411\u4e0b\u5206\u53d1\u3002 onInterceptTouchEvent()\uff0c\u662f\u5426\u5bf9\u4e8b\u4ef6\u62e6\u622a\uff0c\u8fd4\u56defalse\u7684\u65f6\u5019\uff0c\u8868\u793a\u4e0d\u62e6\u622a\uff0c\u4ea4\u7531\u4e0b\u5c42\u7684dispatchTouchEvent\u7ee7\u7eed\u5904\u7406\uff0c\u5426\u5219\u62e6\u622a\u4e8b\u4ef6\uff0c\u7531\u672c\u5c42\u7684onTouchEvent\u5904\u7406\uff1b onTouchEvent()\uff0c\u4e8b\u4ef6\u5904\u7406\uff0c\u8fd4\u56detrue\u7684\uff0c\u8868\u793a\u4e8b\u4ef6\u88ab\u6d88\u8d39\uff0c\u4e0d\u518d\u4f20\u9012\uff0c\u8fd4\u56defalse\u6216\u8005super\uff0c\u4e8b\u4ef6\u90fd\u7ee7\u7eed\u5411\u4e0a\u5c42\u7ee7\u7eed\u4f20\u9012\u3002","title":"3\u4e2a\u91cd\u8981\u65b9\u6cd5"},{"location":"Android/1-Basic/event-dispatch/#android","text":"\u4e00\u4e2a\u4e8b\u4ef6\u5e8f\u5217\u662f\u6307\u4ece\u624b\u6307\u89e6\u6478\u5c4f\u5e55\u5f00\u59cb\uff0c\u5230\u624b\u6307\u79bb\u5f00\u5c4f\u5e55\u7ed3\u675f\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u4e00\u7cfb\u5217\u4e8b\u4ef6\u3002\u540c\u4e00\u4e2a\u4e8b\u4ef6\u5e8f\u5217\u662f\u4ee5ACTION_DOWN\u4e8b\u4ef6\u5f00\u59cb\uff0c\u4e2d\u95f4\u542b\u6709\u6570\u91cf\u4e0d\u5b9a\u7684MOVE\u4e8b\u4ef6\uff0c\u6700\u7ec8\u4ee5ACTION_UP\u4e8b\u4ef6\u7ed3\u675f\u3002 \u4e8b\u4ef6\u4f20\u9012\u7684\u987a\u5e8f\u662f\uff1aActivity->Window->View\uff0c\u5373\u4e8b\u4ef6\u603b\u662f\u5148\u4f20\u9012\u7ed9Activity\uff0c\u7136\u540e\u5728\u4f20\u9012\u7ed9Window\uff0c\u6700\u540e\u5728\u4f20\u9012\u7ed9View\uff0c\u9876\u7ea7View\u63a5\u6536\u5230\u4e8b\u4ef6\u540e\uff0c\u5c31\u4f1a\u6309\u7167\u4e8b\u4ef6\u5206\u53d1\u673a\u5236\u53bb\u5206\u53d1\u4e8b\u4ef6\u3002 \u4e8b\u4ef6\u7684\u4f20\u9012\u8fc7\u7a0b\u662f\u7531\u5916\u5411\u5185\u7684\uff0c\u5373\u4e8b\u4ef6\u603b\u662f\u7531\u7236\u5143\u7d20\u5206\u53d1\u7ed9\u5b50\u5143\u7d20\u3002 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u4e8b\u4ef6\u5e8f\u5217\u53ea\u80fd\u88ab\u4e00\u4e2aView\u62e6\u622a\u4e14\u6d88\u8017\u3002\u4e00\u65e6\u4e00\u4e2a\u5143\u7d20\u62e6\u622a\u4e86\u67d0\u6b21\u4e8b\u4ef6\uff0c\u90a3\u4e48\u540c\u4e00\u4e2a\u4e8b\u4ef6\u5e8f\u5217\u5185\u7684\u6240\u6709\u4e8b\u4ef6\u90fd\u4f1a\u76f4\u63a5\u4ea4\u7ed9\u5b83\u5904\u7406\uff0c\u56e0\u6b64\u540c\u4e00\u4e2a\u4e8b\u4ef6\u5e8f\u5217\u4e2d\u7684\u4e8b\u4ef6\u4e0d\u80fd\u5206\u522b\u7531\u4e24\u4e2aView\u540c\u65f6\u5904\u7406\uff0c\u4f46\u662f\u901a\u8fc7\u7279\u6b8a\u624b\u6bb5\u53ef\u4ee5\u505a\u5230\uff0c\u6bd4\u5982\u4e00\u4e2aView\u5c06\u672c\u8be5\u81ea\u5df1\u5904\u7406\u7684\u4e8b\u4ef6\u901a\u8fc7onTouchEvent\u5f3a\u884c\u4f20\u9012\u7ed9\u5176\u4ed6View\u5904\u7406\u3002 \u67d0\u4e2aView\u4e00\u65e6\u5f00\u59cb\u5904\u7406\u4e8b\u4ef6\uff0c\u5982\u679c\u5b83\u4e0d\u6d88\u8017ACTION_DOWN\u4e8b\u4ef6\uff0c\u90a3\u4e48\u540c\u4e00\u4e8b\u4ef6\u5e8f\u5217\u7684\u5176\u4ed6\u4e8b\u60c5\u90fd\u4e0d\u4f1a\u518d\u4ea4\u7ed9\u5b83\u6765\u5904\u7406\uff0c\u5e76\u4e14\u4e8b\u4ef6\u5c06\u91cd\u65b0\u4ea4\u7ed9\u5b83\u7684\u7236\u5bb9\u5668\u53bb\u5904\u7406\uff08\u8c03\u7528\u7236\u5bb9\u5668\u7684onTouchEvent\u65b9\u6cd5\uff09\uff1b\u5982\u679c\u5b83\u6d88\u8017ACTION_DOWN\u4e8b\u4ef6\uff0c\u4f46\u662f\u4e0d\u6d88\u8017\u5176\u4ed6\u7c7b\u578b\u4e8b\u4ef6\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u51fb\u4e8b\u4ef6\u4f1a\u6d88\u5931\uff0c\u7236\u5bb9\u5668\u7684onTouchEvent\u65b9\u6cd5\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u5f53\u524dview\u4f9d\u7136\u53ef\u4ee5\u6536\u5230\u540e\u7eed\u7684\u4e8b\u4ef6\uff0c\u4f46\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u6700\u540e\u90fd\u4f1a\u4f20\u9012\u7ed9Activity\u5904\u7406\u3002 Android\u70b9\u51fb\u4e8b\u4ef6\u5206\u53d1\u662f\u5230\u8fbe\u9876\u7ea7View\u540e\uff08\u4e00\u822c\u662fViewGroup\uff09\uff0c\u4f1a\u8c03\u7528ViewGroup\u7684dispatchTouchEvent\u65b9\u6cd5\uff0c\u5176\u4e2d\u5b83\u7684onInterceptTouchEvent\u65b9\u6cd5\u5982\u679c\u8fd4\u56detrue\uff0c\u5219\u4f1a\u5bf9\u4e8b\u4ef6\u4f20\u9012\u8fdb\u884c\u62e6\u622a\uff0c\u4e8b\u4ef6\u7531ViewGroup\u5904\u7406\uff1b\u5982\u679conInterceptTouchEvent\u65b9\u6cd5\u8fd4\u56defalse\uff0c\u5219\u4ee3\u8868\u4e0d\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u62e6\u622a\uff0c\u9ed8\u8ba4\u8fd4\u56defalse\u3002\u5219\u6b64\u65f6\u5b50View\u4e2d\u7684dispatchTouchEvent\u65b9\u6cd5\u5c06\u88ab\u8c03\u7528\uff0c\u5230\u6b64\uff0c\u4e8b\u4ef6\u5df2\u7ecf\u7531\u9876\u7ea7View\u4f20\u9012\u7ed9\u4e86\u4e0b\u4e00\u5c42\u7684View\uff0c\u63a5\u4e0b\u6765\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u9012\u5f52\u5faa\u73af\u7684\u8fc7\u7a0b\uff0c\u548c\u9876\u7ea7View\u4e8b\u4ef6\u5206\u53d1\u8fc7\u7a0b\u662f\u4e00\u81f4\u7684\uff0c\u76f4\u5230\u5b8c\u6210\u6574\u4e2a\u4e8b\u4ef6\u5206\u53d1\u3002 \u53c2\u8003 Android\u4e8b\u4ef6\u5206\u53d1\u673a\u5236\u8be6\u89e3\uff1a\u53f2\u4e0a\u6700\u5168\u9762\u3001\u6700\u6613\u61c2 Android\u4e8b\u4ef6\u5206\u53d1\u673a\u5236\u5b8c\u5168\u89e3\u6790\uff0c\u5e26\u4f60\u4ece\u6e90\u7801\u7684\u89d2\u5ea6\u5f7b\u5e95\u7406\u89e3(\u4e0a) Android\u4e8b\u4ef6\u5206\u53d1\u673a\u5236\u5b8c\u5168\u89e3\u6790\uff0c\u5e26\u4f60\u4ece\u6e90\u7801\u7684\u89d2\u5ea6\u5f7b\u5e95\u7406\u89e3(\u4e0b)","title":"Android\u89e6\u6478\u4e8b\u4ef6\u6d41\u7a0b\u603b\u7ed3"},{"location":"Android/1-Basic/how-is-view-drew/","text":"View\u7684\u7ed8\u5236\u6d41\u7a0b \u6d4b\u91cf(Measure) onMeasure(int widthSpec, int heightSpec) \u5bbd\u9ad8\u7684MeasureSpec\uff0cint\u503c32\u4f4d\uff0c\u9ad8\u4e24\u4f4d\u8868\u793aMode\uff0c \u4f4e30\u4f4d\u8868\u793asize\uff0c\u6d4b\u91cf\u65f6\uff0cmeasureSpec\u7531\u7236View\u5411\u5b50View\u4f20\u9012\u3002 MeasureSpec\u7684Mode\u67093\u79cd\u503c\uff1a UNSPECIFIED \u7236\u5bb9\u5668\u5bf9\u5b50\u5bb9\u5668\u6ca1\u6709\u4efb\u4f55\u9650\u5236\uff0c\u5b50\u5bb9\u5668\u60f3\u8981\u591a\u5927\u90fd\u53ef\u4ee5 EXACTLY \u7236\u5bb9\u5668\u5df2\u7ecf\u4e3a\u5b50\u5bb9\u5668\u8bbe\u7f6e\u4e86\u5c3a\u5bf8,\u5b50\u5bb9\u5668\u5e94\u5f53\u670d\u4ece\u8fd9\u4e9b\u8fb9\u754c,\u4e0d\u8bba\u5b50\u5bb9\u5668\u60f3\u8981\u591a\u5927\u7684\u7a7a\u95f4\u3002 AT_MOST \u5b50\u5bb9\u5668\u5927\u5c0f\u53ef\u4ee5\u662f\u6307\u5b9a\u5927\u5c0f\u5185\u7684\u4efb\u610f\u503c \u7236View\u7684MeasureSpec\u662fEXACTLY \u5b50View\u7684layout_width\u6216layout_height\u662fmatch_parent\uff0c\u5219\u5b50View\u7684MeasureSpec\u4e5f\u662fEXACTLY; \u5b50View\u7684layout_xxx\u662fwrap_content\uff0cMeasureSpec\u662fAT_MOST; \u5b50View\u7684layout_xxx\u662f\u5177\u4f53\u7684\u503c\uff0cMeasureSpec\u662fEXACTLY. \u7236View\u7684MeasureSpec\u662fUNSPECIFIED \u5b50View\u7684layout_xxx\u662fmatch_parent\uff0cMeasureSpec\u662fUNSPECIFIED; \u5b50View\u7684layout_xxx\u662fwrap_content\uff0cMeasureSpec\u662fUNSPECIFIED; \u5b50View\u7684layout_xxx\u662f\u5177\u4f53\u503c\uff0cMeasureSpec\u662fEXACTLY. \u7236View\u7684MeasureSpec\u662fAT_MOST \u5b50View\u7684layout_xxx\u662fmatch_parent\uff0cMeasureSpec\u662f AT_MOST; \u5b50View\u7684layout_xxx\u662fwrap_content\uff0cMeasureSpec\u662fAT_MOST; \u5b50View\u7684layout_xxx\u662f\u5177\u4f53\u503c\uff0cMeasureSpec\u662fEXACTLY. setMeasuredDimension(w, h)\uff0c\u8bbe\u7f6e\u5b8c\u4e4b\u540e\uff0c\u6d4b\u91cf\u7ed3\u675f\u3002 getDefault(getSuggestedMinimum(), measureSpec)\uff0c\u5efa\u8bae\u6700\u5c0f\u4e00\u822c\u662f\u80cc\u666f\u56fe\u7684\u5927\u5c0f\uff0c\u6216\u8005\u662fminXXX\u7684\u5927\u5c0f\uff0c\u53ea\u8981measureSpec\u4e0d\u662fUNSPECIFIED\u7684\uff0c\u90fd\u662f\u7528\u7684\u6d4b\u91cf\u503c\u3002 \u5e03\u5c40(layout) \u7ecf\u8fc7\u6d4b\u91cf\u4e4b\u540e\uff0cmMeasuredWidth\u548cmMeasuredHeight\u83b7\u53d6\u5230\u6d4b\u91cf\u7684\u5927\u5c0f\uff0c\u6839\u636egravity\u7b49\u5c5e\u6027\uff0c\u786e\u5b9a\u6bcf\u4e2aView\u7684\u4f4d\u7f6e\uff0c\u8c03\u7528\u6bcf\u4e2aView\u7684layout(l,t,r,b)\u65b9\u6cd5\uff0c\u8bbe\u7f6e\u5176\u4f4d\u7f6e\u3002 \u7ed8\u5236(draw) \u7ed8\u5236\u80cc\u666f\uff1b \u5982\u679c\u6709\u5fc5\u8981\uff0c\u4fdd\u5b58\u753b\u5e03\u7684layer\u51c6\u5907fading; \u7ed8\u5236View\u5185\u5bb9; \u7ed8\u5236\u5b50View; \u5982\u679c\u9700\u8981\uff0c\u7ed8\u5236fading edges\uff0c\u6062\u590dlayer; \u7ed8\u5236\u6eda\u52a8\u6761 requestLayout()\u4f1a\u91cd\u65b0\u5e03\u5c40\uff0cinvalidate()\u548cpostInvalidate()\u91cd\u65b0\u7ed8\u5236\uff0cinvalidate\u662f\u5728\u4e3b\u7ebf\u7a0b\u4e2d\uff0cpostInvalidate\u662f\u5f02\u6b65\u5237\u65b0 \u53c2\u8003 View\u7684\u7ed8\u5236\u6d41\u7a0b","title":"View\u7684\u7ed8\u5236\u6d41\u7a0b"},{"location":"Android/1-Basic/how-is-view-drew/#view","text":"\u6d4b\u91cf(Measure) onMeasure(int widthSpec, int heightSpec) \u5bbd\u9ad8\u7684MeasureSpec\uff0cint\u503c32\u4f4d\uff0c\u9ad8\u4e24\u4f4d\u8868\u793aMode\uff0c \u4f4e30\u4f4d\u8868\u793asize\uff0c\u6d4b\u91cf\u65f6\uff0cmeasureSpec\u7531\u7236View\u5411\u5b50View\u4f20\u9012\u3002 MeasureSpec\u7684Mode\u67093\u79cd\u503c\uff1a UNSPECIFIED \u7236\u5bb9\u5668\u5bf9\u5b50\u5bb9\u5668\u6ca1\u6709\u4efb\u4f55\u9650\u5236\uff0c\u5b50\u5bb9\u5668\u60f3\u8981\u591a\u5927\u90fd\u53ef\u4ee5 EXACTLY \u7236\u5bb9\u5668\u5df2\u7ecf\u4e3a\u5b50\u5bb9\u5668\u8bbe\u7f6e\u4e86\u5c3a\u5bf8,\u5b50\u5bb9\u5668\u5e94\u5f53\u670d\u4ece\u8fd9\u4e9b\u8fb9\u754c,\u4e0d\u8bba\u5b50\u5bb9\u5668\u60f3\u8981\u591a\u5927\u7684\u7a7a\u95f4\u3002 AT_MOST \u5b50\u5bb9\u5668\u5927\u5c0f\u53ef\u4ee5\u662f\u6307\u5b9a\u5927\u5c0f\u5185\u7684\u4efb\u610f\u503c \u7236View\u7684MeasureSpec\u662fEXACTLY \u5b50View\u7684layout_width\u6216layout_height\u662fmatch_parent\uff0c\u5219\u5b50View\u7684MeasureSpec\u4e5f\u662fEXACTLY; \u5b50View\u7684layout_xxx\u662fwrap_content\uff0cMeasureSpec\u662fAT_MOST; \u5b50View\u7684layout_xxx\u662f\u5177\u4f53\u7684\u503c\uff0cMeasureSpec\u662fEXACTLY. \u7236View\u7684MeasureSpec\u662fUNSPECIFIED \u5b50View\u7684layout_xxx\u662fmatch_parent\uff0cMeasureSpec\u662fUNSPECIFIED; \u5b50View\u7684layout_xxx\u662fwrap_content\uff0cMeasureSpec\u662fUNSPECIFIED; \u5b50View\u7684layout_xxx\u662f\u5177\u4f53\u503c\uff0cMeasureSpec\u662fEXACTLY. \u7236View\u7684MeasureSpec\u662fAT_MOST \u5b50View\u7684layout_xxx\u662fmatch_parent\uff0cMeasureSpec\u662f AT_MOST; \u5b50View\u7684layout_xxx\u662fwrap_content\uff0cMeasureSpec\u662fAT_MOST; \u5b50View\u7684layout_xxx\u662f\u5177\u4f53\u503c\uff0cMeasureSpec\u662fEXACTLY. setMeasuredDimension(w, h)\uff0c\u8bbe\u7f6e\u5b8c\u4e4b\u540e\uff0c\u6d4b\u91cf\u7ed3\u675f\u3002 getDefault(getSuggestedMinimum(), measureSpec)\uff0c\u5efa\u8bae\u6700\u5c0f\u4e00\u822c\u662f\u80cc\u666f\u56fe\u7684\u5927\u5c0f\uff0c\u6216\u8005\u662fminXXX\u7684\u5927\u5c0f\uff0c\u53ea\u8981measureSpec\u4e0d\u662fUNSPECIFIED\u7684\uff0c\u90fd\u662f\u7528\u7684\u6d4b\u91cf\u503c\u3002 \u5e03\u5c40(layout) \u7ecf\u8fc7\u6d4b\u91cf\u4e4b\u540e\uff0cmMeasuredWidth\u548cmMeasuredHeight\u83b7\u53d6\u5230\u6d4b\u91cf\u7684\u5927\u5c0f\uff0c\u6839\u636egravity\u7b49\u5c5e\u6027\uff0c\u786e\u5b9a\u6bcf\u4e2aView\u7684\u4f4d\u7f6e\uff0c\u8c03\u7528\u6bcf\u4e2aView\u7684layout(l,t,r,b)\u65b9\u6cd5\uff0c\u8bbe\u7f6e\u5176\u4f4d\u7f6e\u3002 \u7ed8\u5236(draw) \u7ed8\u5236\u80cc\u666f\uff1b \u5982\u679c\u6709\u5fc5\u8981\uff0c\u4fdd\u5b58\u753b\u5e03\u7684layer\u51c6\u5907fading; \u7ed8\u5236View\u5185\u5bb9; \u7ed8\u5236\u5b50View; \u5982\u679c\u9700\u8981\uff0c\u7ed8\u5236fading edges\uff0c\u6062\u590dlayer; \u7ed8\u5236\u6eda\u52a8\u6761 requestLayout()\u4f1a\u91cd\u65b0\u5e03\u5c40\uff0cinvalidate()\u548cpostInvalidate()\u91cd\u65b0\u7ed8\u5236\uff0cinvalidate\u662f\u5728\u4e3b\u7ebf\u7a0b\u4e2d\uff0cpostInvalidate\u662f\u5f02\u6b65\u5237\u65b0 \u53c2\u8003 View\u7684\u7ed8\u5236\u6d41\u7a0b","title":"View\u7684\u7ed8\u5236\u6d41\u7a0b"},{"location":"Android/1-Basic/keep-alive/","text":"\u4ece\u4e24\u65b9\u9762\u8003\u8651\uff0c\u63d0\u9ad8\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\uff0c\u6216\u8005\u5728\u8fdb\u7a0b\u88ab\u6740\u6b7b\u4e4b\u540e\u7684\u5524\u9192 \u8fdb\u7a0b\u4f18\u5148\u7ea7 \u2003\u2003\u524d\u53f0\u8fdb\u7a0b > \u53ef\u89c1\u8fdb\u7a0b > \u670d\u52a1\u8fdb\u7a0b > \u540e\u53f0\u8fdb\u7a0b > \u7a7a\u8fdb\u7a0b \u63d0\u9ad8\u8fdb\u7a0b\u4f18\u5148\u7ea7\u7684\u65b9\u5f0f \u5229\u7528Activity\uff0c\u9501\u5c4f\u65f6\u542f\u52a8\u4e00\u4e2a1\u50cf\u7d20\u7684Activity\uff0c\u89e3\u9501\u4e4b\u540e\uff0c\u7ed3\u675f\u6389\uff1b Service\u7684setForeground()\uff0c2.3\u4e4b\u540e\u8bbe\u7f6e\u7684\u540c\u65f6\u9700\u8981\u53d1\u4e00\u6761\u901a\u77e5\uff0c\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2a\u5185\u90e8Service\uff0c\u53d1\u5b8c\u901a\u77e5\u4e4b\u540e\uff0c\u9a6c\u4e0a\u7ed3\u675f\u8c03\u5185\u90e8Service. \u8fdb\u7a0b\u5524\u9192 \u76d1\u542c\u7cfb\u7edf\u7684\u5e7f\u64ad\uff0c\u5f00\u673a\uff0c\u5c4f\u5e55\u89e3\u9501\uff0c\u5e94\u7528\u5b89\u88c5\u7b49\uff1b \u5229\u7528\u7b2c\u4e09\u65b9\u5e94\u7528\u7684\u5e7f\u64ad\uff1b \u5229\u7528Service\u6fc0\u6d3b\uff0cstartComand()\u4e2d\u8fd4\u56deSTART_STICKY\uff0c\u7b2c\u4e00\u6b215s\u91cd\u542f\uff0c\u4e4b\u540e10s\uff0c20s\uff0c\u77ed\u65f6\u95f4\u88ab\u6740\u6b7b5\u6b21\u4e0d\u91cd\u542f\uff0c\u88ab\u6709Root\u6743\u9650\u7684\u5e94\u7528froceStop\u4e4b\u540e\u4e0d\u91cd\u542f\uff1b \u5b88\u62a4\u8fdb\u7a0b\uff0c\u88ab\u6740\u6b7b\u4e4b\u540e\u4e92\u76f8\u5524\u9192\uff1b native\u65b9\u6cd5\uff1b JobSchedule\uff0c\u4ec5\u57285.0\u4e4b\u540e\u6709\u6548\uff1b \u5176\u4ed6\u65b9\u5f0f \u901a\u8fc7\u63a8\u9001\uff0cGoogle\u7684GCM\uff0c\u5c0f\u7c73\u63a8\u9001\uff0c\u534e\u4e3a\u63a8\u9001\uff0c\u767e\u5ea6\u63a8\u9001\u7b49\u3002 Android\u8fdb\u7a0b\u4fdd\u6d3b\u62db\u5f0f\u5927\u5168--\u817e\u8bafBugly","title":"keep-alive"},{"location":"Java/Collections/","text":"Java\u7684\u96c6\u5408\u6846\u67b6 1. HashMap \u7b80\u5355\u5730\u8bf4\uff0cHashMap \u5728\u5e95\u5c42\u5c06 key-value \u5f53\u6210\u4e00\u4e2a\u6574\u4f53\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u4e2a\u6574\u4f53\u5c31\u662f\u4e00\u4e2a Entry \u5bf9\u8c61\u3002HashMap \u5e95\u5c42\u91c7\u7528\u4e00\u4e2a Entry[] \u6570\u7ec4\u6765\u4fdd\u5b58\u6240\u6709\u7684 key-value \u5bf9\uff0c\u5f53\u9700\u8981\u5b58\u50a8\u4e00\u4e2a Entry \u5bf9\u8c61\u65f6\uff0c\u4f1a\u6839\u636e hash \u7b97\u6cd5\u6765\u51b3\u5b9a\u5176\u5728\u6570\u7ec4\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u5728\u6839\u636e equals \u65b9\u6cd5\u51b3\u5b9a\u5176\u5728\u8be5\u6570\u7ec4\u4f4d\u7f6e\u4e0a\u7684\u94fe\u8868\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e\uff1b\u5f53\u9700\u8981\u53d6\u51fa\u4e00\u4e2aEntry \u65f6\uff0c\u4e5f\u4f1a\u6839\u636e hash \u7b97\u6cd5\u627e\u5230\u5176\u5728\u6570\u7ec4\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u518d\u6839\u636e equals \u65b9\u6cd5\u4ece\u8be5\u4f4d\u7f6e\u4e0a\u7684\u94fe\u8868\u4e2d\u53d6\u51fa\u8be5Entry\u3002 2. HashSet \u5bf9\u4e8e HashSet \u800c\u8a00\uff0c\u5b83\u662f\u57fa\u4e8e HashMap \u5b9e\u73b0\u7684\uff0cHashSet \u5e95\u5c42\u4f7f\u7528 HashMap \u6765\u4fdd\u5b58\u6240\u6709\u5143\u7d20\uff0c\u56e0\u6b64 HashSet \u7684\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\uff0c\u76f8\u5173 HashSet \u7684\u64cd\u4f5c\uff0c\u57fa\u672c\u4e0a\u90fd\u662f\u76f4\u63a5\u8c03\u7528\u5e95\u5c42 HashMap \u7684\u76f8\u5173\u65b9\u6cd5\u6765\u5b8c\u6210\uff0c\u6211\u4eec\u5e94\u8be5\u4e3a\u4fdd\u5b58\u5230 HashSet \u4e2d\u7684\u5bf9\u8c61\u8986\u76d6 hashCode() \u548c equals() 3. HashMap\u4e0eHashtable\u7684\u533a\u522b HashTable \u57fa\u4e8e Dictionary \u7c7b\uff0c\u800c HashMap \u662f\u57fa\u4e8e AbstractMap\u3002Dictionary \u662f\u4efb\u4f55\u53ef\u5c06\u952e\u6620\u5c04\u5230\u76f8\u5e94\u503c\u7684\u7c7b\u7684\u62bd\u8c61\u7236\u7c7b\uff0c\u800c AbstractMap \u662f\u57fa\u4e8e Map \u63a5\u53e3\u7684\u5b9e\u73b0\uff0c\u5b83\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u5b9e\u73b0\u6b64\u63a5\u53e3\u6240\u9700\u7684\u5de5\u4f5c\u3002 HashMap \u7684 key \u548c value \u90fd\u5141\u8bb8\u4e3a null\uff0c\u800c Hashtable \u7684 key \u548c value \u90fd\u4e0d\u5141\u8bb8\u4e3a null\u3002HashMap \u9047\u5230 key \u4e3a null \u7684\u65f6\u5019\uff0c\u8c03\u7528 putForNullKey \u65b9\u6cd5\u8fdb\u884c\u5904\u7406\uff0c\u800c\u5bf9 value \u6ca1\u6709\u5904\u7406\uff1bHashtable\u9047\u5230 null\uff0c\u76f4\u63a5\u8fd4\u56de NullPointerException\u3002 Hashtable \u65b9\u6cd5\u662f\u540c\u6b65\uff0c\u800cHashMap\u5219\u4e0d\u662f\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u4e00\u4e0b\u6e90\u7801\uff0cHashtable \u4e2d\u7684\u51e0\u4e4e\u6240\u6709\u7684 public \u7684\u65b9\u6cd5\u90fd\u662f synchronized \u7684\uff0c\u800c\u6709\u4e9b\u65b9\u6cd5\u4e5f\u662f\u5728\u5185\u90e8\u901a\u8fc7 synchronized \u4ee3\u7801\u5757\u6765\u5b9e\u73b0\u3002\u6240\u4ee5\u6709\u4eba\u4e00\u822c\u90fd\u5efa\u8bae\u5982\u679c\u662f\u6d89\u53ca\u5230\u591a\u7ebf\u7a0b\u540c\u6b65\u65f6\u91c7\u7528 HashTable\uff0c\u6ca1\u6709\u6d89\u53ca\u5c31\u91c7\u7528 HashMap\uff0c\u4f46\u662f\u5728 Collections \u7c7b\u4e2d\u5b58\u5728\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff1asynchronizedMap()\uff0c\u8be5\u65b9\u6cd5\u521b\u5efa\u4e86\u4e00\u4e2a\u7ebf\u7a0b\u5b89\u5168\u7684 Map \u5bf9\u8c61\uff0c\u5e76\u628a\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u5c01\u88c5\u7684\u5bf9\u8c61\u6765\u8fd4\u56de\u3002 \u6839\u636ehash\u503c\u8ba1\u7b97\u4e0b\u6807\u7684\u65b9\u6cd5\u4e0d\u4e00\u6837\uff0cHashtable\u662f(hash & 0x7FFFFFFF) % tab.length\uff0cHashMap\u662fhash & (length-1) 4. LinkedHashMap \u7684\u5b9e\u73b0\u539f\u7406 \u5bf9\u4e8e LinkedHashMap \u800c\u8a00\uff0c\u5b83\u7ee7\u627f\u4e0e HashMap(public class LinkedHashMap extends HashMap implements Map )\u3001\u5e95\u5c42\u4f7f\u7528\u54c8\u5e0c\u8868\u4e0e\u53cc\u5411\u94fe\u8868\u6765\u4fdd\u5b58\u6240\u6709\u5143\u7d20\u3002\u5176\u57fa\u672c\u64cd\u4f5c\u4e0e\u7236\u7c7b HashMap \u76f8\u4f3c\uff0c\u5b83\u901a\u8fc7\u91cd\u5199\u7236\u7c7b\u76f8\u5173\u7684\u65b9\u6cd5\uff0c\u6765\u5b9e\u73b0\u81ea\u5df1\u7684\u94fe\u63a5\u5217\u8868\u7279\u6027\u3002 \u5b83\u91cd\u65b0\u5b9a\u4e49\u4e86\u6570\u7ec4\u4e2d\u4fdd\u5b58\u7684\u5143\u7d20 Entry\uff0c\u8be5 Entry \u9664\u4e86\u4fdd\u5b58\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\u5916\uff0c\u8fd8\u4fdd\u5b58\u4e86\u5176\u4e0a\u4e00\u4e2a\u5143\u7d20 before \u548c\u4e0b\u4e00\u4e2a\u5143\u7d20 after \u7684\u5f15\u7528\uff0c\u4ece\u800c\u5728\u54c8\u5e0c\u8868\u7684\u57fa\u7840\u4e0a\u53c8\u6784\u6210\u4e86\u53cc\u5411\u94fe\u63a5\u5217\u8868\u3002 \u5176\u5b9e LinkedHashMap \u51e0\u4e4e\u548c HashMap \u4e00\u6837\uff1a\u4ece\u6280\u672f\u4e0a\u6765\u8bf4\uff0c\u4e0d\u540c\u7684\u662f\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a Entry header\uff0c\u8fd9\u4e2a header \u4e0d\u662f\u653e\u5728 Table \u91cc\uff0c\u5b83\u662f\u989d\u5916\u72ec\u7acb\u51fa\u6765\u7684\u3002LinkedHashMap \u901a\u8fc7\u7ee7\u627f hashMap \u4e2d\u7684 Entry ,\u5e76\u6dfb\u52a0\u4e24\u4e2a\u5c5e\u6027 Entry before,after,\u548c header \u7ed3\u5408\u8d77\u6765\u7ec4\u6210\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\uff0c\u6765\u5b9e\u73b0\u6309\u63d2\u5165\u987a\u5e8f\u6216\u8bbf\u95ee\u987a\u5e8f\u6392\u5e8f\u3002 5. LinkedHashSet \u7684\u5b9e\u73b0\u539f\u7406 LinkedHashSet \u901a\u8fc7\u7ee7\u627f HashSet\uff0c\u5e95\u5c42\u4f7f\u7528 LinkedHashMap\uff0c\u4ee5\u5f88\u7b80\u5355\u660e\u4e86\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u4e86\u5176\u81ea\u8eab\u7684\u6240\u6709\u529f\u80fd\u3002 LinkedHashSet \u662f Set \u7684\u4e00\u4e2a\u5177\u4f53\u5b9e\u73b0\uff0c\u5176\u7ef4\u62a4\u7740\u4e00\u4e2a\u8fd0\u884c\u4e8e\u6240\u6709\u6761\u76ee\u7684\u53cc\u91cd\u94fe\u63a5\u5217\u8868\u3002\u6b64\u94fe\u63a5\u5217\u8868\u5b9a\u4e49\u4e86\u8fed\u4ee3\u987a\u5e8f\uff0c\u8be5\u8fed\u4ee3\u987a\u5e8f\u53ef\u4e3a\u63d2\u5165\u987a\u5e8f\u6216\u662f\u8bbf\u95ee\u987a\u5e8f\u3002 LinkedHashSet \u7ee7\u627f\u4e0e HashSet\uff0c\u5e76\u4e14\u5176\u5185\u90e8\u662f\u901a\u8fc7 LinkedHashMap \u6765\u5b9e\u73b0\u7684\u3002\u6709\u70b9\u7c7b\u4f3c\u4e8e\u6211\u4eec\u4e4b\u524d\u8bf4\u7684LinkedHashMap \u5176\u5185\u90e8\u662f\u57fa\u4e8e Hashmap \u5b9e\u73b0\u4e00\u6837\uff0c\u4e0d\u8fc7\u8fd8\u662f\u6709\u4e00\u70b9\u70b9\u533a\u522b\u7684\uff08\u5177\u4f53\u7684\u533a\u522b\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u53bb\u601d\u8003\u4e00\u4e0b\uff09\u3002 \u5982\u679c\u6211\u4eec\u9700\u8981\u8fed\u4ee3\u7684\u987a\u5e8f\u4e3a\u63d2\u5165\u987a\u5e8f\u6216\u8005\u8bbf\u95ee\u987a\u5e8f\uff0c\u90a3\u4e48 LinkedHashSet \u662f\u9700\u8981\u4f60\u9996\u5148\u8003\u8651\u7684\u3002 6. ArrayList\u7684\u5b9e\u73b0 \u6bcf\u4e2a ArrayList \u5b9e\u4f8b\u90fd\u6709\u4e00\u4e2a\u5bb9\u91cf\uff0c\u8be5\u5bb9\u91cf\u662f\u6307\u7528\u6765\u5b58\u50a8\u5217\u8868\u5143\u7d20\u7684\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u5b83\u603b\u662f\u81f3\u5c11\u7b49\u4e8e\u5217\u8868\u7684\u5927\u5c0f\u3002\u968f\u7740\u5411 ArrayList \u4e2d\u4e0d\u65ad\u6dfb\u52a0\u5143\u7d20\uff0c\u5176\u5bb9\u91cf\u4e5f\u81ea\u52a8\u589e\u957f\u3002\u81ea\u52a8\u589e\u957f\u4f1a\u5e26\u6765\u6570\u636e\u5411\u65b0\u6570\u7ec4\u7684\u91cd\u65b0\u62f7\u8d1d\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u53ef\u9884\u77e5\u6570\u636e\u91cf\u7684\u591a\u5c11\uff0c\u53ef\u5728\u6784\u9020 ArrayList \u65f6\u6307\u5b9a\u5176\u5bb9\u91cf\u3002\u5728\u6dfb\u52a0\u5927\u91cf\u5143\u7d20\u524d\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u4f7f\u7528 ensureCapacity \u64cd\u4f5c\u6765\u589e\u52a0 ArrayList \u5b9e\u4f8b\u7684\u5bb9\u91cf\uff0c\u8fd9\u53ef\u4ee5\u51cf\u5c11\u9012\u589e\u5f0f\u518d\u5206\u914d\u7684\u6570\u91cf\u3002 7. LinkedList LinkedList \u548c ArrayList \u4e00\u6837\uff0c\u90fd\u5b9e\u73b0\u4e86 List \u63a5\u53e3\uff0c\u4f46\u5176\u5185\u90e8\u7684\u6570\u636e\u7ed3\u6784\u6709\u672c\u8d28\u7684\u4e0d\u540c\u3002LinkedList \u662f\u57fa\u4e8e\u94fe\u8868\u5b9e\u73b0\u7684\uff08\u901a\u8fc7\u540d\u5b57\u4e5f\u80fd\u533a\u5206\u5f00\u6765\uff09\uff0c\u6240\u4ee5\u5b83\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u6bd4 ArrayList \u66f4\u52a0\u9ad8\u6548\u3002\u4f46\u4e5f\u662f\u7531\u4e8e\u5176\u4e3a\u57fa\u4e8e\u94fe\u8868\u7684\uff0c\u6240\u4ee5\u968f\u673a\u8bbf\u95ee\u7684\u6548\u7387\u8981\u6bd4 ArrayList \u5dee\u3002 8. ConcurrentHashMap\u7684\u539f\u7406 Java 8\u4e4b\u524d\u7684\u7248\u672c\u4e2d\uff0cConcurrentHashMap\u5e95\u5c42\u662f\u4e00\u4e2aSegment\u6570\u7ec4\uff0cSegment\u662f\u4e00\u4e2a\u7ee7\u627f\u81eaReenTrantLock\u7684\u7c7b\uff0c\u672c\u8eab\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u9501\uff0c\u5176\u4e2d\u53c8\u5305\u542b\u4e00\u4e2aHashEntry\u7684\u6570\u7ec4\uff0c\u63d2\u5165\u6570\u636e\u65f6\uff0c\u5148\u6839\u636ehash\u503c\u627e\u5230\u5bf9\u5e94\u7684Segment\uff0c\u7136\u540e\u518d\u5411Segment\u4e2d\u63d2\u5165\u6570\u636e\uff0c\u63d2\u5165\u65b9\u6cd5\u548cHashMap\u7c7b\u4f3c\u3002","title":"Java\u7684\u96c6\u5408\u6846\u67b6"},{"location":"Java/Collections/#java","text":"","title":"Java\u7684\u96c6\u5408\u6846\u67b6"},{"location":"Java/Collections/#1-hashmap","text":"\u7b80\u5355\u5730\u8bf4\uff0cHashMap \u5728\u5e95\u5c42\u5c06 key-value \u5f53\u6210\u4e00\u4e2a\u6574\u4f53\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u4e2a\u6574\u4f53\u5c31\u662f\u4e00\u4e2a Entry \u5bf9\u8c61\u3002HashMap \u5e95\u5c42\u91c7\u7528\u4e00\u4e2a Entry[] \u6570\u7ec4\u6765\u4fdd\u5b58\u6240\u6709\u7684 key-value \u5bf9\uff0c\u5f53\u9700\u8981\u5b58\u50a8\u4e00\u4e2a Entry \u5bf9\u8c61\u65f6\uff0c\u4f1a\u6839\u636e hash \u7b97\u6cd5\u6765\u51b3\u5b9a\u5176\u5728\u6570\u7ec4\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u5728\u6839\u636e equals \u65b9\u6cd5\u51b3\u5b9a\u5176\u5728\u8be5\u6570\u7ec4\u4f4d\u7f6e\u4e0a\u7684\u94fe\u8868\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e\uff1b\u5f53\u9700\u8981\u53d6\u51fa\u4e00\u4e2aEntry \u65f6\uff0c\u4e5f\u4f1a\u6839\u636e hash \u7b97\u6cd5\u627e\u5230\u5176\u5728\u6570\u7ec4\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u518d\u6839\u636e equals \u65b9\u6cd5\u4ece\u8be5\u4f4d\u7f6e\u4e0a\u7684\u94fe\u8868\u4e2d\u53d6\u51fa\u8be5Entry\u3002","title":"1. HashMap"},{"location":"Java/Collections/#2-hashset","text":"\u5bf9\u4e8e HashSet \u800c\u8a00\uff0c\u5b83\u662f\u57fa\u4e8e HashMap \u5b9e\u73b0\u7684\uff0cHashSet \u5e95\u5c42\u4f7f\u7528 HashMap \u6765\u4fdd\u5b58\u6240\u6709\u5143\u7d20\uff0c\u56e0\u6b64 HashSet \u7684\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\uff0c\u76f8\u5173 HashSet \u7684\u64cd\u4f5c\uff0c\u57fa\u672c\u4e0a\u90fd\u662f\u76f4\u63a5\u8c03\u7528\u5e95\u5c42 HashMap \u7684\u76f8\u5173\u65b9\u6cd5\u6765\u5b8c\u6210\uff0c\u6211\u4eec\u5e94\u8be5\u4e3a\u4fdd\u5b58\u5230 HashSet \u4e2d\u7684\u5bf9\u8c61\u8986\u76d6 hashCode() \u548c equals()","title":"2. HashSet"},{"location":"Java/Collections/#3-hashmaphashtable","text":"HashTable \u57fa\u4e8e Dictionary \u7c7b\uff0c\u800c HashMap \u662f\u57fa\u4e8e AbstractMap\u3002Dictionary \u662f\u4efb\u4f55\u53ef\u5c06\u952e\u6620\u5c04\u5230\u76f8\u5e94\u503c\u7684\u7c7b\u7684\u62bd\u8c61\u7236\u7c7b\uff0c\u800c AbstractMap \u662f\u57fa\u4e8e Map \u63a5\u53e3\u7684\u5b9e\u73b0\uff0c\u5b83\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u5b9e\u73b0\u6b64\u63a5\u53e3\u6240\u9700\u7684\u5de5\u4f5c\u3002 HashMap \u7684 key \u548c value \u90fd\u5141\u8bb8\u4e3a null\uff0c\u800c Hashtable \u7684 key \u548c value \u90fd\u4e0d\u5141\u8bb8\u4e3a null\u3002HashMap \u9047\u5230 key \u4e3a null \u7684\u65f6\u5019\uff0c\u8c03\u7528 putForNullKey \u65b9\u6cd5\u8fdb\u884c\u5904\u7406\uff0c\u800c\u5bf9 value \u6ca1\u6709\u5904\u7406\uff1bHashtable\u9047\u5230 null\uff0c\u76f4\u63a5\u8fd4\u56de NullPointerException\u3002 Hashtable \u65b9\u6cd5\u662f\u540c\u6b65\uff0c\u800cHashMap\u5219\u4e0d\u662f\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u4e00\u4e0b\u6e90\u7801\uff0cHashtable \u4e2d\u7684\u51e0\u4e4e\u6240\u6709\u7684 public \u7684\u65b9\u6cd5\u90fd\u662f synchronized \u7684\uff0c\u800c\u6709\u4e9b\u65b9\u6cd5\u4e5f\u662f\u5728\u5185\u90e8\u901a\u8fc7 synchronized \u4ee3\u7801\u5757\u6765\u5b9e\u73b0\u3002\u6240\u4ee5\u6709\u4eba\u4e00\u822c\u90fd\u5efa\u8bae\u5982\u679c\u662f\u6d89\u53ca\u5230\u591a\u7ebf\u7a0b\u540c\u6b65\u65f6\u91c7\u7528 HashTable\uff0c\u6ca1\u6709\u6d89\u53ca\u5c31\u91c7\u7528 HashMap\uff0c\u4f46\u662f\u5728 Collections \u7c7b\u4e2d\u5b58\u5728\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff1asynchronizedMap()\uff0c\u8be5\u65b9\u6cd5\u521b\u5efa\u4e86\u4e00\u4e2a\u7ebf\u7a0b\u5b89\u5168\u7684 Map \u5bf9\u8c61\uff0c\u5e76\u628a\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u5c01\u88c5\u7684\u5bf9\u8c61\u6765\u8fd4\u56de\u3002 \u6839\u636ehash\u503c\u8ba1\u7b97\u4e0b\u6807\u7684\u65b9\u6cd5\u4e0d\u4e00\u6837\uff0cHashtable\u662f(hash & 0x7FFFFFFF) % tab.length\uff0cHashMap\u662fhash & (length-1)","title":"3. HashMap\u4e0eHashtable\u7684\u533a\u522b"},{"location":"Java/Collections/#4-linkedhashmap","text":"\u5bf9\u4e8e LinkedHashMap \u800c\u8a00\uff0c\u5b83\u7ee7\u627f\u4e0e HashMap(public class LinkedHashMap extends HashMap implements Map )\u3001\u5e95\u5c42\u4f7f\u7528\u54c8\u5e0c\u8868\u4e0e\u53cc\u5411\u94fe\u8868\u6765\u4fdd\u5b58\u6240\u6709\u5143\u7d20\u3002\u5176\u57fa\u672c\u64cd\u4f5c\u4e0e\u7236\u7c7b HashMap \u76f8\u4f3c\uff0c\u5b83\u901a\u8fc7\u91cd\u5199\u7236\u7c7b\u76f8\u5173\u7684\u65b9\u6cd5\uff0c\u6765\u5b9e\u73b0\u81ea\u5df1\u7684\u94fe\u63a5\u5217\u8868\u7279\u6027\u3002 \u5b83\u91cd\u65b0\u5b9a\u4e49\u4e86\u6570\u7ec4\u4e2d\u4fdd\u5b58\u7684\u5143\u7d20 Entry\uff0c\u8be5 Entry \u9664\u4e86\u4fdd\u5b58\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\u5916\uff0c\u8fd8\u4fdd\u5b58\u4e86\u5176\u4e0a\u4e00\u4e2a\u5143\u7d20 before \u548c\u4e0b\u4e00\u4e2a\u5143\u7d20 after \u7684\u5f15\u7528\uff0c\u4ece\u800c\u5728\u54c8\u5e0c\u8868\u7684\u57fa\u7840\u4e0a\u53c8\u6784\u6210\u4e86\u53cc\u5411\u94fe\u63a5\u5217\u8868\u3002 \u5176\u5b9e LinkedHashMap \u51e0\u4e4e\u548c HashMap \u4e00\u6837\uff1a\u4ece\u6280\u672f\u4e0a\u6765\u8bf4\uff0c\u4e0d\u540c\u7684\u662f\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a Entry header\uff0c\u8fd9\u4e2a header \u4e0d\u662f\u653e\u5728 Table \u91cc\uff0c\u5b83\u662f\u989d\u5916\u72ec\u7acb\u51fa\u6765\u7684\u3002LinkedHashMap \u901a\u8fc7\u7ee7\u627f hashMap \u4e2d\u7684 Entry ,\u5e76\u6dfb\u52a0\u4e24\u4e2a\u5c5e\u6027 Entry before,after,\u548c header \u7ed3\u5408\u8d77\u6765\u7ec4\u6210\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\uff0c\u6765\u5b9e\u73b0\u6309\u63d2\u5165\u987a\u5e8f\u6216\u8bbf\u95ee\u987a\u5e8f\u6392\u5e8f\u3002","title":"4. LinkedHashMap \u7684\u5b9e\u73b0\u539f\u7406"},{"location":"Java/Collections/#5-linkedhashset","text":"LinkedHashSet \u901a\u8fc7\u7ee7\u627f HashSet\uff0c\u5e95\u5c42\u4f7f\u7528 LinkedHashMap\uff0c\u4ee5\u5f88\u7b80\u5355\u660e\u4e86\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u4e86\u5176\u81ea\u8eab\u7684\u6240\u6709\u529f\u80fd\u3002 LinkedHashSet \u662f Set \u7684\u4e00\u4e2a\u5177\u4f53\u5b9e\u73b0\uff0c\u5176\u7ef4\u62a4\u7740\u4e00\u4e2a\u8fd0\u884c\u4e8e\u6240\u6709\u6761\u76ee\u7684\u53cc\u91cd\u94fe\u63a5\u5217\u8868\u3002\u6b64\u94fe\u63a5\u5217\u8868\u5b9a\u4e49\u4e86\u8fed\u4ee3\u987a\u5e8f\uff0c\u8be5\u8fed\u4ee3\u987a\u5e8f\u53ef\u4e3a\u63d2\u5165\u987a\u5e8f\u6216\u662f\u8bbf\u95ee\u987a\u5e8f\u3002 LinkedHashSet \u7ee7\u627f\u4e0e HashSet\uff0c\u5e76\u4e14\u5176\u5185\u90e8\u662f\u901a\u8fc7 LinkedHashMap \u6765\u5b9e\u73b0\u7684\u3002\u6709\u70b9\u7c7b\u4f3c\u4e8e\u6211\u4eec\u4e4b\u524d\u8bf4\u7684LinkedHashMap \u5176\u5185\u90e8\u662f\u57fa\u4e8e Hashmap \u5b9e\u73b0\u4e00\u6837\uff0c\u4e0d\u8fc7\u8fd8\u662f\u6709\u4e00\u70b9\u70b9\u533a\u522b\u7684\uff08\u5177\u4f53\u7684\u533a\u522b\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u53bb\u601d\u8003\u4e00\u4e0b\uff09\u3002 \u5982\u679c\u6211\u4eec\u9700\u8981\u8fed\u4ee3\u7684\u987a\u5e8f\u4e3a\u63d2\u5165\u987a\u5e8f\u6216\u8005\u8bbf\u95ee\u987a\u5e8f\uff0c\u90a3\u4e48 LinkedHashSet \u662f\u9700\u8981\u4f60\u9996\u5148\u8003\u8651\u7684\u3002","title":"5. LinkedHashSet \u7684\u5b9e\u73b0\u539f\u7406"},{"location":"Java/Collections/#6-arraylist","text":"\u6bcf\u4e2a ArrayList \u5b9e\u4f8b\u90fd\u6709\u4e00\u4e2a\u5bb9\u91cf\uff0c\u8be5\u5bb9\u91cf\u662f\u6307\u7528\u6765\u5b58\u50a8\u5217\u8868\u5143\u7d20\u7684\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u5b83\u603b\u662f\u81f3\u5c11\u7b49\u4e8e\u5217\u8868\u7684\u5927\u5c0f\u3002\u968f\u7740\u5411 ArrayList \u4e2d\u4e0d\u65ad\u6dfb\u52a0\u5143\u7d20\uff0c\u5176\u5bb9\u91cf\u4e5f\u81ea\u52a8\u589e\u957f\u3002\u81ea\u52a8\u589e\u957f\u4f1a\u5e26\u6765\u6570\u636e\u5411\u65b0\u6570\u7ec4\u7684\u91cd\u65b0\u62f7\u8d1d\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u53ef\u9884\u77e5\u6570\u636e\u91cf\u7684\u591a\u5c11\uff0c\u53ef\u5728\u6784\u9020 ArrayList \u65f6\u6307\u5b9a\u5176\u5bb9\u91cf\u3002\u5728\u6dfb\u52a0\u5927\u91cf\u5143\u7d20\u524d\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u4f7f\u7528 ensureCapacity \u64cd\u4f5c\u6765\u589e\u52a0 ArrayList \u5b9e\u4f8b\u7684\u5bb9\u91cf\uff0c\u8fd9\u53ef\u4ee5\u51cf\u5c11\u9012\u589e\u5f0f\u518d\u5206\u914d\u7684\u6570\u91cf\u3002","title":"6. ArrayList\u7684\u5b9e\u73b0"},{"location":"Java/Collections/#7-linkedlist","text":"LinkedList \u548c ArrayList \u4e00\u6837\uff0c\u90fd\u5b9e\u73b0\u4e86 List \u63a5\u53e3\uff0c\u4f46\u5176\u5185\u90e8\u7684\u6570\u636e\u7ed3\u6784\u6709\u672c\u8d28\u7684\u4e0d\u540c\u3002LinkedList \u662f\u57fa\u4e8e\u94fe\u8868\u5b9e\u73b0\u7684\uff08\u901a\u8fc7\u540d\u5b57\u4e5f\u80fd\u533a\u5206\u5f00\u6765\uff09\uff0c\u6240\u4ee5\u5b83\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u6bd4 ArrayList \u66f4\u52a0\u9ad8\u6548\u3002\u4f46\u4e5f\u662f\u7531\u4e8e\u5176\u4e3a\u57fa\u4e8e\u94fe\u8868\u7684\uff0c\u6240\u4ee5\u968f\u673a\u8bbf\u95ee\u7684\u6548\u7387\u8981\u6bd4 ArrayList \u5dee\u3002","title":"7. LinkedList"},{"location":"Java/Collections/#8-concurrenthashmap","text":"Java 8\u4e4b\u524d\u7684\u7248\u672c\u4e2d\uff0cConcurrentHashMap\u5e95\u5c42\u662f\u4e00\u4e2aSegment\u6570\u7ec4\uff0cSegment\u662f\u4e00\u4e2a\u7ee7\u627f\u81eaReenTrantLock\u7684\u7c7b\uff0c\u672c\u8eab\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u9501\uff0c\u5176\u4e2d\u53c8\u5305\u542b\u4e00\u4e2aHashEntry\u7684\u6570\u7ec4\uff0c\u63d2\u5165\u6570\u636e\u65f6\uff0c\u5148\u6839\u636ehash\u503c\u627e\u5230\u5bf9\u5e94\u7684Segment\uff0c\u7136\u540e\u518d\u5411Segment\u4e2d\u63d2\u5165\u6570\u636e\uff0c\u63d2\u5165\u65b9\u6cd5\u548cHashMap\u7c7b\u4f3c\u3002","title":"8. ConcurrentHashMap\u7684\u539f\u7406"},{"location":"Java/Java-8-functional/","text":"Java 8\u51fd\u6570\u5f0f\u6570\u636e\u5904\u7406 1 \u6d41 1.1 \u6d41\u662f\u4ec0\u4e48 \u6d41 \u662fJava 8\u4e2d\u65b0\u5f15\u5165\u7684\u6982\u5ff5\uff0c\u5b83\u5141\u8bb8\u4f60\u4ee5\u58f0\u660e\u5f0f\u65b9\u5f0f\u5904\u7406\u6570\u636e\u96c6\u5408\uff08\u901a\u8fc7\u67e5\u8be2\u8bed\u53e5\u6765\u8868\u8fbe\uff0c\u800c\u4e0d\u662f\u4e34\u65f6\u7f16\u5199\u4e00\u4e2a\u5b9e\u73b0\uff09\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u7b5b\u9009\u51fa\u4ef7\u683c\u5927\u4e8e\u00a550\u7684\u83dc\u54c1\uff0c\u5e76\u5bf9\u8fd9\u4e9b\u83dc\u54c1\u8fdb\u884c\u6392\u5e8f\uff0c\u6700\u540e\u8fd4\u56de\u83dc\u54c1\u540d\u79f0\u7684\u96c6\u5408\uff0c\u5728Java 8\u4e4b\u524d\uff1a //\u7b2c\u4e00\u6b65\uff0c\u7b5b\u9009 List < Dish > tempList = new ArrayList <> ( dishes . size ()); for ( Dish dish : dishes ) { if ( dish . getPriceCent () > 5000 ) { tempList . add ( dish ); } } //\u7b2c\u4e8c\u6b65\uff0c\u6392\u5e8f Collections . sort ( tempList , new Comparator < Dish > () { public int compare ( Dish d1 , Dish d2 ) { return d1 . getPriceCent () - d2 . getPriceCent (); } }); //\u7b2c\u4e09\u6b65\uff0c\u8fd4\u56de\u540d\u79f0\u96c6\u5408 List < String > result = new ArrayList <> ( tempList . size ()) for ( Dish dish : tempList ) { result . add ( dish . getName ()); } \u5728Java 8\u4e2d\uff0c\u5f15\u5165\u4e86\u6d41\u7684\u6982\u5ff5\u4e4b\u540e\uff0c\u7ed3\u5408Lambda\u8868\u8fbe\u5f0f\uff1a List < String > result = dishes . stream () . filter ( dish -> dish . getPriceCent () > 5000 ) . sorted ( comparing ( Dish :: getPriceCent )) . map ( Dish :: getName ) . collect ( toList ()); \u6d41\u5f0f\u65b9\u6cd5\u7684\u597d\u5904\uff1a \u4ee3\u7801\u662f\u4ee5\u58f0\u660e\u6027\u65b9\u5f0f\u5199\u7684\uff0c\u8bf4\u660e\u60f3\u8981\u5b8c\u6210\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u64cd\u4f5c\uff1b \u628a\u51e0\u4e2a\u57fa\u672c\u64cd\u4f5c\u94fe\u63a5\u8d77\u6765\uff0c\u7528\u4ee5\u8868\u8fbe\u590d\u6742\u7684\u6570\u636e\u64cd\u4f5c\u6d41\u6c34\u7ebf\uff0c\u4f7f\u4ee3\u7801\u6e05\u6670\u53ef\u8bfb\u3002 \u4f7f\u7528Java 8\u7684Stream API\u53ef\u4ee5\u5199\u51fa\u8fd9\u6837\u7684\u4ee3\u7801\uff1a \u58f0\u660e\u6027\u2014\u2014\u66f4\u7b80\u6d01 \uff0c\u66f4\u6613\u8bfb \u53ef\u590d\u5408\u2014\u2014\u66f4\u7075\u6d3b \u53ef\u5e76\u884c\u2014\u2014\u6027\u80fd\u66f4\u597d 1.2 \u6d41\u7b80\u4ecb 1.2.1 \u6982\u5ff5\u548c\u672f\u8bed Java 8\u4e2d\u7684\u96c6\u5408\u652f\u6301\u4e00\u4e2a\u65b0\u7684stream\u65b9\u6cd5\uff0c\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6d41\uff0c\u5f53\u7136\u4e5f\u6709\u5f88\u591a\u5176\u4ed6\u65b9\u6cd5\uff0c\u6bd4\u5982\u5229\u7528\u6570\u503c\u8303\u56f4\u6216\u8005I/O\u8d44\u6e90\u4e5f\u53ef\u4ee5\u751f\u6210\u6d41\u5143\u7d20\u3002 \u5b9a\u4e49\uff1a \u4ece\u652f\u6301\u6570\u636e\u5904\u7406\u64cd\u4f5c\u7684\u6e90\u751f\u6210\u5f97\u5143\u7d20\u5e8f\u5217\u3002 \u5173\u952e\u6982\u5ff5\uff1a \u672f\u8bed \u8bf4\u660e \u5143\u7d20\u5e8f\u5217 \u7c7b\u4f3c\u96c6\u5408\uff0c\u6d41\u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\uff0c\u53ef\u4ee5\u8bbf\u95ee\u7279\u5b9a\u5143\u7d20\u7c7b\u578b\u7684\u4e00\u7ec4\u6709\u5e8f\u503c\u3002\u96c6\u5408\u8bb2\u7684\u662f\u6570\u636e\uff0c\u6d41\u8bb2\u7684\u662f\u8ba1\u7b97\u3002 \u6e90 \u6d41\u4f1a\u4f7f\u7528\u4e00\u4e2a\u63d0\u4f9b\u6570\u636e\u7684\u6e90\uff0c\u6bd4\u5982\u96c6\u5408\u3001\u6570\u7ec4\u6216\u8005\u662fI/O. \u4ece\u6709\u5e8f\u96c6\u5408\u751f\u6210\u6d41\u65f6\u4f1a\u4fdd\u7559\u539f\u6709\u7684\u5e8f\u5217\u3002 \u6570\u636e\u5904\u7406\u64cd\u4f5c \u6d41\u7684\u6570\u636e\u5904\u7406\u529f\u80fd\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u7684\u64cd\u4f5c\uff0c\u4ee5\u53ca\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u5e38\u7528\u64cd\u4f5c\uff0c\u5982filter\u3001map\u3001reduce\u3001find\u3001match\u3001sort\u7b49\u3002\u6d41\u64cd\u4f5c\u53ef\u4ee5\u987a\u5e8f\u6267\u884c\uff0c\u4e5f\u53ef\u4ee5\u5e76\u884c\u6267\u884c\u3002 \u6d41\u6c34\u7ebf \u5f88\u591a\u7684\u6d41\u64cd\u4f5c\u672c\u8eab\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6d41\uff0c\u8fd9\u6837\u591a\u4e2a\u64cd\u4f5c\u5c31\u53ef\u4ee5\u94fe\u63a5\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u6d41\u6c34\u7ebf\u3002 \u5185\u90e8\u8fed\u4ee3 \u548c\u4f7f\u7528\u8fed\u4ee3\u5668\u8fdb\u884c\u663e\u793a\u8fed\u4ee3\u7684\u96c6\u5408\u4e0d\u540c\uff0c\u6d41\u7684\u8fed\u4ee3\u64cd\u4f5c\u662f\u5728\u80cc\u540e\u8fdb\u884c\u7684\u3002 1.2.2 \u5916\u90e8\u8fed\u4ee3\u4e0e\u5185\u90e8\u8fed\u4ee3 \u4f7f\u7528Collection\u63a5\u53e3\u9700\u8981\u7528\u6237\u81ea\u5df1\u53bb\u505a\u8fed\u4ee3\uff0c\u79f0\u4e3a \u5916\u90e8\u8fed\u4ee3 \u3002 \u4f7f\u7528Stream\u8fdb\u884c\u7684\u8fed\u4ee3\u662f \u5185\u90e8\u8fed\u4ee3 \uff0cStream\u5df2\u7ecf\u5e2e\u4f60\u628a\u8fed\u4ee3\u505a\u4e86\uff0c\u4f60\u53ea\u9700\u8981\u544a\u8bc9\u5b83\u4f60\u9700\u8981\u5e72\u4ec0\u4e48\u5c31\u53ef\u4ee5\u4e86\u3002 \u5916\u90e8\u8fed\u4ee3\uff1a \u5185\u90e8\u8fed\u4ee3\uff1a 1.3 \u5e38\u89c1\u7684\u6d41\u64cd\u4f5c 1.3.1 collect(toList) collect(toList)\u65b9\u6cd5\u7531Stream\u91cc\u7684\u503c\u751f\u6210\u4e00\u4e2a\u5217\u8868\u3002of\u65b9\u6cd5\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u6d41\u5bf9\u8c61\u3002 List < String > list = Stream . of ( \"a\" , \"b\" , \"c\" ). collect ( Collectors . toList ()); 1.3.2 map map\u64cd\u4f5c\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6d41\u4e2d\u7684\u4e00\u79cd\u503c\u8f6c\u6362\u6210\u53e6\u4e00\u79cd\u7c7b\u578b\u7684\u503c\uff0c\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u6d41(\u4e00\u5bf9\u4e00\u6620\u5c04)\u3002\u6bd4\u5982\uff0c\u5c06\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u5b57\u7b26\u4e32\u5168\u90e8\u8f6c\u6362\u6210\u5927\u5199\u3002 List < String > upperCaseList = Stream . of ( \"talk\" , \"is\" , \"cheap\" , \",\" , \"show\" , \"me\" , \"the\" , \"code\" ) . map ( string -> string . toUpperCase ()) . collect ( Collectors . toList ()); /* output: [TALK,IS,CHEAP,,,SHOW,ME,THE,CODE] */ map\u64cd\u4f5c\u4f20\u5165\u7684Lambda\u8868\u8fbe\u5f0f\u5fc5\u987b\u548cFunction\u63a5\u53e3\u7684\u7b7e\u540d\u4e00\u81f4\u3002 public interface Function < T , R > { R apply ( T t ); } 1.3.3 flatMap flatMap\u65b9\u6cd5\u4f7f\u4e00\u4e2a\u6d41\u4e2d\u7684\u6bcf\u4e2a\u503c\u90fd\u6362\u6210\u53e6\u5916\u4e00\u4e2a\u6d41\uff0c\u7136\u540e\u628a\u6240\u6709\u7684\u6d41\u90fd\u8fde\u63a5\u8d77\u6765\u6210\u4e3a\u4e00\u4e2a\u6d41\uff08\u7b1b\u5361\u5c14\u4e58\u79ef\uff09\u3002 //\u627e\u51fa\u4e24\u4e2a\u6570\u7ec4\u4e2d\u5171\u540c\u7684\u5143\u7d20\uff0c\u5f62\u6210\u4e00\u4e2a\u96c6\u5408 Integer [] array1 = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 }; Integer [] array2 = { 2 , 3 , 5 , 7 , 11 }; List < Integer []> list = Stream . of ( array1 ) . flatMap ( a1 -> Stream . of ( array2 ). filter ( a1 :: equals ). map ( a2 -> new Integer [] { a1 , a2 })) . collect ( Collectors . toList ()); /* output: [<2, 2>, <3, 3>, <5, 5>, <7, 7>] */ flatMap\u64cd\u4f5c\u63a5\u6536\u7684Lambda\u8868\u8fbe\u5f0f\u5fc5\u987b\u4e0eFunction\u63a5\u53e3\u7684\u7b7e\u540d\u4e00\u81f4\uff0c\u4f20\u5165\u7684\u8303\u578b\u4e3aFunction<? super T, ? extends Stream<? extends R>>. 1.3.4 filter filter\u7528\u6765\u904d\u5386\u6570\u636e\u5e76\u9009\u51fa\u7b26\u5408\u7279\u5b9a\u6761\u4ef6\u7684\u5143\u7d20\u3002\u6bd4\u5982\u7b5b\u9009\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\u96c6\u5408\u4e2d\u4ec5\u542b\u6570\u5b57\u7684\u5b57\u7b26\u4e32\u3002 List < String > digitList = Stream . of ( \"a1c\" , \"123\" , \"1q2qw\" , \"0.5\" ) . filter ( string -> TextUtils . isDigitsOnly ( string )) . collect ( Collectors . toList ()); /* output: [123] */ \u540c\u6837\uff0cfilter\u64cd\u4f5c\u4f20\u5165\u7684Lambda\u8868\u8fbe\u5f0f\u5fc5\u987b\u548cPredicate\u63a5\u53e3\u7684\u7b7e\u540d\u4e00\u81f4\u3002 public interface Predicate < T > { boolean test ( T t ); } 1.3.5 distinct disdint\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5143\u7d20\u5404\u5f02\u7684\u6d41\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u6ee4\u91cd\uff08\u6839\u636e\u5143\u7d20\u7684hashCode\u548cequals\u65b9\u6cd5\uff09\u3002 List < Integer > distinctList = Stream . of ( 1 , 1 , 2 , 2 , 3 , 3 , 3 , 4 ) . distinct () . collect ( Collectors . toList ()); /* output: [1,2,3,4] */ 1.3.6 limit limit(n)\u4f1a\u8fd4\u56de\u4e00\u4e2a\u4e0d\u8d85\u8fc7\u7ed9\u5b9a\u957f\u5ea6\u7684\u6d41\u3002\u5982\u679c\u6d41\u662f\u6709\u5e8f\u7684\uff0c\u5219\u6700\u591a\u4f1a\u8fd4\u56de\u524dn\u4e2a\u5143\u7d20\u3002 List < Integer > list = Stream . of ( 1 , 2 , 3 , 4 , 5 , 6 , 7 ) . limit ( 3 ) . collect ( Collectors . toList ()); /* output: [1,2,3] */ 1.3.7 skip skip(n)\uff0c\u4f1a\u8fd4\u56de\u6254\u6389\u524dn\u4e2a\u5143\u7d20\u7684\u6d41\uff0c\u5982\u679c\u6d41\u4e2d\u5143\u7d20\u4e0d\u8d85\u8fc7n\uff0c\u5219\u4f1a\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684\u6d41\u3002 List < Integer > list = Stream . of ( 1 , 2 , 3 , 4 , 5 , 6 , 7 ) . skip ( 3 ) . collect ( Collectors . toList ()); /* output: [4,5,6,7] */ 1.3.8 min\u548cmax \u6c42\u6700\u5c0f\u503c\u548c\u6c42\u6700\u5927\u503c\u3002\u6bd4\u5982\u6c42\u83dc\u54c1\u96c6\u5408\u4e2d\u4ef7\u683c\u6700\u4f4e\u548c\u6700\u9ad8\u7684\u83dc\u3002 List < Dish > dishes = ... Dish max = dishes . stream () . max ( Comparator . comparing ( dish -> dish . getPrice )) . get (); Dish min = dishes . stream () . mix ( Comparator . comparing ( dish -> dish . getPrice )) . get (); 1.3.9 reduce reduce\u64cd\u4f5c\u53ef\u4ee5\u4ece\u4e00\u7ec4\u503c\u4e2d\u751f\u6210\u4e00\u4e2a\u503c\uff0c\u5b9e\u9645\u4e0amax\u548cmin\u4e5f\u662freduce\u64cd\u4f5c\uff0c\u56e0\u4e3a\u592a\u5e38\u7528\uff0c\u6240\u4ee5\u88ab\u7eb3\u5165\u4e86\u6807\u51c6\u5e93\u4e2d\u3002\u4e3e\u4f8b\uff0c\u6c42\u548c\uff1a int sum = Stream . of ( 1 , 2 , 3 , 4 ) . reduce ( 0 , ( acc , element ) -> acc + element ); reduce\u5bf9\u5e94\u7684\u64cd\u4f5c\u67093\u4e2a\u91cd\u8f7d\u7684\u65b9\u6cd5\uff1a //\u65e0\u521d\u59cb\u503c\u7684 Optional < T > reduce ( BinaryOperator < T > accumulator ); //\u7b49\u4ef7\u4e8e boolean foundAny = false ; T result = null ; for ( T element : this stream ) { if ( ! foundAny ) { foundAny = true ; result = element ; } else { result = accumulator . apply ( result , element ); } } return foundAny ? Optional . of ( result ) : Optional . empty (); //\u5e26\u521d\u59cb\u503c\u7684 T reduce ( T identity , BinaryOperator < T > accumulator ); //\u7b49\u4ef7\u4e8e T result = identity ; for ( T element : this stream ) result = accumulator . apply ( result , element ) return result ; //\u53c2\u6570\u5e26\u4e24\u4e2aBiFuction\u7684 < U > U reduce ( U identity , BiFunction < U , ? super T , U > accumulator , BinaryOperator < U > combiner ); //\u7b49\u4ef7\u4e8e U result = identity ; for ( T element : this stream ) result = accumulator . apply ( result , element ) return result ; 1.3.10 anyMatch\u3001allMatch\u548cnoneMatch anyMatch\u5224\u65ad\u6d41\u4e2d\u662f\u5426\u81f3\u5c11\u6709\u4e00\u4e2a\u5143\u7d20\u80fd\u5339\u914d\u7ed9\u5b9a\u7684\u6761\u4ef6\uff0c\u8fd4\u56de\u4e00\u4e2aboolean\u503c\u3002 boolean hasNullElements = Stream . of ( \"Java\" , \"Python\" , \"C#\" , null , \"Ruby\" , \"Go\" , \"Object C\" ) . anyMatch ( Objects :: isNull ); allMatch\u68c0\u67e5\u6d41\u4e2d\u6d41\u4e2d\u6240\u6709\u5143\u7d20\u662f\u5426\u5339\u914d\u7ed9\u5b9a\u7684\u6761\u4ef6\uff0c\u8fd4\u56deboolean\u503c\u3002 noneMatch\u68c0\u67e5\u6d41\u4e2d\u6240\u4ee5\u5143\u7d20\u662f\u5426\u90fd\u4e0d\u5339\u914d\u7ed9\u5b9a\u7684\u6761\u4ef6\uff0c\u8fd4\u56deboolean\u503c\u3002 1.3.11 findAny\u4e0efindFirst findAny\u627e\u5230\u6d41\u4e2d\u4efb\u610f\u4e00\u4e2a\u5143\u7d20(\u901a\u5e38\u662f\u7b2c\u4e00\u4e2a)\uff0c\u8fd4\u56de\u4e00\u4e2aOptional\u5bf9\u8c61\uff0c\u5982\u679c\u6d41\u662f\u7a7a\u7684\uff0c\u8fd4\u56de\u4e00\u4e2a\u503c\u4e3a\u7a7a\u7684Optional\u5bf9\u8c61\uff0c\u5982\u679c\u627e\u5230\u7684\u5143\u7d20\u521a\u597d\u662f\u7a7a\u503c\uff0c\u5219\u629b\u51fa\u4e00\u4e2aNullPointerException\u3002 public final class Optional < T > { T t ; //... } \u4f8b\uff1a Optional < Integer > optional = Stream . of ( 1 , 2 , 3 , 4 , 5 , 6 , 7 ) . findAny (); //\u6267\u884c\u591a\u6b21optional.get()\u59cb\u7ec8\u662f1 \u5982\u679c\u4f7f\u7528\u7684\u662f\u5e76\u884c\u7684\u6d41\uff0c\u90a3\u4e48findAny\u65b9\u6cd5\u8fd4\u56de\u7684\u503c\u5219\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a List < Integer > array = Arrays . asList ( 1 , 2 , 3 , 4 , 5 , 6 , 7 ); Printer . println ( array . parallelStream (). findAny (). get ()); Printer . println ( array . parallelStream (). findAny (). get ()); Printer . println ( array . parallelStream (). findAny (). get ()); Printer . println ( array . parallelStream (). findAny (). get ()); /* \u6267\u884c\u591a\u6b21\u8fd4\u56de\u503c\u5206\u522b\u662f\uff1a \u7b2c1\u6b21\uff1a 5 5 5 5 Process finished with exit code 0 \u7b2c2\u6b21\uff1a 4 7 2 6 Process finished with exit code 0 */ findAny\u64cd\u4f5c\u4e00\u822c\u548cfilter\u7ed3\u5408\u8d77\u6765\u7528\uff0c\u7528\u4e8e\u7b5b\u9009\u3002 \u5982\u679c\u60f3\u59cb\u7ec8\u627e\u5230\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u5e94\u8be5\u7528findFirst\u64cd\u4f5c\uff0c\u5373\u4f7f\u662f\u5e76\u884c\u7684\u6d41\uff0c\u9875\u59cb\u7ec8\u80fd\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 \u77ed\u8def\u6c42\u503c\uff1a\u5bf9\u4e8e\u6709\u4e9b\u64cd\u4f5c\uff0c\u4e0d\u5fc5\u5904\u7406\u6574\u4e2a\u6d41\u5c31\u80fd\u5f97\u5230\u7ed3\u679c\uff0c\u5c31\u50cf\u7528 || \u8fde\u63a5\u8d77\u6765\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\u6c42\u503c\u4e00\u6837\uff0c\u53ea\u8981\u63d0\u524d\u627e\u5230\u4e00\u4e2a\u4e3atrue\u7684\u503c\u5c31\u76f4\u63a5\u8fd4\u56de\u3002\u6d41\u7684\u64cd\u4f5c\u4e2d\uff0canyMatch\u3001findAny\u3001findFirst\u90fd\u662f\u77ed\u8def\u64cd\u4f5c\uff0climit\u4e5f\u662f\u3002 1.4 \u6d41\u4e0e\u96c6\u5408 1.4.1 \u6d41\u4e0e\u96c6\u5408\u6982\u5ff5\u7684\u5dee\u5f02 \u4ece\u524d\u9762\u7684\u4f8b\u5b50\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u901a\u8fc7Stream.of(...)\u65b9\u6cd5\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6d41\u5bf9\u8c61\uff0c\u770b\u8d77\u6765\u6570\u636e\u6e90\u4f3c\u4e4e\u662f\u4fdd\u5b58\u5728\u4e86\u6d41\u5bf9\u8c61\u4e2d\uff0c\u8fd9\u548c\u96c6\u5408\u4e2d\u4fdd\u5b58\u4e00\u7ec4\u6570\u636e\u5f88\u7c7b\u4f3c\u3002\u4f46\u662f\uff0c\u6700\u7ec8\u4ece\u6d41\u4e2d\u83b7\u53d6\u4e00\u4e2a\u96c6\u5408\uff0c\u8fd8\u9700\u8981\u8c03\u7528collect(toList())\u65b9\u6cd5\uff0c\u7531\u6b64\u53ef\u89c1\uff0c\u6d41\u5e76\u4e0d\u662f\u96c6\u5408\u3002 \u6d41\u4e0e\u96c6\u5408\u5230\u5e95\u6709\u4ec0\u4e48\u5dee\u5f02\u5462\uff1f\u4e3e\u4e00\u4e2a\u5f62\u8c61\u7684\u4f8b\u5b50\uff0c\u5b58\u5728DVD\u4e2d\u7684\u7535\u5f71\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u56e0\u4e3a\u5b83\u5305\u542b\u4e86\u7535\u5f71\u7684\u5168\u90e8\u6570\u636e\uff0c\u800c\u7f51\u4e0a\u5728\u7ebf\u64ad\u653e\u7684\u89c6\u9891\u5219\u662f\u4e00\u4e2a\u89c6\u9891\u6d41\uff0c\u5b83\u53ea\u52a0\u8f7d\u4f60\u5f53\u524d\u89c2\u770b\u7684\u8fd9\u51e0\u5e27\uff0c\u4e0d\u7528\u7b49\u5230\u6240\u6709\u7684\u6570\u636e\u90fd\u52a0\u8f7d\u5b8c\u4e86\u624d\u80fd\u770b\u3002 \u6240\u4ee5\u7b80\u5355\u6765\u8bb2\uff0c\u96c6\u5408\u4e0e\u6d41\u4e4b\u95f4\u7684\u5dee\u5f02\u5c31\u5728\u4e8e\u4f55\u65f6\u8fdb\u884c\u8ba1\u7b97\u3002\u96c6\u5408\u662f\u5185\u5b58\u4e2d\u7684\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u5305\u542b\u4e86\u6570\u636e\u6e90\u7684\u6240\u6709\u503c\uff0c\u96c6\u5408\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u9700\u8981\u5148\u8ba1\u7b97\u51fa\u6765\u7136\u540e\u518d\u52a0\u5165\u5230\u96c6\u5408\u4e2d\u3002\u800c\u6d41\u7684\u5143\u7d20\u5219\u662f\u6309\u9700\u8ba1\u7b97\uff0c\u4ec5\u4ec5\u5728\u7528\u6237\u9700\u8981\u7684\u65f6\u5019\u624d\u4f1a\u63d0\u53d6\u503c\uff0c\u8fd9\u662f\u4e00\u79cd\u751f\u4ea7\u8005\u2014\u6d88\u8d39\u8005\u7684\u5173\u7cfb\uff0c\u53ea\u6709\u6d88\u8d39\u8005\u8981\u6c42\u7684\u65f6\u5019\u624d\u4f1a\u53bb\u8ba1\u7b97\u503c\u3002 1.4.2 \u6d41\u53ea\u80fd\u904d\u5386\u4e00\u6b21 \u548c\u8fed\u4ee3\u5668\u7c7b\u4f3c\uff0c\u6d41\u53ea\u80fd\u904d\u5386\u4e00\u6b21\uff0c\u904d\u5386\u5b8c\u6210\u4e4b\u540e\uff0c\u8fd9\u4e2a\u6d41\u5c31\u5df2\u7ecf\u88ab\u6d88\u8d39\u6389\u4e86\u3002\u5982\u679c\u60f3\u518d\u6b21\u904d\u5386\uff0c\u9700\u4ece\u6570\u636e\u6e90\u91cd\u65b0\u83b7\u53d6\u4e00\u4e2a\u6d41\uff08\u5982\u679c\u6570\u636e\u6e90\u662f\u53ef\u91cd\u590d\u7684\u6bd4\u5982\u96c6\u5408\uff0c\u8fd9\u4f1a\u5f88\u5bb9\u6613\uff0c\u4f46\u5982\u679c\u50cfI/O\u8fd9\u79cd\u7684\u8bdd\uff0c\u5c31\u4f1a\u5f88\u9ebb\u70e6\uff09\u3002 \u91cd\u590d\u6d88\u8d39\u4e00\u4e2a\u6d41\u4f1a\u629b\u51faIllegalArgumentException\uff0c\u8868\u793a\u6d41\u5df2\u7ecf\u88ab\u64cd\u4f5c\uff0c\u6216\u8005\u5173\u95ed\u3002 List<String> firms = Arrays.asList(\"Google\", \"AT&T\", \"Amazon\", \"Facebook\", \"Oracle\", \"MicroSoft\"); Stream<String> stream = Stream.of(firms); stream.forEach(System.out::println); stream.forEach(System.out::println); 1.5 \u6d41\u7684\u6784\u5efa 1.5.1 \u6570\u503c\u6d41 \u5728\u6709\u4e9b\u6d41\u7684\u64cd\u4f5c\u4e2d\uff0c\u6d41\u4e2d\u7684\u5143\u7d20\u5982\u679c\u662f\u6570\u503c\uff0c\u4f1a\u4e0d\u53ef\u907f\u514d\u7684\u4ea7\u751f\u88c5\u7bb1\u548c\u62c6\u7bb1\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\uff0c\u5bf9\u83dc\u54c1\u7684\u4ef7\u683c\u6c42\u548c\uff1a List<Dish> dishes ... int sumPrice = dishes.stream() .map(Dish::getPrice) .reduce(0, Integer::sum); \u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0cmap\u64cd\u4f5c\u4f1a\u751f\u6210\u4e00\u4e2aStream \u7684\u6d41\uff0c\u56e0\u6b64\uff0c\u5c31\u9700\u8981\u5c06int\u7c7b\u578b\u88c5\u7bb1\u6210Integer\u3002\u5728Java 8\u7684Stream API\u4e2d\uff0c\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u62c6\u88c5\u7bb1\uff0c\u63d0\u4f9b\u4e86\u539f\u59cb\u7c7b\u578b\u6d41\u7279\u5316\uff0c\u4e13\u95e8\u652f\u6301\u5904\u7406\u6570\u503c\u6d41\u3002 1.5.1.1 \u539f\u59cb\u7c7b\u578b\u6d41\u7279\u5316 Java 8\u4e2d\u5f15\u5165\u7684\u539f\u59cb\u7c7b\u578b\u6d41\u7279\u5316\u6d41\u67093\u4e2a\uff1aIntStream\u3001LongStream\u548cDoubleStream\uff0c\u5206\u522b\u5c06\u6d41\u7684\u5143\u7d20\u7279\u5316\u4e3a\u5bf9\u5e94\u7684\u57fa\u7840\u7c7b\u578b\u3002\u76f8\u5e94\u7684\u8fd9\u4e9b\u6d41\u4e2d\u4e5f\u591a\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u6570\u503c\u64cd\u4f5c\uff0c\u6bd4\u5982sum, average, max, min\u7b49\u3002 \u5c06\u6d41\u8f6c\u5316\u6210\u7279\u5b9a\u7684\u6570\u503c\u6d41\u5e38\u7528\u7684\u64cd\u4f5c\u662fmap\uff0c\u5bf9\u5e94\u7684\uff0cmap\u64cd\u4f5c\u4e5f\u6709\u51e0\u4e2a\u7279\u5b9a\u7684\u65b9\u6cd5\uff0cmapToInt\u3001mapToLong\u3001mapToDouble\u3002\u6bd4\u5982\u4e0a\u9762\u5bf9\u83dc\u54c1\u4ef7\u683c\u6c42\u548c\u7684\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u7528IntStream\u6765\u505a\uff1a List < Dish > dishes ... int sumPrice = dishes . stream () . mapToInt ( Dish :: getPrice ) . sum ; \u6709\u65f6\u5019\uff0c\u4e5f\u4f1a\u6709\u5c06\u6570\u503c\u6d41\u8f6c\u56de\u5bf9\u8c61\u6d41\u7684\u9700\u6c42\uff0c\u8fd9\u65f6\u5019\u53ea\u9700\u8981\u5c06\u57fa\u7840\u5143\u7d20\u8fdb\u884c\u88c5\u7bb1\u64cd\u4f5c\u5c31\u53ef\u4ee5\uff0c\u4f7f\u7528\u7684\u64cd\u4f5c\u662fboxed\u3002 IntStream intSream = dishes . stream () . mapToInt ( Dish :: getPrice ); Stream < Integer > stream = intStream . boxed (); \u4e0a\u9762\u8bb2findAny\u548cfindFirst\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u63d0\u5230\u4e86Optional\u5bf9\u8c61\uff0c\u7c7b\u4f3c\u7684\uff0cOptional\u7c7b\u4e5f\u5bf9\u6570\u503c\u7684\u57fa\u7840\u7c7b\u578b\u8fdb\u884c\u4e86\u7279\u5316\uff0c\u6709IntOptitonal\u3001LongOptional\u548cDoubleOptional\u4e09\u4e2a\u7c7b\u3002 1.5.1.2 \u6570\u503c\u8303\u56f4 Java 8\u5f15\u5165\u4e86\u4e24\u4e2a\u53ef\u4ee5\u7528\u4e8eInStream\u548cLongStream\u7684\u9759\u6001\u65b9\u6cd5\uff0crange\u548crangeClose\u3002\u533a\u522b\u662frange\u4e0d\u5305\u542b\u7ed3\u675f\u503c\uff0crangeClosed\u5305\u542b\u7ed3\u675f\u503c\u3002 IntStream intStream = IntStream . range ( 1 , 10 ); int [] array = intStream . toArray (); Printer . print ( array ); /* output: [1,2,3,4,5,6,7,8,9] */ IntStream intStream = IntStream . rangeClosed ( 1 , 10 ); int [] array = intStream . toArray (); Printer . print ( array ); /* output : [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] 1.5.2 \u6784\u5efa\u6d41\u7684\u51e0\u79cd\u65b9\u5f0f 1.5.2.1 \u7531\u503c\u521b\u5efa\u6d41 \u4f7f\u7528Stream.of(T t ...)\u65b9\u6cd5\u53ef\u4ee5\u521b\u5efa\u51fa\u4e00\u4e2a\u6d41\uff0cStream.empty()\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6ca1\u6709\u5143\u7d20\u7684\u6d41\uff1a Stream < String > stringStream = Stream . of ( \"Apple\" , \"MicroSoft\" , \"Google\" , \"Facebook\" , \"Amazon\" ); Stream < String > emptyStream = Stream . empty (); 1.5.2.2 \u7531\u6570\u7ec4\u521b\u5efa\u6d41 Arrays.stream\u53ef\u4ee5\u4ece\u6570\u7ec4\u521b\u5efa\u4e00\u4e2a\u6d41\uff0c\u53c2\u6570\u662f\u4e00\u4e2a\u6570\u7ec4\u3002 String [] stringArray = { \"Apple\" , \"MicroSoft\" , \"Google\" , \"Facebook\" , \"Amazon\" }; int [] intArray = { 0 , 1 , 1 , 2 , 3 , 5 , 8 , 13 , 21 }; Stream < String > stringStream = Arrays . stream ( stringArray ); IntStream intStream = Arrays . stream ( intArray ); Stream < Integer > integerStream = Arrays . stream ( intArray ). boxed (); 1.5.2.3 \u7531\u96c6\u5408\u751f\u6210\u6d41 Java\u7684Collection\u63a5\u53e3\u4e2d\uff0c\u5f15\u5165\u4e86stream()\u548cparallelStream()\u4e24\u4e2a\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u53ef\u4ee5\u751f\u6210\u6d41\u3002 String [] stringArray = { \"Apple\" , \"MicroSoft\" , \"Google\" , \"Facebook\" , \"Amazon\" }; List < String > list = Arrays . asList ( stringArray ); Stream < String > stream = list . stream (); Stream < String > parallelStream = list . parallelStream (); 1.5.2.4 \u7531\u6587\u4ef6\u751f\u6210\u6d41 Java 8\u7684NIO API\u4e2d\uff0c\u5f88\u591a\u64cd\u4f5c\u90fd\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u6d41\u3002\u6bd4\u5982\uff0cFiles.lines\u5c31\u4f1a\u6839\u636e\u6587\u4ef6\u5185\u5bb9\u8fd4\u56de\u4e00\u4e2a\u6d41\u3002 try { Stream < String > lines = Files . lines ( Paths . get ( \".gitignore\" ), Charset . forName ( \"utf-8\" )) . flatMap ( line -> Arrays . stream ( line . split ( \" \" ))); lines . forEach ( word -> Printer . println ( word )); } catch ( IOException e ) { e . printStackTrace (); } 1.5.2.5 \u7531\u51fd\u6570\u751f\u6210\u6d41\uff1a\u521b\u5efa\u65e0\u9650\u6d41 Stream API\u4e2d\u63d0\u4f9b\u4e862\u4e2a\u9759\u6001\u65b9\u6cd5\u6765\u4ece\u65b9\u6cd5\u4e2d\u751f\u6210\u6d41\uff1aStream.iterate\u548cStream.generate\uff0c\u8fd92\u4e2a\u65b9\u6cd5\u90fd\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u65e0\u9650\u6d41\uff0c\u53ea\u8981\u4e0d\u7ed3\u675f\uff0c\u53ef\u4ee5\u4e00\u76f4\u7b97\u4e0b\u53bb\u3002 iterate iterate\u65b9\u6cd5\u6709\u4e24\u4e2a\u91cd\u8f7d\u7684\u65b9\u6cd5\uff1a //\u6709\u7ed3\u675f\u6761\u4ef6\u7684 public static < T > Stream < T > iterate ( T seed , Predicate <? super T > hasNext , UnaryOperator < T > next ) \u548c //\u6ca1\u6709\u9650\u5236\uff0c\u53ef\u4ee5\u771f\u6b63\u751f\u6210\u65e0\u9650\u6d41 public static < T > Stream < T > iterate ( final T seed , final UnaryOperator < T > f ) \u4f8b\u5982\uff0c\u751f\u6210\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff1a Stream . iterate ( new int [] { 0 , 1 }, t -> new int [] { t [ 1 ] , t [ 0 ] + t [ 1 ] }) . map ( t -> t [ 0 ] ) . limit ( 20 ) . forEach ( Printer :: println ); generate \u548citerate\u65b9\u6cd5\u7c7b\u4f3c\uff0cgenerate\u4e5f\u751f\u6210\u4e00\u4e2a\u65e0\u9650\u6d41\u3002 public static < T > Stream < T > generate ( Supplier <? extends T > s ) generate\u65b9\u6cd5\u7684\u53c2\u6570\u662f\u4e00\u4e2aSupplier\uff0c\u5b83\u53ef\u4ee5\u662f\u65e0\u72b6\u6001\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u6709\u72b6\u6001\u7684\u3002 \u65e0\u72b6\u6001\u7684Supplier\uff0c\u4e0d\u4f1a\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u72b6\u6001\uff0c\u6bd4\u5982\u751f\u6210\u968f\u673a\u6570\uff0c Stream . generate ( Math :: random ) . limit ( 20 ) . forEach ( Printer :: println ); \u6709\u72b6\u6001\u7684Supplier\u8fd8\u53ef\u4ee5\u662f\u6709\u72b6\u6001\u7684\uff0c\u5b83\u4f1a\u8bb0\u5f55\u524d\u4e00\u4e2aSupplier\u7684\u72b6\u6001\uff08\u53ef\u4ee5\u662f\u503c\uff0c\u5c5e\u6027\u7b49\uff09\uff0c\u6bd4\u5982\u8fd8\u662f\u751f\u6210\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff0c\u5728\u6784\u5efa\u6bcf\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u90fd\u6539\u53d8\u4e86supplier\u7684\u5c5e\u6027\uff1a IntSupplier supplier = new IntSupplier () { private int pre = 0 ; private int cur = 1 ; @Override public int getAsInt () { int oldPre = pre ; int oldCur = cur ; this . pre = cur ; this . cur = oldPre + oldCur ; return oldPre ; } }; IntStream . generate ( supplier ) . limit ( 20 ) . forEach ( Printer :: println ); Author: Ivan J. Lee Date : 2017-12-27 23:56","title":"Java 8 -- \u51fd\u6570\u5f0f\u6570\u636e\u5904\u7406"},{"location":"Java/Java-8-functional/#java-8","text":"","title":"Java 8\u51fd\u6570\u5f0f\u6570\u636e\u5904\u7406"},{"location":"Java/Java-8-functional/#1","text":"","title":"1 \u6d41"},{"location":"Java/Java-8-functional/#11","text":"\u6d41 \u662fJava 8\u4e2d\u65b0\u5f15\u5165\u7684\u6982\u5ff5\uff0c\u5b83\u5141\u8bb8\u4f60\u4ee5\u58f0\u660e\u5f0f\u65b9\u5f0f\u5904\u7406\u6570\u636e\u96c6\u5408\uff08\u901a\u8fc7\u67e5\u8be2\u8bed\u53e5\u6765\u8868\u8fbe\uff0c\u800c\u4e0d\u662f\u4e34\u65f6\u7f16\u5199\u4e00\u4e2a\u5b9e\u73b0\uff09\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u7b5b\u9009\u51fa\u4ef7\u683c\u5927\u4e8e\u00a550\u7684\u83dc\u54c1\uff0c\u5e76\u5bf9\u8fd9\u4e9b\u83dc\u54c1\u8fdb\u884c\u6392\u5e8f\uff0c\u6700\u540e\u8fd4\u56de\u83dc\u54c1\u540d\u79f0\u7684\u96c6\u5408\uff0c\u5728Java 8\u4e4b\u524d\uff1a //\u7b2c\u4e00\u6b65\uff0c\u7b5b\u9009 List < Dish > tempList = new ArrayList <> ( dishes . size ()); for ( Dish dish : dishes ) { if ( dish . getPriceCent () > 5000 ) { tempList . add ( dish ); } } //\u7b2c\u4e8c\u6b65\uff0c\u6392\u5e8f Collections . sort ( tempList , new Comparator < Dish > () { public int compare ( Dish d1 , Dish d2 ) { return d1 . getPriceCent () - d2 . getPriceCent (); } }); //\u7b2c\u4e09\u6b65\uff0c\u8fd4\u56de\u540d\u79f0\u96c6\u5408 List < String > result = new ArrayList <> ( tempList . size ()) for ( Dish dish : tempList ) { result . add ( dish . getName ()); } \u5728Java 8\u4e2d\uff0c\u5f15\u5165\u4e86\u6d41\u7684\u6982\u5ff5\u4e4b\u540e\uff0c\u7ed3\u5408Lambda\u8868\u8fbe\u5f0f\uff1a List < String > result = dishes . stream () . filter ( dish -> dish . getPriceCent () > 5000 ) . sorted ( comparing ( Dish :: getPriceCent )) . map ( Dish :: getName ) . collect ( toList ()); \u6d41\u5f0f\u65b9\u6cd5\u7684\u597d\u5904\uff1a \u4ee3\u7801\u662f\u4ee5\u58f0\u660e\u6027\u65b9\u5f0f\u5199\u7684\uff0c\u8bf4\u660e\u60f3\u8981\u5b8c\u6210\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u64cd\u4f5c\uff1b \u628a\u51e0\u4e2a\u57fa\u672c\u64cd\u4f5c\u94fe\u63a5\u8d77\u6765\uff0c\u7528\u4ee5\u8868\u8fbe\u590d\u6742\u7684\u6570\u636e\u64cd\u4f5c\u6d41\u6c34\u7ebf\uff0c\u4f7f\u4ee3\u7801\u6e05\u6670\u53ef\u8bfb\u3002 \u4f7f\u7528Java 8\u7684Stream API\u53ef\u4ee5\u5199\u51fa\u8fd9\u6837\u7684\u4ee3\u7801\uff1a \u58f0\u660e\u6027\u2014\u2014\u66f4\u7b80\u6d01 \uff0c\u66f4\u6613\u8bfb \u53ef\u590d\u5408\u2014\u2014\u66f4\u7075\u6d3b \u53ef\u5e76\u884c\u2014\u2014\u6027\u80fd\u66f4\u597d","title":"1.1 \u6d41\u662f\u4ec0\u4e48"},{"location":"Java/Java-8-functional/#12","text":"","title":"1.2 \u6d41\u7b80\u4ecb"},{"location":"Java/Java-8-functional/#121","text":"Java 8\u4e2d\u7684\u96c6\u5408\u652f\u6301\u4e00\u4e2a\u65b0\u7684stream\u65b9\u6cd5\uff0c\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6d41\uff0c\u5f53\u7136\u4e5f\u6709\u5f88\u591a\u5176\u4ed6\u65b9\u6cd5\uff0c\u6bd4\u5982\u5229\u7528\u6570\u503c\u8303\u56f4\u6216\u8005I/O\u8d44\u6e90\u4e5f\u53ef\u4ee5\u751f\u6210\u6d41\u5143\u7d20\u3002 \u5b9a\u4e49\uff1a \u4ece\u652f\u6301\u6570\u636e\u5904\u7406\u64cd\u4f5c\u7684\u6e90\u751f\u6210\u5f97\u5143\u7d20\u5e8f\u5217\u3002 \u5173\u952e\u6982\u5ff5\uff1a \u672f\u8bed \u8bf4\u660e \u5143\u7d20\u5e8f\u5217 \u7c7b\u4f3c\u96c6\u5408\uff0c\u6d41\u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\uff0c\u53ef\u4ee5\u8bbf\u95ee\u7279\u5b9a\u5143\u7d20\u7c7b\u578b\u7684\u4e00\u7ec4\u6709\u5e8f\u503c\u3002\u96c6\u5408\u8bb2\u7684\u662f\u6570\u636e\uff0c\u6d41\u8bb2\u7684\u662f\u8ba1\u7b97\u3002 \u6e90 \u6d41\u4f1a\u4f7f\u7528\u4e00\u4e2a\u63d0\u4f9b\u6570\u636e\u7684\u6e90\uff0c\u6bd4\u5982\u96c6\u5408\u3001\u6570\u7ec4\u6216\u8005\u662fI/O. \u4ece\u6709\u5e8f\u96c6\u5408\u751f\u6210\u6d41\u65f6\u4f1a\u4fdd\u7559\u539f\u6709\u7684\u5e8f\u5217\u3002 \u6570\u636e\u5904\u7406\u64cd\u4f5c \u6d41\u7684\u6570\u636e\u5904\u7406\u529f\u80fd\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u7684\u64cd\u4f5c\uff0c\u4ee5\u53ca\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u5e38\u7528\u64cd\u4f5c\uff0c\u5982filter\u3001map\u3001reduce\u3001find\u3001match\u3001sort\u7b49\u3002\u6d41\u64cd\u4f5c\u53ef\u4ee5\u987a\u5e8f\u6267\u884c\uff0c\u4e5f\u53ef\u4ee5\u5e76\u884c\u6267\u884c\u3002 \u6d41\u6c34\u7ebf \u5f88\u591a\u7684\u6d41\u64cd\u4f5c\u672c\u8eab\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6d41\uff0c\u8fd9\u6837\u591a\u4e2a\u64cd\u4f5c\u5c31\u53ef\u4ee5\u94fe\u63a5\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u6d41\u6c34\u7ebf\u3002 \u5185\u90e8\u8fed\u4ee3 \u548c\u4f7f\u7528\u8fed\u4ee3\u5668\u8fdb\u884c\u663e\u793a\u8fed\u4ee3\u7684\u96c6\u5408\u4e0d\u540c\uff0c\u6d41\u7684\u8fed\u4ee3\u64cd\u4f5c\u662f\u5728\u80cc\u540e\u8fdb\u884c\u7684\u3002","title":"1.2.1 \u6982\u5ff5\u548c\u672f\u8bed"},{"location":"Java/Java-8-functional/#122","text":"\u4f7f\u7528Collection\u63a5\u53e3\u9700\u8981\u7528\u6237\u81ea\u5df1\u53bb\u505a\u8fed\u4ee3\uff0c\u79f0\u4e3a \u5916\u90e8\u8fed\u4ee3 \u3002 \u4f7f\u7528Stream\u8fdb\u884c\u7684\u8fed\u4ee3\u662f \u5185\u90e8\u8fed\u4ee3 \uff0cStream\u5df2\u7ecf\u5e2e\u4f60\u628a\u8fed\u4ee3\u505a\u4e86\uff0c\u4f60\u53ea\u9700\u8981\u544a\u8bc9\u5b83\u4f60\u9700\u8981\u5e72\u4ec0\u4e48\u5c31\u53ef\u4ee5\u4e86\u3002 \u5916\u90e8\u8fed\u4ee3\uff1a \u5185\u90e8\u8fed\u4ee3\uff1a","title":"1.2.2 \u5916\u90e8\u8fed\u4ee3\u4e0e\u5185\u90e8\u8fed\u4ee3"},{"location":"Java/Java-8-functional/#13","text":"","title":"1.3 \u5e38\u89c1\u7684\u6d41\u64cd\u4f5c"},{"location":"Java/Java-8-functional/#131-collecttolist","text":"collect(toList)\u65b9\u6cd5\u7531Stream\u91cc\u7684\u503c\u751f\u6210\u4e00\u4e2a\u5217\u8868\u3002of\u65b9\u6cd5\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u6d41\u5bf9\u8c61\u3002 List < String > list = Stream . of ( \"a\" , \"b\" , \"c\" ). collect ( Collectors . toList ());","title":"1.3.1 collect(toList)"},{"location":"Java/Java-8-functional/#132-map","text":"map\u64cd\u4f5c\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6d41\u4e2d\u7684\u4e00\u79cd\u503c\u8f6c\u6362\u6210\u53e6\u4e00\u79cd\u7c7b\u578b\u7684\u503c\uff0c\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u6d41(\u4e00\u5bf9\u4e00\u6620\u5c04)\u3002\u6bd4\u5982\uff0c\u5c06\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u5b57\u7b26\u4e32\u5168\u90e8\u8f6c\u6362\u6210\u5927\u5199\u3002 List < String > upperCaseList = Stream . of ( \"talk\" , \"is\" , \"cheap\" , \",\" , \"show\" , \"me\" , \"the\" , \"code\" ) . map ( string -> string . toUpperCase ()) . collect ( Collectors . toList ()); /* output: [TALK,IS,CHEAP,,,SHOW,ME,THE,CODE] */ map\u64cd\u4f5c\u4f20\u5165\u7684Lambda\u8868\u8fbe\u5f0f\u5fc5\u987b\u548cFunction\u63a5\u53e3\u7684\u7b7e\u540d\u4e00\u81f4\u3002 public interface Function < T , R > { R apply ( T t ); }","title":"1.3.2 map"},{"location":"Java/Java-8-functional/#133-flatmap","text":"flatMap\u65b9\u6cd5\u4f7f\u4e00\u4e2a\u6d41\u4e2d\u7684\u6bcf\u4e2a\u503c\u90fd\u6362\u6210\u53e6\u5916\u4e00\u4e2a\u6d41\uff0c\u7136\u540e\u628a\u6240\u6709\u7684\u6d41\u90fd\u8fde\u63a5\u8d77\u6765\u6210\u4e3a\u4e00\u4e2a\u6d41\uff08\u7b1b\u5361\u5c14\u4e58\u79ef\uff09\u3002 //\u627e\u51fa\u4e24\u4e2a\u6570\u7ec4\u4e2d\u5171\u540c\u7684\u5143\u7d20\uff0c\u5f62\u6210\u4e00\u4e2a\u96c6\u5408 Integer [] array1 = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 }; Integer [] array2 = { 2 , 3 , 5 , 7 , 11 }; List < Integer []> list = Stream . of ( array1 ) . flatMap ( a1 -> Stream . of ( array2 ). filter ( a1 :: equals ). map ( a2 -> new Integer [] { a1 , a2 })) . collect ( Collectors . toList ()); /* output: [<2, 2>, <3, 3>, <5, 5>, <7, 7>] */ flatMap\u64cd\u4f5c\u63a5\u6536\u7684Lambda\u8868\u8fbe\u5f0f\u5fc5\u987b\u4e0eFunction\u63a5\u53e3\u7684\u7b7e\u540d\u4e00\u81f4\uff0c\u4f20\u5165\u7684\u8303\u578b\u4e3aFunction<? super T, ? extends Stream<? extends R>>.","title":"1.3.3 flatMap"},{"location":"Java/Java-8-functional/#134-filter","text":"filter\u7528\u6765\u904d\u5386\u6570\u636e\u5e76\u9009\u51fa\u7b26\u5408\u7279\u5b9a\u6761\u4ef6\u7684\u5143\u7d20\u3002\u6bd4\u5982\u7b5b\u9009\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\u96c6\u5408\u4e2d\u4ec5\u542b\u6570\u5b57\u7684\u5b57\u7b26\u4e32\u3002 List < String > digitList = Stream . of ( \"a1c\" , \"123\" , \"1q2qw\" , \"0.5\" ) . filter ( string -> TextUtils . isDigitsOnly ( string )) . collect ( Collectors . toList ()); /* output: [123] */ \u540c\u6837\uff0cfilter\u64cd\u4f5c\u4f20\u5165\u7684Lambda\u8868\u8fbe\u5f0f\u5fc5\u987b\u548cPredicate\u63a5\u53e3\u7684\u7b7e\u540d\u4e00\u81f4\u3002 public interface Predicate < T > { boolean test ( T t ); }","title":"1.3.4 filter"},{"location":"Java/Java-8-functional/#135-distinct","text":"disdint\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5143\u7d20\u5404\u5f02\u7684\u6d41\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u6ee4\u91cd\uff08\u6839\u636e\u5143\u7d20\u7684hashCode\u548cequals\u65b9\u6cd5\uff09\u3002 List < Integer > distinctList = Stream . of ( 1 , 1 , 2 , 2 , 3 , 3 , 3 , 4 ) . distinct () . collect ( Collectors . toList ()); /* output: [1,2,3,4] */","title":"1.3.5 distinct"},{"location":"Java/Java-8-functional/#136-limit","text":"limit(n)\u4f1a\u8fd4\u56de\u4e00\u4e2a\u4e0d\u8d85\u8fc7\u7ed9\u5b9a\u957f\u5ea6\u7684\u6d41\u3002\u5982\u679c\u6d41\u662f\u6709\u5e8f\u7684\uff0c\u5219\u6700\u591a\u4f1a\u8fd4\u56de\u524dn\u4e2a\u5143\u7d20\u3002 List < Integer > list = Stream . of ( 1 , 2 , 3 , 4 , 5 , 6 , 7 ) . limit ( 3 ) . collect ( Collectors . toList ()); /* output: [1,2,3] */","title":"1.3.6 limit"},{"location":"Java/Java-8-functional/#137-skip","text":"skip(n)\uff0c\u4f1a\u8fd4\u56de\u6254\u6389\u524dn\u4e2a\u5143\u7d20\u7684\u6d41\uff0c\u5982\u679c\u6d41\u4e2d\u5143\u7d20\u4e0d\u8d85\u8fc7n\uff0c\u5219\u4f1a\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684\u6d41\u3002 List < Integer > list = Stream . of ( 1 , 2 , 3 , 4 , 5 , 6 , 7 ) . skip ( 3 ) . collect ( Collectors . toList ()); /* output: [4,5,6,7] */","title":"1.3.7 skip"},{"location":"Java/Java-8-functional/#138-minmax","text":"\u6c42\u6700\u5c0f\u503c\u548c\u6c42\u6700\u5927\u503c\u3002\u6bd4\u5982\u6c42\u83dc\u54c1\u96c6\u5408\u4e2d\u4ef7\u683c\u6700\u4f4e\u548c\u6700\u9ad8\u7684\u83dc\u3002 List < Dish > dishes = ... Dish max = dishes . stream () . max ( Comparator . comparing ( dish -> dish . getPrice )) . get (); Dish min = dishes . stream () . mix ( Comparator . comparing ( dish -> dish . getPrice )) . get ();","title":"1.3.8 min\u548cmax"},{"location":"Java/Java-8-functional/#139-reduce","text":"reduce\u64cd\u4f5c\u53ef\u4ee5\u4ece\u4e00\u7ec4\u503c\u4e2d\u751f\u6210\u4e00\u4e2a\u503c\uff0c\u5b9e\u9645\u4e0amax\u548cmin\u4e5f\u662freduce\u64cd\u4f5c\uff0c\u56e0\u4e3a\u592a\u5e38\u7528\uff0c\u6240\u4ee5\u88ab\u7eb3\u5165\u4e86\u6807\u51c6\u5e93\u4e2d\u3002\u4e3e\u4f8b\uff0c\u6c42\u548c\uff1a int sum = Stream . of ( 1 , 2 , 3 , 4 ) . reduce ( 0 , ( acc , element ) -> acc + element ); reduce\u5bf9\u5e94\u7684\u64cd\u4f5c\u67093\u4e2a\u91cd\u8f7d\u7684\u65b9\u6cd5\uff1a //\u65e0\u521d\u59cb\u503c\u7684 Optional < T > reduce ( BinaryOperator < T > accumulator ); //\u7b49\u4ef7\u4e8e boolean foundAny = false ; T result = null ; for ( T element : this stream ) { if ( ! foundAny ) { foundAny = true ; result = element ; } else { result = accumulator . apply ( result , element ); } } return foundAny ? Optional . of ( result ) : Optional . empty (); //\u5e26\u521d\u59cb\u503c\u7684 T reduce ( T identity , BinaryOperator < T > accumulator ); //\u7b49\u4ef7\u4e8e T result = identity ; for ( T element : this stream ) result = accumulator . apply ( result , element ) return result ; //\u53c2\u6570\u5e26\u4e24\u4e2aBiFuction\u7684 < U > U reduce ( U identity , BiFunction < U , ? super T , U > accumulator , BinaryOperator < U > combiner ); //\u7b49\u4ef7\u4e8e U result = identity ; for ( T element : this stream ) result = accumulator . apply ( result , element ) return result ;","title":"1.3.9 reduce"},{"location":"Java/Java-8-functional/#1310-anymatchallmatchnonematch","text":"anyMatch\u5224\u65ad\u6d41\u4e2d\u662f\u5426\u81f3\u5c11\u6709\u4e00\u4e2a\u5143\u7d20\u80fd\u5339\u914d\u7ed9\u5b9a\u7684\u6761\u4ef6\uff0c\u8fd4\u56de\u4e00\u4e2aboolean\u503c\u3002 boolean hasNullElements = Stream . of ( \"Java\" , \"Python\" , \"C#\" , null , \"Ruby\" , \"Go\" , \"Object C\" ) . anyMatch ( Objects :: isNull ); allMatch\u68c0\u67e5\u6d41\u4e2d\u6d41\u4e2d\u6240\u6709\u5143\u7d20\u662f\u5426\u5339\u914d\u7ed9\u5b9a\u7684\u6761\u4ef6\uff0c\u8fd4\u56deboolean\u503c\u3002 noneMatch\u68c0\u67e5\u6d41\u4e2d\u6240\u4ee5\u5143\u7d20\u662f\u5426\u90fd\u4e0d\u5339\u914d\u7ed9\u5b9a\u7684\u6761\u4ef6\uff0c\u8fd4\u56deboolean\u503c\u3002","title":"1.3.10 anyMatch\u3001allMatch\u548cnoneMatch"},{"location":"Java/Java-8-functional/#1311-findanyfindfirst","text":"findAny\u627e\u5230\u6d41\u4e2d\u4efb\u610f\u4e00\u4e2a\u5143\u7d20(\u901a\u5e38\u662f\u7b2c\u4e00\u4e2a)\uff0c\u8fd4\u56de\u4e00\u4e2aOptional\u5bf9\u8c61\uff0c\u5982\u679c\u6d41\u662f\u7a7a\u7684\uff0c\u8fd4\u56de\u4e00\u4e2a\u503c\u4e3a\u7a7a\u7684Optional\u5bf9\u8c61\uff0c\u5982\u679c\u627e\u5230\u7684\u5143\u7d20\u521a\u597d\u662f\u7a7a\u503c\uff0c\u5219\u629b\u51fa\u4e00\u4e2aNullPointerException\u3002 public final class Optional < T > { T t ; //... } \u4f8b\uff1a Optional < Integer > optional = Stream . of ( 1 , 2 , 3 , 4 , 5 , 6 , 7 ) . findAny (); //\u6267\u884c\u591a\u6b21optional.get()\u59cb\u7ec8\u662f1 \u5982\u679c\u4f7f\u7528\u7684\u662f\u5e76\u884c\u7684\u6d41\uff0c\u90a3\u4e48findAny\u65b9\u6cd5\u8fd4\u56de\u7684\u503c\u5219\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a List < Integer > array = Arrays . asList ( 1 , 2 , 3 , 4 , 5 , 6 , 7 ); Printer . println ( array . parallelStream (). findAny (). get ()); Printer . println ( array . parallelStream (). findAny (). get ()); Printer . println ( array . parallelStream (). findAny (). get ()); Printer . println ( array . parallelStream (). findAny (). get ()); /* \u6267\u884c\u591a\u6b21\u8fd4\u56de\u503c\u5206\u522b\u662f\uff1a \u7b2c1\u6b21\uff1a 5 5 5 5 Process finished with exit code 0 \u7b2c2\u6b21\uff1a 4 7 2 6 Process finished with exit code 0 */ findAny\u64cd\u4f5c\u4e00\u822c\u548cfilter\u7ed3\u5408\u8d77\u6765\u7528\uff0c\u7528\u4e8e\u7b5b\u9009\u3002 \u5982\u679c\u60f3\u59cb\u7ec8\u627e\u5230\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u5e94\u8be5\u7528findFirst\u64cd\u4f5c\uff0c\u5373\u4f7f\u662f\u5e76\u884c\u7684\u6d41\uff0c\u9875\u59cb\u7ec8\u80fd\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 \u77ed\u8def\u6c42\u503c\uff1a\u5bf9\u4e8e\u6709\u4e9b\u64cd\u4f5c\uff0c\u4e0d\u5fc5\u5904\u7406\u6574\u4e2a\u6d41\u5c31\u80fd\u5f97\u5230\u7ed3\u679c\uff0c\u5c31\u50cf\u7528 || \u8fde\u63a5\u8d77\u6765\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\u6c42\u503c\u4e00\u6837\uff0c\u53ea\u8981\u63d0\u524d\u627e\u5230\u4e00\u4e2a\u4e3atrue\u7684\u503c\u5c31\u76f4\u63a5\u8fd4\u56de\u3002\u6d41\u7684\u64cd\u4f5c\u4e2d\uff0canyMatch\u3001findAny\u3001findFirst\u90fd\u662f\u77ed\u8def\u64cd\u4f5c\uff0climit\u4e5f\u662f\u3002","title":"1.3.11 findAny\u4e0efindFirst"},{"location":"Java/Java-8-functional/#14","text":"","title":"1.4 \u6d41\u4e0e\u96c6\u5408"},{"location":"Java/Java-8-functional/#141","text":"\u4ece\u524d\u9762\u7684\u4f8b\u5b50\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u901a\u8fc7Stream.of(...)\u65b9\u6cd5\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6d41\u5bf9\u8c61\uff0c\u770b\u8d77\u6765\u6570\u636e\u6e90\u4f3c\u4e4e\u662f\u4fdd\u5b58\u5728\u4e86\u6d41\u5bf9\u8c61\u4e2d\uff0c\u8fd9\u548c\u96c6\u5408\u4e2d\u4fdd\u5b58\u4e00\u7ec4\u6570\u636e\u5f88\u7c7b\u4f3c\u3002\u4f46\u662f\uff0c\u6700\u7ec8\u4ece\u6d41\u4e2d\u83b7\u53d6\u4e00\u4e2a\u96c6\u5408\uff0c\u8fd8\u9700\u8981\u8c03\u7528collect(toList())\u65b9\u6cd5\uff0c\u7531\u6b64\u53ef\u89c1\uff0c\u6d41\u5e76\u4e0d\u662f\u96c6\u5408\u3002 \u6d41\u4e0e\u96c6\u5408\u5230\u5e95\u6709\u4ec0\u4e48\u5dee\u5f02\u5462\uff1f\u4e3e\u4e00\u4e2a\u5f62\u8c61\u7684\u4f8b\u5b50\uff0c\u5b58\u5728DVD\u4e2d\u7684\u7535\u5f71\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u56e0\u4e3a\u5b83\u5305\u542b\u4e86\u7535\u5f71\u7684\u5168\u90e8\u6570\u636e\uff0c\u800c\u7f51\u4e0a\u5728\u7ebf\u64ad\u653e\u7684\u89c6\u9891\u5219\u662f\u4e00\u4e2a\u89c6\u9891\u6d41\uff0c\u5b83\u53ea\u52a0\u8f7d\u4f60\u5f53\u524d\u89c2\u770b\u7684\u8fd9\u51e0\u5e27\uff0c\u4e0d\u7528\u7b49\u5230\u6240\u6709\u7684\u6570\u636e\u90fd\u52a0\u8f7d\u5b8c\u4e86\u624d\u80fd\u770b\u3002 \u6240\u4ee5\u7b80\u5355\u6765\u8bb2\uff0c\u96c6\u5408\u4e0e\u6d41\u4e4b\u95f4\u7684\u5dee\u5f02\u5c31\u5728\u4e8e\u4f55\u65f6\u8fdb\u884c\u8ba1\u7b97\u3002\u96c6\u5408\u662f\u5185\u5b58\u4e2d\u7684\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u5305\u542b\u4e86\u6570\u636e\u6e90\u7684\u6240\u6709\u503c\uff0c\u96c6\u5408\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u9700\u8981\u5148\u8ba1\u7b97\u51fa\u6765\u7136\u540e\u518d\u52a0\u5165\u5230\u96c6\u5408\u4e2d\u3002\u800c\u6d41\u7684\u5143\u7d20\u5219\u662f\u6309\u9700\u8ba1\u7b97\uff0c\u4ec5\u4ec5\u5728\u7528\u6237\u9700\u8981\u7684\u65f6\u5019\u624d\u4f1a\u63d0\u53d6\u503c\uff0c\u8fd9\u662f\u4e00\u79cd\u751f\u4ea7\u8005\u2014\u6d88\u8d39\u8005\u7684\u5173\u7cfb\uff0c\u53ea\u6709\u6d88\u8d39\u8005\u8981\u6c42\u7684\u65f6\u5019\u624d\u4f1a\u53bb\u8ba1\u7b97\u503c\u3002","title":"1.4.1 \u6d41\u4e0e\u96c6\u5408\u6982\u5ff5\u7684\u5dee\u5f02"},{"location":"Java/Java-8-functional/#142","text":"\u548c\u8fed\u4ee3\u5668\u7c7b\u4f3c\uff0c\u6d41\u53ea\u80fd\u904d\u5386\u4e00\u6b21\uff0c\u904d\u5386\u5b8c\u6210\u4e4b\u540e\uff0c\u8fd9\u4e2a\u6d41\u5c31\u5df2\u7ecf\u88ab\u6d88\u8d39\u6389\u4e86\u3002\u5982\u679c\u60f3\u518d\u6b21\u904d\u5386\uff0c\u9700\u4ece\u6570\u636e\u6e90\u91cd\u65b0\u83b7\u53d6\u4e00\u4e2a\u6d41\uff08\u5982\u679c\u6570\u636e\u6e90\u662f\u53ef\u91cd\u590d\u7684\u6bd4\u5982\u96c6\u5408\uff0c\u8fd9\u4f1a\u5f88\u5bb9\u6613\uff0c\u4f46\u5982\u679c\u50cfI/O\u8fd9\u79cd\u7684\u8bdd\uff0c\u5c31\u4f1a\u5f88\u9ebb\u70e6\uff09\u3002 \u91cd\u590d\u6d88\u8d39\u4e00\u4e2a\u6d41\u4f1a\u629b\u51faIllegalArgumentException\uff0c\u8868\u793a\u6d41\u5df2\u7ecf\u88ab\u64cd\u4f5c\uff0c\u6216\u8005\u5173\u95ed\u3002 List<String> firms = Arrays.asList(\"Google\", \"AT&T\", \"Amazon\", \"Facebook\", \"Oracle\", \"MicroSoft\"); Stream<String> stream = Stream.of(firms); stream.forEach(System.out::println); stream.forEach(System.out::println);","title":"1.4.2 \u6d41\u53ea\u80fd\u904d\u5386\u4e00\u6b21"},{"location":"Java/Java-8-functional/#15","text":"","title":"1.5 \u6d41\u7684\u6784\u5efa"},{"location":"Java/Java-8-functional/#151","text":"\u5728\u6709\u4e9b\u6d41\u7684\u64cd\u4f5c\u4e2d\uff0c\u6d41\u4e2d\u7684\u5143\u7d20\u5982\u679c\u662f\u6570\u503c\uff0c\u4f1a\u4e0d\u53ef\u907f\u514d\u7684\u4ea7\u751f\u88c5\u7bb1\u548c\u62c6\u7bb1\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\uff0c\u5bf9\u83dc\u54c1\u7684\u4ef7\u683c\u6c42\u548c\uff1a List<Dish> dishes ... int sumPrice = dishes.stream() .map(Dish::getPrice) .reduce(0, Integer::sum); \u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0cmap\u64cd\u4f5c\u4f1a\u751f\u6210\u4e00\u4e2aStream \u7684\u6d41\uff0c\u56e0\u6b64\uff0c\u5c31\u9700\u8981\u5c06int\u7c7b\u578b\u88c5\u7bb1\u6210Integer\u3002\u5728Java 8\u7684Stream API\u4e2d\uff0c\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u62c6\u88c5\u7bb1\uff0c\u63d0\u4f9b\u4e86\u539f\u59cb\u7c7b\u578b\u6d41\u7279\u5316\uff0c\u4e13\u95e8\u652f\u6301\u5904\u7406\u6570\u503c\u6d41\u3002","title":"1.5.1 \u6570\u503c\u6d41"},{"location":"Java/Java-8-functional/#1511","text":"Java 8\u4e2d\u5f15\u5165\u7684\u539f\u59cb\u7c7b\u578b\u6d41\u7279\u5316\u6d41\u67093\u4e2a\uff1aIntStream\u3001LongStream\u548cDoubleStream\uff0c\u5206\u522b\u5c06\u6d41\u7684\u5143\u7d20\u7279\u5316\u4e3a\u5bf9\u5e94\u7684\u57fa\u7840\u7c7b\u578b\u3002\u76f8\u5e94\u7684\u8fd9\u4e9b\u6d41\u4e2d\u4e5f\u591a\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u6570\u503c\u64cd\u4f5c\uff0c\u6bd4\u5982sum, average, max, min\u7b49\u3002 \u5c06\u6d41\u8f6c\u5316\u6210\u7279\u5b9a\u7684\u6570\u503c\u6d41\u5e38\u7528\u7684\u64cd\u4f5c\u662fmap\uff0c\u5bf9\u5e94\u7684\uff0cmap\u64cd\u4f5c\u4e5f\u6709\u51e0\u4e2a\u7279\u5b9a\u7684\u65b9\u6cd5\uff0cmapToInt\u3001mapToLong\u3001mapToDouble\u3002\u6bd4\u5982\u4e0a\u9762\u5bf9\u83dc\u54c1\u4ef7\u683c\u6c42\u548c\u7684\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u7528IntStream\u6765\u505a\uff1a List < Dish > dishes ... int sumPrice = dishes . stream () . mapToInt ( Dish :: getPrice ) . sum ; \u6709\u65f6\u5019\uff0c\u4e5f\u4f1a\u6709\u5c06\u6570\u503c\u6d41\u8f6c\u56de\u5bf9\u8c61\u6d41\u7684\u9700\u6c42\uff0c\u8fd9\u65f6\u5019\u53ea\u9700\u8981\u5c06\u57fa\u7840\u5143\u7d20\u8fdb\u884c\u88c5\u7bb1\u64cd\u4f5c\u5c31\u53ef\u4ee5\uff0c\u4f7f\u7528\u7684\u64cd\u4f5c\u662fboxed\u3002 IntStream intSream = dishes . stream () . mapToInt ( Dish :: getPrice ); Stream < Integer > stream = intStream . boxed (); \u4e0a\u9762\u8bb2findAny\u548cfindFirst\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u63d0\u5230\u4e86Optional\u5bf9\u8c61\uff0c\u7c7b\u4f3c\u7684\uff0cOptional\u7c7b\u4e5f\u5bf9\u6570\u503c\u7684\u57fa\u7840\u7c7b\u578b\u8fdb\u884c\u4e86\u7279\u5316\uff0c\u6709IntOptitonal\u3001LongOptional\u548cDoubleOptional\u4e09\u4e2a\u7c7b\u3002","title":"1.5.1.1 \u539f\u59cb\u7c7b\u578b\u6d41\u7279\u5316"},{"location":"Java/Java-8-functional/#1512","text":"Java 8\u5f15\u5165\u4e86\u4e24\u4e2a\u53ef\u4ee5\u7528\u4e8eInStream\u548cLongStream\u7684\u9759\u6001\u65b9\u6cd5\uff0crange\u548crangeClose\u3002\u533a\u522b\u662frange\u4e0d\u5305\u542b\u7ed3\u675f\u503c\uff0crangeClosed\u5305\u542b\u7ed3\u675f\u503c\u3002 IntStream intStream = IntStream . range ( 1 , 10 ); int [] array = intStream . toArray (); Printer . print ( array ); /* output: [1,2,3,4,5,6,7,8,9] */ IntStream intStream = IntStream . rangeClosed ( 1 , 10 ); int [] array = intStream . toArray (); Printer . print ( array ); /* output : [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ]","title":"1.5.1.2 \u6570\u503c\u8303\u56f4"},{"location":"Java/Java-8-functional/#152","text":"","title":"1.5.2 \u6784\u5efa\u6d41\u7684\u51e0\u79cd\u65b9\u5f0f"},{"location":"Java/Java-8-functional/#1521","text":"\u4f7f\u7528Stream.of(T t ...)\u65b9\u6cd5\u53ef\u4ee5\u521b\u5efa\u51fa\u4e00\u4e2a\u6d41\uff0cStream.empty()\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6ca1\u6709\u5143\u7d20\u7684\u6d41\uff1a Stream < String > stringStream = Stream . of ( \"Apple\" , \"MicroSoft\" , \"Google\" , \"Facebook\" , \"Amazon\" ); Stream < String > emptyStream = Stream . empty ();","title":"1.5.2.1 \u7531\u503c\u521b\u5efa\u6d41"},{"location":"Java/Java-8-functional/#1522","text":"Arrays.stream\u53ef\u4ee5\u4ece\u6570\u7ec4\u521b\u5efa\u4e00\u4e2a\u6d41\uff0c\u53c2\u6570\u662f\u4e00\u4e2a\u6570\u7ec4\u3002 String [] stringArray = { \"Apple\" , \"MicroSoft\" , \"Google\" , \"Facebook\" , \"Amazon\" }; int [] intArray = { 0 , 1 , 1 , 2 , 3 , 5 , 8 , 13 , 21 }; Stream < String > stringStream = Arrays . stream ( stringArray ); IntStream intStream = Arrays . stream ( intArray ); Stream < Integer > integerStream = Arrays . stream ( intArray ). boxed ();","title":"1.5.2.2 \u7531\u6570\u7ec4\u521b\u5efa\u6d41"},{"location":"Java/Java-8-functional/#1523","text":"Java\u7684Collection\u63a5\u53e3\u4e2d\uff0c\u5f15\u5165\u4e86stream()\u548cparallelStream()\u4e24\u4e2a\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u53ef\u4ee5\u751f\u6210\u6d41\u3002 String [] stringArray = { \"Apple\" , \"MicroSoft\" , \"Google\" , \"Facebook\" , \"Amazon\" }; List < String > list = Arrays . asList ( stringArray ); Stream < String > stream = list . stream (); Stream < String > parallelStream = list . parallelStream ();","title":"1.5.2.3 \u7531\u96c6\u5408\u751f\u6210\u6d41"},{"location":"Java/Java-8-functional/#1524","text":"Java 8\u7684NIO API\u4e2d\uff0c\u5f88\u591a\u64cd\u4f5c\u90fd\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u6d41\u3002\u6bd4\u5982\uff0cFiles.lines\u5c31\u4f1a\u6839\u636e\u6587\u4ef6\u5185\u5bb9\u8fd4\u56de\u4e00\u4e2a\u6d41\u3002 try { Stream < String > lines = Files . lines ( Paths . get ( \".gitignore\" ), Charset . forName ( \"utf-8\" )) . flatMap ( line -> Arrays . stream ( line . split ( \" \" ))); lines . forEach ( word -> Printer . println ( word )); } catch ( IOException e ) { e . printStackTrace (); }","title":"1.5.2.4 \u7531\u6587\u4ef6\u751f\u6210\u6d41"},{"location":"Java/Java-8-functional/#1525","text":"Stream API\u4e2d\u63d0\u4f9b\u4e862\u4e2a\u9759\u6001\u65b9\u6cd5\u6765\u4ece\u65b9\u6cd5\u4e2d\u751f\u6210\u6d41\uff1aStream.iterate\u548cStream.generate\uff0c\u8fd92\u4e2a\u65b9\u6cd5\u90fd\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u65e0\u9650\u6d41\uff0c\u53ea\u8981\u4e0d\u7ed3\u675f\uff0c\u53ef\u4ee5\u4e00\u76f4\u7b97\u4e0b\u53bb\u3002 iterate iterate\u65b9\u6cd5\u6709\u4e24\u4e2a\u91cd\u8f7d\u7684\u65b9\u6cd5\uff1a //\u6709\u7ed3\u675f\u6761\u4ef6\u7684 public static < T > Stream < T > iterate ( T seed , Predicate <? super T > hasNext , UnaryOperator < T > next ) \u548c //\u6ca1\u6709\u9650\u5236\uff0c\u53ef\u4ee5\u771f\u6b63\u751f\u6210\u65e0\u9650\u6d41 public static < T > Stream < T > iterate ( final T seed , final UnaryOperator < T > f ) \u4f8b\u5982\uff0c\u751f\u6210\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff1a Stream . iterate ( new int [] { 0 , 1 }, t -> new int [] { t [ 1 ] , t [ 0 ] + t [ 1 ] }) . map ( t -> t [ 0 ] ) . limit ( 20 ) . forEach ( Printer :: println ); generate \u548citerate\u65b9\u6cd5\u7c7b\u4f3c\uff0cgenerate\u4e5f\u751f\u6210\u4e00\u4e2a\u65e0\u9650\u6d41\u3002 public static < T > Stream < T > generate ( Supplier <? extends T > s ) generate\u65b9\u6cd5\u7684\u53c2\u6570\u662f\u4e00\u4e2aSupplier\uff0c\u5b83\u53ef\u4ee5\u662f\u65e0\u72b6\u6001\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u6709\u72b6\u6001\u7684\u3002 \u65e0\u72b6\u6001\u7684Supplier\uff0c\u4e0d\u4f1a\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u72b6\u6001\uff0c\u6bd4\u5982\u751f\u6210\u968f\u673a\u6570\uff0c Stream . generate ( Math :: random ) . limit ( 20 ) . forEach ( Printer :: println ); \u6709\u72b6\u6001\u7684Supplier\u8fd8\u53ef\u4ee5\u662f\u6709\u72b6\u6001\u7684\uff0c\u5b83\u4f1a\u8bb0\u5f55\u524d\u4e00\u4e2aSupplier\u7684\u72b6\u6001\uff08\u53ef\u4ee5\u662f\u503c\uff0c\u5c5e\u6027\u7b49\uff09\uff0c\u6bd4\u5982\u8fd8\u662f\u751f\u6210\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff0c\u5728\u6784\u5efa\u6bcf\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u90fd\u6539\u53d8\u4e86supplier\u7684\u5c5e\u6027\uff1a IntSupplier supplier = new IntSupplier () { private int pre = 0 ; private int cur = 1 ; @Override public int getAsInt () { int oldPre = pre ; int oldCur = cur ; this . pre = cur ; this . cur = oldPre + oldCur ; return oldPre ; } }; IntStream . generate ( supplier ) . limit ( 20 ) . forEach ( Printer :: println ); Author: Ivan J. Lee Date : 2017-12-27 23:56","title":"1.5.2.5 \u7531\u51fd\u6570\u751f\u6210\u6d41\uff1a\u521b\u5efa\u65e0\u9650\u6d41"},{"location":"Java/Java-8-lambda/","text":"Java 8\u51fd\u6570\u5f0f\u7f16\u7a0b\u2013\u2013\u2013Lambda\u8868\u8fbe\u5f0f 1. \u4ecb\u7ecd 1.1 \u533f\u540d\u5185\u90e8\u7c7b \u8bbe\u8ba1\u533f\u540d\u5185\u90e8\u7c7b\u7684\u76ee\u7684\uff0c\u662f\u4e3a\u4e86\u65b9\u4fbf\u5f00\u53d1\u8005\u5c06\u4ee3\u7801\u4f5c\u4e3a\u6570\u636e\u4f20\u9012\u3002\u4e3e\u4e2a\u6817\u5b50\uff0c\u5728Android\u4e2d\uff0c\u4e3a\u4e00\u4e2a\u6309\u94ae\u8bbe\u7f6e\u4e00\u4e2a\u70b9\u51fb\u4e8b\u4ef6\u7684\u76d1\u542c\u5668\uff1a button . setOnClickListener ( new View . OnClickListener () { public void onClick ( View view ) { Log . v ( TAG , \"button is clicked!\" ); } }); 1.2 Lambda\u8868\u8fbe\u5f0f Lambda\u8868\u8fbe\u5f0f\u7684\u4f5c\u7528\u548c\u533f\u540d\u5185\u90e8\u7c7b\u76f8\u4f3c\uff0c\u4e5f\u662f\u4e3a\u4e86\u5c06\u4ee3\u7801\u4f5c\u4e3a\u6570\u636e\u6765\u4f20\u9012\uff0c\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bb2\uff0cLambda\u8868\u8fbe\u5f0f\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u533f\u540d\u51fd\u6570\uff0c\u5728\u5176\u4ed6\u7684\u4e00\u4e9b\u8bed\u8a00\u4e2d\u5219\u628a\u79f0\u4e3a\u95ed\u5305\uff0c\u5b9e\u9645\u4e0a\u610f\u4e49\u90fd\u5dee\u4e0d\u591a\u7684\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u7528Lambda\u8868\u8fbe\u5f0f\u6765\u6539\u5199\uff0c\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a button . setOnClickListener ( view -> Log . v ( TAG , \"button is clicked!\" )); \u548c\u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b\u4f20\u5165\u5b9e\u73b0\u4e86\u67d0\u4e2a\u63a5\u53e3\u7684\u5bf9\u8c61\u4e0d\u540c\uff0cLambda\u4f20\u5165\u7684\u53c2\u6570\u662f\u4e00\u6bb5\u4ee3\u7801\u5feb\uff0c\u5373\u533f\u540d\u51fd\u6570(\u6ce8\u610f\u8fd9\u91cc\u5df2\u7ecf\u4e0d\u5728\u53eb\u65b9\u6cd5\u800c\u53eb\u51fd\u6570\u4e86)\u3002\u8fd9\u4e2a\u533f\u540d\u51fd\u6570\u4e2d\uff0c->\u5c06\u53c2\u6570\u548cLambda\u8868\u8fbe\u5f0f\u7684\u4e3b\u4f53\u5206\u5f00\uff0cview\u662f\u51fd\u6570\u7684\u53c2\u6570\uff0cLog.v(TAG, \"button is clicked!\")\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\u3002 lambda\u8868\u8fbe\u5f0f\u8bed\u6cd5\uff1a ( parameters ) -> expression \u6216\u8005 ( parameters ) -> { statemens ;} Lambda\u8868\u8fbe\u5f0f\u4e2d\uff0c\u53c2\u6570\u7684\u7c7b\u578b\u4e0d\u9700\u8981\u663e\u5f0f\u6307\u660e\uff0c\u56e0\u4e3ajavac\u4f1a\u6839\u636e\u7a0b\u5e8f\u7684\u4e0a\u4e0b\u6587\u6765\u63a8\u65ad\u51fa\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u8fd9\u4e00\u70b9\u548ckotlin\u5f88\u76f8\u4f3c\u3002 \u51e0\u4e2aLambda\u8868\u8fbe\u5f0f\u7684\u4f8b\u5b50\uff1a 1\u3001\u6ca1\u6709\u53c2\u6570 Runnable runnable = () -> Log . v ( TAG , \"run\" ); 2\u3001\u4e00\u4e2a\u53c2\u6570 View . OnClickListener listener = view -> Log . v ( TAG , \"onClick\" ); 3\u3001\u4e00\u4e2a\u53c2\u6570\u5305\u542b\u4ee3\u7801\u5757 Runnable runnable = () -> { Log . v ( TAG , \"run first step\" ); Log . v ( TAG , \"run second step\" ); } 4\u3001\u591a\u4e2a\u53c2\u6570,\u4e0d\u6307\u5b9a\u53c2\u6570\u7c7b\u578b Callback < String > callback = ( arg1 , arg2 ) -> arg1 + arg2 ; 5\u3001\u591a\u4e2a\u53c2\u6570\u6307\u5b9a\u7c7b\u578b Callback < String > callback = ( String str1 , String str2 ) -> str1 + str2 ; Lambda\u8868\u8fbe\u5f0f\u7684\u53c2\u6570\u7c7b\u578b\u867d\u7136\u53ef\u4ee5\u7531\u7f16\u8bd1\u5668\u63a8\u65ad\u51fa\u6765, \u4f46\u662f\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b, \u4e5f\u53ef\u80fd\u4f1a\u63a8\u65ad\u4e0d\u51fa\u6765, \u8fd9\u65f6\u5019\u5c31\u9700\u8981\u663e\u5f0f\u58f0\u660e\u53c2\u6570\u7684\u7c7b\u578b\u4e86. 1.3 \u5f15\u7528\u503c\u800c\u975e\u53d8\u91cf \u5728\u533f\u540d\u5185\u90e8\u7c7b\u4e2d\uff0c\u5982\u679c\u9700\u8981\u5f15\u7528\u5916\u90e8\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5219\u5fc5\u987b\u5c06\u8fd9\u4e2a\u53d8\u91cf\u8bbe\u7f6e\u6210final\u7c7b\u578b\uff0c\u6bd4\u5982 final String name = getUserName (); button . setOnClickListener ( new View . OnClickListener () { public void onClick () { Toast . make ( context , \"hi, \" + name , Toast . LENGTH_LONG ). show (); } }); \u4e3a\u4ec0\u4e48\u533f\u540d\u5185\u90e8\u7c7b\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf\u5fc5\u987b\u662ffinal\u7c7b\u578b\u7684\u5462\uff1f\u7b80\u5355\u6765\u8bf4\uff0c\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6570\u503c\u7684\u4e00\u81f4\u6027\u3002\u5c40\u90e8\u53d8\u91cf\u548c\u533f\u540d\u5185\u90e8\u7c7b\u7684\u751f\u547d\u5468\u671f\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u5982\u679c\u533f\u540d\u5185\u90e8\u7c7b\u76f4\u63a5\u4f7f\u7528\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u5e76\u4fee\u6539\u5176\u503c\uff0c\u5219\u6709\u53ef\u80fd\u9020\u6210\u5185\u5916\u503c\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff0c\u6240\u4ee5Java\u89c4\u5b9a\u4e86\u533f\u540d\u5185\u90e8\u7c7b\u53ea\u80fd\u5f15\u7528final\u7c7b\u578b\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u503c\u4e0d\u4f1a\u88ab\u771f\u6b63\u6539\u53d8\uff0c\u533f\u540d\u5185\u90e8\u7c7b\u4e2d\uff0c\u4e5f\u5c31\u4fdd\u8bc1\u4e86\u503c\u7684\u4e00\u81f4\u6027\u3002 \u5728Java 8\u4e2d\uff0c\u653e\u677e\u4e86\u8fd9\u4e00\u9650\u5236\uff0c\u53ef\u4ee5\u5f15\u7528\u975efinal\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u7136\u800c\uff0c\u8be5\u53d8\u91cf\u5728\u65e2\u6210\u4e8b\u5b9e\u4e0a\u4e5f\u5fc5\u987b\u662ffinal\u7c7b\u578b\u7684\u3002 \u5728Lambda\u8868\u8fbe\u5f0f\u4e2d\uff0c\u5b9e\u9645\u4e0a\u4e5f\u53ea\u80fd\u4f7f\u7528final\u7c7b\u578b\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5373\u4fbf\u4e0d\u52a0final\u5173\u952e\u5b57\uff0c\u8fd9\u4e2a\u53d8\u91cf\u4e5f\u8fd8\u662ffinal\u7c7b\u578b\u7684\u3002\u5982\u679c\u8bd5\u56fe\u7ed9Lambda\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u4e00\u4e2a\u975efinal\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u7f16\u8bd1\u5668\u5c06\u4f1a\u62a5\u9519\u3002 //\u8fd9\u6bb5\u4ee3\u7801\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1 String name = getFirstName (); name = \"Mr. \" + name ; button . setOnClickListener ( view -> Toast . make ( context , \"Hi, \" + name , Toast . LENGTH_LONG ). show ()); 2 Lambda\u8868\u8fbe\u5f0f\u7684\u5e94\u7528 2.1 \u51fd\u6570\u5f0f\u63a5\u53e3 \u51fd\u6570\u63a5\u53e3\uff08Functional Interface\uff09 \u662f\u53ea\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\u7684\u63a5\u53e3\u3002\u4f8b\u5982\uff1a public interface Comparator < T > { int compare ( T o1 , T o2 ); } \u53ca public interface Runnable { void run (); } \u6ce8\u610f\uff1aJava 8\u4e2d\uff0c\u63a5\u53e3\u53ef\u4ee5\u6709\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u5373\u4fbf\u4e00\u4e2a\u63a5\u53e3\u5b9a\u4e49\u4e86\u591a\u4e2a\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u53ea\u8981\u5b83\u7684\u62bd\u8c61\u65b9\u6cd5\u53ea\u6709\u4e00\u4e2a\uff0c\u5b83\u4ecd\u7136\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\u3002 Lambda\u8868\u8fbe\u5f0f\u4e0e\u51fd\u6570\u5f0f\u63a5\u53e3\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\u5f15\u7528\u4e66\u4e2d\u7684\u4e00\u53e5\u8bdd\uff1a Lambda\u8868\u8fbe\u5f0f\u5141\u8bb8\u4f60\u76f4\u63a5\u4ee5\u5185\u8054\u7684\u5f62\u5f0f\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u62bd\u8c61\u65b9\u6cd5\u63d0\u4f9b\u5b9e\u73b0\uff0c\u5e76\u628a\u6574\u4e2a\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u5b9e\u4f8b\uff08\u5177\u4f53\u6765\u8bf4\uff0c\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\u4e00\u4e2a\u5177\u4f53\u5b9e\u73b0\u7684\u5b9e\u4f8b\uff09\u3002 \u901a\u4fd7\u4e00\u70b9\u6765\u8bb2\uff0cLambda\u8868\u8fbe\u5f0f\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u63d0\u4f9b\u4e86\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u4ece\u800c\u6765\u5b9e\u73b0Java\u65b9\u6cd5\u7684\u4f20\u9012\uff08\u6216\u8005\u8bf4\u662f\u4ee3\u7801\u5757\u4f20\u9012\uff09\u3002\u5f53\u7136\uff0c\u533f\u540d\u5185\u90e8\u7c7b\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u540c\u6837\u7684\u529f\u80fd\uff0c\u53ea\u4e0d\u8fc7\u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b28\u62d9\u3002 @FunctionalInterface\u6ce8\u89e3\u7528\u4e8e\u8868\u793a\u4e00\u4e2a\u63a5\u53e3\u88ab\u8bbe\u8ba1\u4e3a\u4e86\u51fd\u6570\u5f0f\u63a5\u53e3\u3002\u5982\u679c\u81ea\u5b9a\u4e49\u7684\u63a5\u53e3\u52a0\u4e86\u8fd9\u4e2a\u6ce8\u89e3\uff0c\u4f46\u786e\u4e0d\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\uff0cIDE\u4f1a\u5728\u7f16\u8bd1\u65f6\u62a5\u9519\uff0c\u201cMultiple non-overriding abstract methods found in interface Foo\u201d\uff0c\u610f\u601d\u662fFoo\u8fd9\u4e2a\u63a5\u53e3\u4e2d\u6709\u591a\u4e2a\u62bd\u8c61\u65b9\u6cd5\u3002 \u5bf9\u4e8e\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u8bbe\u8ba1\uff0c@FunctionalInterface\u5e76\u975e\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u662f\u52a0\u4e0a\u5b83\u662f\u4e00\u4e2a\u597d\u4e60\u60ef\u3002 2.2 \u51fd\u6570\u63cf\u8ff0\u7b26 \u51fd\u6570\u5f0f\u63a5\u53e3\u4e2d\u62bd\u8c61\u65b9\u6cd5\u7684\u7b7e\u540d\u57fa\u672c\u4e0a\u4e5f\u5c31\u662fLambda\u8868\u8fbe\u5f0f\u7684\u7b7e\u540d\uff0c\u6211\u4eec\u628a\u8fd9\u79cd\u62bd\u8c61\u65b9\u6cd5\u53eb\u505a\u51fd\u6570\u63cf\u8ff0\u7b26\u3002 \u6bd4\u5982Runnable\u63a5\u53e3\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u4ec0\u4e48\u4e5f\u4e0d\u63a5\u6536\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u8fd4\u56de\u7684\u65b9\u6cd5\u7684\u7b7e\u540d\uff0c\u5b83\u7684run()\u65b9\u6cd5\u4e0d\u63a5\u6536\u4efb\u4f55\u53c2\u6570\uff0c\u6700\u7ec8\u8fd4\u56devoid. Lambda\u548c\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u65b9\u6cd5\u7b7e\u540d\u7684\u4e00\u79cd\u8bb0\u6cd5\uff1a () -> void \u8fd9\u91cc\u8868\u793a\u7684\u662fRunnable\u63a5\u53e3\u6240\u4ee3\u8868\u7684\u65b9\u6cd5\u3002 \u5230\u6b64\u4e3a\u6b62\uff0c\u5173\u4e8eLambda\u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u4f4f\u7684\u662f\uff1a 1. Lambda\u8868\u8fbe\u5f0f\u53ef\u4ee5\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf(\u51fd\u6570\u5f0f\u63a5\u53e3)\uff1b 2. Lambda\u8868\u8fbe\u5f0f\u53ef\u4ee5\u4f20\u9012\u7ed9\u4e00\u4e2a\u63a5\u6536\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u65b9\u6cd5\u3002 \u4f8b\u5b50\uff1a Lambda\u8868\u8fbe\u5f0f\u7684\u6709\u6548\u4f7f\u7528\u65b9\u5f0f\uff1a (1) Lambda\u8868\u8fbe\u5f0f\u4f20\u7ed9\u4e00\u4e2a\u63a5\u6536\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u65b9\u6cd5 execute (() -> {}); public void execute ( Runnable r ){ r . run (); } \u8fd9\u91cc\u7684Lambda\u8868\u8fbe\u5f0f\u7684\u7b7e\u540d\u662f () -> void \uff0c\u8fd9\u662fRunnable\u63a5\u53e3\u6240\u4ee3\u8868\u7684\u65b9\u6cd5\u3002 (2) Lambda\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u8fd4\u56de\u503c public Callable < String > fetch () { return () -> \"Tricky example ;-)\" ; } interface Callable < T > { T call (); } fetch()\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2aCallable \u5bf9\u8c61\uff0cCallable \u6240\u4ee3\u8868\u7684\u65b9\u6cd5\u662f () -> String \uff0c\u8fd9\u548c\u4f8b\u4e2d\u6240\u7528\u7684\u7b7e\u540d\u662f\u4e00\u81f4\u7684\u3002 (3) \u4e00\u79cd\u9519\u8bef\u7684\u7528\u6cd5 Predicate < Apple > p = ( Apple a ) -> a . getWeight (); interface Predicate < T > { boolean test ( T t ); } \u4f8b\u4e2dLambda\u8868\u8fbe\u5f0f\u7684\u7b7e\u540d\u662f (Apple) -> Double \uff0cPredicate \u6240\u4ee3\u8868\u7684\u65b9\u6cd5\u662f (Apple) -> boolean \uff0c\u4e0d\u4e00\u81f4\u3002 2.3 \u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u4f7f\u7528 \u4e0a\u9762\u4ecb\u7ecd\u4e86\u51fd\u6570\u5f0f\u63a5\u53e3\u548c\u51fd\u6570\u63cf\u8ff0\u7b26\u7684\u6982\u5ff5\uff0c\u4e3a\u4e86\u5e94\u7528\u4e0d\u540c\u7684Lambda\u8868\u8fbe\u5f0f\uff0c\u5c31\u9700\u8981\u4e00\u5957\u80fd\u591f\u63cf\u8ff0\u5e38\u89c1\u51fd\u6570\u63cf\u8ff0\u7b26\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\u3002Java 8\u7684java.util.function\u5305\u4e2d\u4e3a\u6211\u4eec\u5f15\u5165\u4e86\u5f88\u591a\u51fd\u6570\u5f0f\u63a5\u53e3\u3002\u51e0\u4e2a\u5178\u578b\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\u5982\u4e0b\uff1a 2.3.1 Predicate @FunctionalInterface public interface Predicate < T > { boolean test ( T t ); ... } \u6d89\u53ca\u5230\u8fd4\u56de\u503c\u662fboolean\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\u65f6\uff0c\u53ef\u4ee5\u7528Predicate \uff0c\u4f8b\u5982\uff1a Predicate < String > p = ( s ) -> ! s . isTempty (); 2.3.2 Consumer @FunctionalInterface public interface Consumer < T > { void accept ( T t ); ... } \u9700\u8981\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u8bbf\u95ee\u53ef\u4ee5\u7528Consumer \uff0c\u4f8b\u5982\uff1a //\u5b9a\u4e49\u4e00\u4e2aforEach\u65b9\u6cd5 public void < T > forEach ( List < T > list , Consumer < T > consumer ) { for ( Integer i : list ) { consumer . consume ( i ); } } //\u4f7f\u7528 forEach ( Arrays . asList ( 1 , 2 , 3 , 4 , 5 ), ( Integer i ) -> System . out . print ( i )); 2.3.3 Function @FunctionalInterface public interface Function < T , R > { R apply ( T t ); ... } \u521b\u5efa\u6620\u5c04\u5173\u7cfb\u6216\u8005\u4ece\u4e00\u4e2a\u5bf9\u8c61\u4e2d\u63d0\u53d6\u4fe1\u606f\u53ef\u4ee5\u7528Function \u3002 3 \u7c7b\u578b\u68c0\u67e5\u4e0e\u7c7b\u578b\u63a8\u65ad \u4e0a\u9762\u63d0\u5230\uff0cLambda\u8868\u8fbe\u5f0f\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u63d0\u4f9b\u4e86\u5b9e\u73b0\uff0c\u4f46\u662fLambda\u8868\u8fbe\u5f0f\u672c\u8eab\u5e76\u4e0d\u5305\u542b\u5b9e\u73b0\u4e86\u54ea\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u4efb\u4f55\u4fe1\u606f\uff0c\u6240\u4ee5\u9700\u8981\u4e86\u89e3Lambda\u8868\u8fbe\u5f0f\u7684\u5b9e\u9645\u7c7b\u578b\u3002 3.1 \u7c7b\u578b\u68c0\u67e5 Lambda\u8868\u8fbe\u5f0f\u9700\u8981\u7684\u7c7b\u578b\u79f0\u4e3a \u76ee\u6807\u7c7b\u578b \u3002\u53ea\u8981\u51fd\u6570\u7b7e\u540d\u4e00\u81f4\uff0cLambda\u8868\u8fbe\u5f0f\u53ef\u4ee5\u4e0e\u5f88\u591a\u51fd\u6570\u5f0f\u63a5\u53e3\u76f8\u5173\u8054\u3002 \u4e00\u5f20\u56fe\u8bf4\u660e\u7c7b\u578b\u68c0\u67e5\u7684\u8fc7\u7a0b\uff1a List < Apple > heavierThan150g = filter ( inventory , ( Apple a ) -> a . getWeight () > 150 ); 3.2 \u7c7b\u578b\u63a8\u65ad \u7c7b\u578b\u63a8\u65ad\u662fJava 7\u5f15\u5165\u7684\u6982\u5ff5\uff0c<>\u64cd\u4f5c\u7b26\u53ef\u4f7f\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u6839\u636e\u4e0a\u4e0b\u6587\u63a8\u65ad\u51fa\u53c2\u6570\u7c7b\u578b\u3002 HashMap < String , Integer > map = new HashMap <> (); \u8fd9\u91cc\uff0c\u58f0\u660emap\u65f6\uff0c\u5df2\u7ecf\u660e\u786e\u6307\u5b9a\u4e86\u8303\u578b\u7684\u7c7b\u578b\uff0c\u6240\u4ee5\u5728new\u51faHashMap\u5bf9\u8c61\u65f6\uff0c\u7f16\u8bd1\u5668\u5df2\u7ecf\u77e5\u9053HashMap\u7684\u5177\u4f53\u8303\u578b\u3002 Java 8\u4e2d\uff0cLambda\u8868\u8fbe\u5f0f\u53ef\u4ee5\u7701\u7565\u6240\u6709\u53c2\u6570\u7684\u7c7b\u578b\u3002\u56e0\u4e3a\u51fd\u6570\u63cf\u8ff0\u7b26\u53ef\u4ee5\u901a\u8fc7\u76ee\u6807\u7c7b\u578b\u6765\u5f97\u5230\uff0c\u6240\u4ee5Java\u7f16\u8bd1\u5668\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u4e0b\u6587\u4fe1\u606f\u6765\u63a8\u65ad\u51fa\u6b63\u786e\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u4ece\u800c\u786e\u5b9a\u4f7f\u7528\u4ec0\u4e48\u51fd\u6570\u5f0f\u63a5\u53e3\u6765\u914d\u5408Lambda\u8868\u8fbe\u5f0f\u3002 \u5f53\u7136\uff0cLambda\u8868\u8fbe\u5f0f\u4e5f\u53ef\u4ee5\u4e0d\u7701\u7565\u53c2\u6570\u7c7b\u578b\uff0c\u663e\u5f0f\u6307\u5b9a\u3002\u81f3\u4e8e\u8fd9\u4e24\u79cd\u65b9\u5f0f\u54ea\u4e00\u79cd\u66f4\u597d\u5462\uff0c\u5219\u53d6\u51b3\u4e8e\u4e0d\u540c\u7684\u573a\u666f\uff0c\u6709\u65f6\u5019\u7701\u7565\u53c2\u6570\u7c7b\u578b\u4ee3\u7801\u66f4\u6613\u8bfb\uff0c\u6709\u7684\u65f6\u5019\u663e\u5f0f\u6307\u660e\u53c2\u6570\u7c7b\u578b\u5219\u6bd4\u8f83\u597d\u3002 4 \u65b9\u6cd5\u5f15\u7528 4.1 \u65b9\u6cd5\u5f15\u7528\u7b80\u4ecb \u65e2\u7136Lambda\u8868\u8fbe\u5f0f\u53ef\u4ee5\u4e0e\u51fd\u6570\u5f0f\u63a5\u53e3\u76f8\u5173\u8054\uff0c\u4f5c\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u51fd\u6570\u63cf\u8ff0\u7b26\u7684\u5f15\u7528\uff0c\u90a3\u4e48\u4e00\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\u6709\u6ca1\u6709\u7c7b\u4f3c\u7684\u8868\u793a\u65b9\u6cd5\u5462\uff1f\u7b54\u6848\u662f\u6709\u7684\uff0cJava 8\u63d0\u4f9b\u4e86\u65b9\u6cd5\u5f15\u7528(Method Referen)\u7684\u8868\u793a\u65b9\u6cd5\u3002\uff08\u5728C\u8bed\u8a00\u6216\u8005\u662f\u5176\u4ed6\u4e00\u4e9b\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u4e5f\u6709\u7c7b\u4f3c\u7684\u6982\u5ff5\uff0c\u6bd4\u5982\uff0cC\u8bed\u8a00\u4e2d\u7684\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0cPython\u4e2d\u628a\u4e00\u4e2a\u51fd\u6570\u8d4b\u503c\u7ed9\u53d8\u91cf\uff09 \u65b9\u6cd5\u5f15\u7528\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u73b0\u6709\u7684\u65b9\u6cd5\u5b9a\u4e49\uff0c\u5e76\u50cfLambda\u8868\u8fbe\u5f0f\u4e00\u6837\u4f20\u9012\u5b83\u4eec\u3002 \u65b9\u6cd5\u5f15\u7528\u901a\u8fc7\u4e00\u4e2a::\u6765\u8868\u793a\uff0c\u9700\u8981\u4f7f\u7528\u65b9\u6cd5\u5f15\u7528\u65f6\uff0c\u76ee\u6807\u5f15\u7528\u653e\u5728\u5206\u9694\u7b26::\u524d\uff0c\u65b9\u6cd5\u540d\u653e\u5728\u540e\u9762\u3002 \u4e00\u4e9b\u4f8b\u5b50\uff1a Lambda \u65b9\u6cd5\u5f15\u7528 () -> Thread.currentThread().dumpStack() Thread.currentThread()::dumpStack (str, i) -> str.substring(i) String::substring (String s) -> System.out.print(s) System.out::print 4.2 \u6784\u5efa\u65b9\u6cd5\u5f15\u7528 4.2.1 \u65b9\u6cd5\u5f15\u7528\u4e3b\u8981\u5206\u4e3a3\u7c7b\uff1a \u6307\u5411\u9759\u6001\u65b9\u6cd5\u5f15\u7528 \u4f8b\u5982Integer.parseInt()\u65b9\u6cd5\uff0c\u5199\u4f5cInteger::parseInt \u6307\u5411\u4efb\u610f\u7c7b\u578b\u65b9\u6cd5\u5b9e\u4f8b\u7684\u65b9\u6cd5\u5f15\u7528 \u5982String\u4e2d\u7684length\u65b9\u6cd5\uff0c\u5199\u4f5cString::length \u6307\u5411\u5df2\u6709\u5bf9\u8c61\u7684\u5b9e\u4f8b\u65b9\u6cd5\u7684\u65b9\u6cd5\u5f15\u7528 \u6bd4\u5982\u6709\u4e00\u4e2aStudent\u7684\u5b9e\u4f8bstu\uff0c\u6709\u4e00\u4e2a\u65b9\u6cd5\u662fgetName\uff0c\u5c31\u53ef\u4ee5\u5199\u6210stu::getName \u533a\u522b\uff1a \u9759\u6001\u65b9\u6cd5\u5f15\u7528\u662f\u76f4\u63a5\u5f15\u7528\u7c7b\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u901a\u8fc7 \"\u7c7b\u540d::\u65b9\u6cd5\u540d\"\u7684\u65b9\u5f0f\u5f15\u7528\uff1b \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u5f15\u7528\u4e2d\uff0c\u5f15\u7528\u4e86\u4e00\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u8fd9\u4e2a\u5bf9\u8c61\u672c\u8eab\u662fLambda\u8868\u8fbe\u5f0f\u7684\u4e00\u4e2a\u53c2\u6570\uff0c\u4e0d\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5bf9\u5e94\u7684Lambda\u8868\u8fbe\u5f0f\u662f(String s) -> s.length()\uff1b \u7b2c\u4e09\u79cd\u4e2d\uff0c\u662f\u5728Lambda\u8868\u8fbe\u5f0f\u4e2d\u8c03\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u6539\u5199\u6210Lambda\u8868\u8fbe\u5f0f\u5c31\u662f() -> stu.getName()\uff0c\u548c\u7b2c\u4e8c\u79cd\u7684\u533a\u522b\u5c31\u662f\u8c03\u7528\u7684\u5bf9\u8c61\u7684\u65b9\u6cd5\u4e0d\u662fLambda\u7684\u53c2\u6570\u3002 4.1.2 \u6784\u9020\u65b9\u6cd5\u5f15\u7528 \u5bf9\u4e8e\u4e00\u4e2a\u73b0\u6709\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5229\u7528\u5b83\u7684\u540d\u79f0\u548c\u5173\u952e\u5b57new\u6765\u521b\u5efa\u4e00\u4e2a\u65b9\u6cd5\u5f15\u7528\uff1aClassName::new. \u5b83\u7684\u529f\u80fd\u548c\u9759\u6001\u65b9\u6cd5\u7684\u5f15\u7528\u7c7b\u4f3c\uff0c\u6bd4\u5982\u6709\u4e00\u4e2a\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u9002\u5408Supplier\u7684\u7b7e\u540d\uff0c() -> Apple\uff0c\u90a3\u4e48\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a Supplier < Apple > constuctor = Apple :: new ; Apple apple = constructor . get (); \u5b83\u7b49\u4ef7\u4e8eLambda\u8868\u8fbe\u5f0f\u7684\u5199\u6cd5\uff1a Supplier < Apple > constuctor = () -> new Apple (); Apple apple = constructor . get (); 5 \u5b9e\u8df5 \u6709\u4e00\u4e9b\u83dc\u54c1\uff0c\u5b58\u5728 List<Dish> dishes \u4e2d\uff0c\u73b0\u5728\u8981\u5c06\u5b83\u4eec\u6309\u7167\u4ef7\u683c\u5347\u5e8f\u6392\u5e8f\u3002 \u5728Java 8\u4e4b\u524d Java 8\u4e4b\u524d\uff0cList\u6ca1\u6709sort\u65b9\u6cd5\uff0c\u9700\u8981\u501f\u52a9Collection\u7c7b\u3002 public class DishComparator implements Comparator < Dish > { public int compare ( Dish d1 , Dish d2 ) { return d1 . getPrice () - d2 . getPrice (); } } Collection . sort ( list , new DishComparator ()); Java 8\u4e2d\uff0c\u4f7f\u7528\u6765\u6392\u5e8flist Java 8\u4e4b\u524d\uff0cList\u6ca1\u6709sort\u65b9\u6cd5\uff0c\u9700\u8981\u501f\u52a9Collection\u7c7b\u3002 public class DishComparator implements Comparator < Dish > { public int compare ( Dish d1 , Dish d2 ) { return d1 . getPrice () - d2 . getPrice (); } } list . sort ( new DishComparator ()); \u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b list . sort ( new Comparator < Dish > { public int compare ( Dish d1 , Dish d2 ) { return d1 . getPrice () - d2 . getPrice (); } }); \u4f7f\u7528Lambda\u8868\u8fbe\u5f0f list . sort (( Dish d1 , Dish d2 ) -> d1 . getPrice () - d2 . getPrice ()); \u4f7f\u7528\u65b9\u6cd5\u5f15\u7528 list . sort ( Comparator . comparating ( Dish :: getPrice )) 6 \u5c0f\u7ed3 Lambda\u8868\u8fbe\u5f0f \u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u79cd\u533f\u540d\u51fd\u6570\uff1a\u6ca1\u6709\u540d\u79f0\uff0c\u4f46\u6709\u53c2\u6570\u5217\u8868\u3001\u51fd\u6570\u4e3b\u4f53\u3001\u8fd4\u56de\u503c\uff1b Lambda\u8868\u8fbe\u5f0f\u53ef\u4ee5\u8ba9\u4f60\u66f4\u7b80\u6d01\u7684\u4f20\u9012\u4ee3\u7801\uff1b \u51fd\u6570\u5f0f\u63a5\u53e3 \u5c31\u662f\u4ec5\u4ec5\u58f0\u660e\u4e86\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\u7684\u63a5\u53e3\uff1b \u53ea\u6709\u5728\u63a5\u6536\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u5730\u65b9\u624d\u53ef\u4ee5\u4f7f\u7528Lambda\u8868\u8fbe\u5f0f\uff1b Lambda\u8868\u8fbe\u5f0f\u5141\u8bb8\u4f60\u76f4\u63a5\u5185\u8054\uff0c\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u62bd\u8c61\u65b9\u6cd5\u63d0\u4f9b\u5b9e\u73b0\uff0c\u5e76\u4e14\u5c06\u6574\u4e2a\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff1b Java 8\u81ea\u5e26\u4e00\u4e9b\u5e38\u7528\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u5728java.util.function\u5305\u91cc\uff0c\u5305\u62ecPredicate \u3001Function \u3001Supplier \u3001Consumer \u7b49\uff1b Lambda\u8868\u8fbe\u5f0f\u6240\u9700\u8981\u7684\u4ee3\u8868\u7684\u7c7b\u578b\u6210\u4e3a\u76ee\u6807\u7c7b\u578b\uff1b \u65b9\u6cd5\u5f15\u7528\u8ba9\u4f60\u91cd\u590d\u4f7f\u7528\u73b0\u6709\u7684\u65b9\u6cd5\u5b9e\u73b0\u5e76\u76f4\u63a5\u4f20\u9012\u5b83\u4eec\uff1b Comparator\u3001Predicate\u3001\u548cFunction\u7b49\u51fd\u6570\u5f0f\u63a5\u53e3\u6709\u51e0\u4e2a\u53ef\u4ee5\u7ed3\u5408Lambda\u8868\u8fbe\u5f0f\u7684\u9ed8\u8ba4\u65b9\u6cd5\u3002 -- \u4f5c\u8005\uff1aIvan J. Lee \u65f6\u95f4\uff1a2017-11-28 00:40","title":"Java 8 -- Lambda\u8868\u8fbe\u5f0f"},{"location":"Java/Java-8-lambda/#java-8lambda","text":"","title":"Java 8\u51fd\u6570\u5f0f\u7f16\u7a0b\u2013\u2013\u2013Lambda\u8868\u8fbe\u5f0f"},{"location":"Java/Java-8-lambda/#1","text":"","title":"1. \u4ecb\u7ecd"},{"location":"Java/Java-8-lambda/#11","text":"\u8bbe\u8ba1\u533f\u540d\u5185\u90e8\u7c7b\u7684\u76ee\u7684\uff0c\u662f\u4e3a\u4e86\u65b9\u4fbf\u5f00\u53d1\u8005\u5c06\u4ee3\u7801\u4f5c\u4e3a\u6570\u636e\u4f20\u9012\u3002\u4e3e\u4e2a\u6817\u5b50\uff0c\u5728Android\u4e2d\uff0c\u4e3a\u4e00\u4e2a\u6309\u94ae\u8bbe\u7f6e\u4e00\u4e2a\u70b9\u51fb\u4e8b\u4ef6\u7684\u76d1\u542c\u5668\uff1a button . setOnClickListener ( new View . OnClickListener () { public void onClick ( View view ) { Log . v ( TAG , \"button is clicked!\" ); } });","title":"1.1 \u533f\u540d\u5185\u90e8\u7c7b"},{"location":"Java/Java-8-lambda/#12-lambda","text":"Lambda\u8868\u8fbe\u5f0f\u7684\u4f5c\u7528\u548c\u533f\u540d\u5185\u90e8\u7c7b\u76f8\u4f3c\uff0c\u4e5f\u662f\u4e3a\u4e86\u5c06\u4ee3\u7801\u4f5c\u4e3a\u6570\u636e\u6765\u4f20\u9012\uff0c\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bb2\uff0cLambda\u8868\u8fbe\u5f0f\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u533f\u540d\u51fd\u6570\uff0c\u5728\u5176\u4ed6\u7684\u4e00\u4e9b\u8bed\u8a00\u4e2d\u5219\u628a\u79f0\u4e3a\u95ed\u5305\uff0c\u5b9e\u9645\u4e0a\u610f\u4e49\u90fd\u5dee\u4e0d\u591a\u7684\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u7528Lambda\u8868\u8fbe\u5f0f\u6765\u6539\u5199\uff0c\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a button . setOnClickListener ( view -> Log . v ( TAG , \"button is clicked!\" )); \u548c\u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b\u4f20\u5165\u5b9e\u73b0\u4e86\u67d0\u4e2a\u63a5\u53e3\u7684\u5bf9\u8c61\u4e0d\u540c\uff0cLambda\u4f20\u5165\u7684\u53c2\u6570\u662f\u4e00\u6bb5\u4ee3\u7801\u5feb\uff0c\u5373\u533f\u540d\u51fd\u6570(\u6ce8\u610f\u8fd9\u91cc\u5df2\u7ecf\u4e0d\u5728\u53eb\u65b9\u6cd5\u800c\u53eb\u51fd\u6570\u4e86)\u3002\u8fd9\u4e2a\u533f\u540d\u51fd\u6570\u4e2d\uff0c->\u5c06\u53c2\u6570\u548cLambda\u8868\u8fbe\u5f0f\u7684\u4e3b\u4f53\u5206\u5f00\uff0cview\u662f\u51fd\u6570\u7684\u53c2\u6570\uff0cLog.v(TAG, \"button is clicked!\")\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\u3002 lambda\u8868\u8fbe\u5f0f\u8bed\u6cd5\uff1a ( parameters ) -> expression \u6216\u8005 ( parameters ) -> { statemens ;} Lambda\u8868\u8fbe\u5f0f\u4e2d\uff0c\u53c2\u6570\u7684\u7c7b\u578b\u4e0d\u9700\u8981\u663e\u5f0f\u6307\u660e\uff0c\u56e0\u4e3ajavac\u4f1a\u6839\u636e\u7a0b\u5e8f\u7684\u4e0a\u4e0b\u6587\u6765\u63a8\u65ad\u51fa\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u8fd9\u4e00\u70b9\u548ckotlin\u5f88\u76f8\u4f3c\u3002 \u51e0\u4e2aLambda\u8868\u8fbe\u5f0f\u7684\u4f8b\u5b50\uff1a 1\u3001\u6ca1\u6709\u53c2\u6570 Runnable runnable = () -> Log . v ( TAG , \"run\" ); 2\u3001\u4e00\u4e2a\u53c2\u6570 View . OnClickListener listener = view -> Log . v ( TAG , \"onClick\" ); 3\u3001\u4e00\u4e2a\u53c2\u6570\u5305\u542b\u4ee3\u7801\u5757 Runnable runnable = () -> { Log . v ( TAG , \"run first step\" ); Log . v ( TAG , \"run second step\" ); } 4\u3001\u591a\u4e2a\u53c2\u6570,\u4e0d\u6307\u5b9a\u53c2\u6570\u7c7b\u578b Callback < String > callback = ( arg1 , arg2 ) -> arg1 + arg2 ; 5\u3001\u591a\u4e2a\u53c2\u6570\u6307\u5b9a\u7c7b\u578b Callback < String > callback = ( String str1 , String str2 ) -> str1 + str2 ; Lambda\u8868\u8fbe\u5f0f\u7684\u53c2\u6570\u7c7b\u578b\u867d\u7136\u53ef\u4ee5\u7531\u7f16\u8bd1\u5668\u63a8\u65ad\u51fa\u6765, \u4f46\u662f\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b, \u4e5f\u53ef\u80fd\u4f1a\u63a8\u65ad\u4e0d\u51fa\u6765, \u8fd9\u65f6\u5019\u5c31\u9700\u8981\u663e\u5f0f\u58f0\u660e\u53c2\u6570\u7684\u7c7b\u578b\u4e86.","title":"1.2 Lambda\u8868\u8fbe\u5f0f"},{"location":"Java/Java-8-lambda/#13","text":"\u5728\u533f\u540d\u5185\u90e8\u7c7b\u4e2d\uff0c\u5982\u679c\u9700\u8981\u5f15\u7528\u5916\u90e8\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5219\u5fc5\u987b\u5c06\u8fd9\u4e2a\u53d8\u91cf\u8bbe\u7f6e\u6210final\u7c7b\u578b\uff0c\u6bd4\u5982 final String name = getUserName (); button . setOnClickListener ( new View . OnClickListener () { public void onClick () { Toast . make ( context , \"hi, \" + name , Toast . LENGTH_LONG ). show (); } }); \u4e3a\u4ec0\u4e48\u533f\u540d\u5185\u90e8\u7c7b\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf\u5fc5\u987b\u662ffinal\u7c7b\u578b\u7684\u5462\uff1f\u7b80\u5355\u6765\u8bf4\uff0c\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6570\u503c\u7684\u4e00\u81f4\u6027\u3002\u5c40\u90e8\u53d8\u91cf\u548c\u533f\u540d\u5185\u90e8\u7c7b\u7684\u751f\u547d\u5468\u671f\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u5982\u679c\u533f\u540d\u5185\u90e8\u7c7b\u76f4\u63a5\u4f7f\u7528\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u5e76\u4fee\u6539\u5176\u503c\uff0c\u5219\u6709\u53ef\u80fd\u9020\u6210\u5185\u5916\u503c\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff0c\u6240\u4ee5Java\u89c4\u5b9a\u4e86\u533f\u540d\u5185\u90e8\u7c7b\u53ea\u80fd\u5f15\u7528final\u7c7b\u578b\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u503c\u4e0d\u4f1a\u88ab\u771f\u6b63\u6539\u53d8\uff0c\u533f\u540d\u5185\u90e8\u7c7b\u4e2d\uff0c\u4e5f\u5c31\u4fdd\u8bc1\u4e86\u503c\u7684\u4e00\u81f4\u6027\u3002 \u5728Java 8\u4e2d\uff0c\u653e\u677e\u4e86\u8fd9\u4e00\u9650\u5236\uff0c\u53ef\u4ee5\u5f15\u7528\u975efinal\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u7136\u800c\uff0c\u8be5\u53d8\u91cf\u5728\u65e2\u6210\u4e8b\u5b9e\u4e0a\u4e5f\u5fc5\u987b\u662ffinal\u7c7b\u578b\u7684\u3002 \u5728Lambda\u8868\u8fbe\u5f0f\u4e2d\uff0c\u5b9e\u9645\u4e0a\u4e5f\u53ea\u80fd\u4f7f\u7528final\u7c7b\u578b\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5373\u4fbf\u4e0d\u52a0final\u5173\u952e\u5b57\uff0c\u8fd9\u4e2a\u53d8\u91cf\u4e5f\u8fd8\u662ffinal\u7c7b\u578b\u7684\u3002\u5982\u679c\u8bd5\u56fe\u7ed9Lambda\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u4e00\u4e2a\u975efinal\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u7f16\u8bd1\u5668\u5c06\u4f1a\u62a5\u9519\u3002 //\u8fd9\u6bb5\u4ee3\u7801\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1 String name = getFirstName (); name = \"Mr. \" + name ; button . setOnClickListener ( view -> Toast . make ( context , \"Hi, \" + name , Toast . LENGTH_LONG ). show ());","title":"1.3 \u5f15\u7528\u503c\u800c\u975e\u53d8\u91cf"},{"location":"Java/Java-8-lambda/#2-lambda","text":"","title":"2 Lambda\u8868\u8fbe\u5f0f\u7684\u5e94\u7528"},{"location":"Java/Java-8-lambda/#21","text":"\u51fd\u6570\u63a5\u53e3\uff08Functional Interface\uff09 \u662f\u53ea\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\u7684\u63a5\u53e3\u3002\u4f8b\u5982\uff1a public interface Comparator < T > { int compare ( T o1 , T o2 ); } \u53ca public interface Runnable { void run (); } \u6ce8\u610f\uff1aJava 8\u4e2d\uff0c\u63a5\u53e3\u53ef\u4ee5\u6709\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u5373\u4fbf\u4e00\u4e2a\u63a5\u53e3\u5b9a\u4e49\u4e86\u591a\u4e2a\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u53ea\u8981\u5b83\u7684\u62bd\u8c61\u65b9\u6cd5\u53ea\u6709\u4e00\u4e2a\uff0c\u5b83\u4ecd\u7136\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\u3002 Lambda\u8868\u8fbe\u5f0f\u4e0e\u51fd\u6570\u5f0f\u63a5\u53e3\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\u5f15\u7528\u4e66\u4e2d\u7684\u4e00\u53e5\u8bdd\uff1a Lambda\u8868\u8fbe\u5f0f\u5141\u8bb8\u4f60\u76f4\u63a5\u4ee5\u5185\u8054\u7684\u5f62\u5f0f\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u62bd\u8c61\u65b9\u6cd5\u63d0\u4f9b\u5b9e\u73b0\uff0c\u5e76\u628a\u6574\u4e2a\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u5b9e\u4f8b\uff08\u5177\u4f53\u6765\u8bf4\uff0c\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\u4e00\u4e2a\u5177\u4f53\u5b9e\u73b0\u7684\u5b9e\u4f8b\uff09\u3002 \u901a\u4fd7\u4e00\u70b9\u6765\u8bb2\uff0cLambda\u8868\u8fbe\u5f0f\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u63d0\u4f9b\u4e86\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u4ece\u800c\u6765\u5b9e\u73b0Java\u65b9\u6cd5\u7684\u4f20\u9012\uff08\u6216\u8005\u8bf4\u662f\u4ee3\u7801\u5757\u4f20\u9012\uff09\u3002\u5f53\u7136\uff0c\u533f\u540d\u5185\u90e8\u7c7b\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u540c\u6837\u7684\u529f\u80fd\uff0c\u53ea\u4e0d\u8fc7\u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b28\u62d9\u3002 @FunctionalInterface\u6ce8\u89e3\u7528\u4e8e\u8868\u793a\u4e00\u4e2a\u63a5\u53e3\u88ab\u8bbe\u8ba1\u4e3a\u4e86\u51fd\u6570\u5f0f\u63a5\u53e3\u3002\u5982\u679c\u81ea\u5b9a\u4e49\u7684\u63a5\u53e3\u52a0\u4e86\u8fd9\u4e2a\u6ce8\u89e3\uff0c\u4f46\u786e\u4e0d\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\uff0cIDE\u4f1a\u5728\u7f16\u8bd1\u65f6\u62a5\u9519\uff0c\u201cMultiple non-overriding abstract methods found in interface Foo\u201d\uff0c\u610f\u601d\u662fFoo\u8fd9\u4e2a\u63a5\u53e3\u4e2d\u6709\u591a\u4e2a\u62bd\u8c61\u65b9\u6cd5\u3002 \u5bf9\u4e8e\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u8bbe\u8ba1\uff0c@FunctionalInterface\u5e76\u975e\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u662f\u52a0\u4e0a\u5b83\u662f\u4e00\u4e2a\u597d\u4e60\u60ef\u3002","title":"2.1 \u51fd\u6570\u5f0f\u63a5\u53e3"},{"location":"Java/Java-8-lambda/#22","text":"\u51fd\u6570\u5f0f\u63a5\u53e3\u4e2d\u62bd\u8c61\u65b9\u6cd5\u7684\u7b7e\u540d\u57fa\u672c\u4e0a\u4e5f\u5c31\u662fLambda\u8868\u8fbe\u5f0f\u7684\u7b7e\u540d\uff0c\u6211\u4eec\u628a\u8fd9\u79cd\u62bd\u8c61\u65b9\u6cd5\u53eb\u505a\u51fd\u6570\u63cf\u8ff0\u7b26\u3002 \u6bd4\u5982Runnable\u63a5\u53e3\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u4ec0\u4e48\u4e5f\u4e0d\u63a5\u6536\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u8fd4\u56de\u7684\u65b9\u6cd5\u7684\u7b7e\u540d\uff0c\u5b83\u7684run()\u65b9\u6cd5\u4e0d\u63a5\u6536\u4efb\u4f55\u53c2\u6570\uff0c\u6700\u7ec8\u8fd4\u56devoid. Lambda\u548c\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u65b9\u6cd5\u7b7e\u540d\u7684\u4e00\u79cd\u8bb0\u6cd5\uff1a () -> void \u8fd9\u91cc\u8868\u793a\u7684\u662fRunnable\u63a5\u53e3\u6240\u4ee3\u8868\u7684\u65b9\u6cd5\u3002 \u5230\u6b64\u4e3a\u6b62\uff0c\u5173\u4e8eLambda\u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u4f4f\u7684\u662f\uff1a 1. Lambda\u8868\u8fbe\u5f0f\u53ef\u4ee5\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf(\u51fd\u6570\u5f0f\u63a5\u53e3)\uff1b 2. Lambda\u8868\u8fbe\u5f0f\u53ef\u4ee5\u4f20\u9012\u7ed9\u4e00\u4e2a\u63a5\u6536\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u65b9\u6cd5\u3002 \u4f8b\u5b50\uff1a Lambda\u8868\u8fbe\u5f0f\u7684\u6709\u6548\u4f7f\u7528\u65b9\u5f0f\uff1a (1) Lambda\u8868\u8fbe\u5f0f\u4f20\u7ed9\u4e00\u4e2a\u63a5\u6536\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u65b9\u6cd5 execute (() -> {}); public void execute ( Runnable r ){ r . run (); } \u8fd9\u91cc\u7684Lambda\u8868\u8fbe\u5f0f\u7684\u7b7e\u540d\u662f () -> void \uff0c\u8fd9\u662fRunnable\u63a5\u53e3\u6240\u4ee3\u8868\u7684\u65b9\u6cd5\u3002 (2) Lambda\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u8fd4\u56de\u503c public Callable < String > fetch () { return () -> \"Tricky example ;-)\" ; } interface Callable < T > { T call (); } fetch()\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2aCallable \u5bf9\u8c61\uff0cCallable \u6240\u4ee3\u8868\u7684\u65b9\u6cd5\u662f () -> String \uff0c\u8fd9\u548c\u4f8b\u4e2d\u6240\u7528\u7684\u7b7e\u540d\u662f\u4e00\u81f4\u7684\u3002 (3) \u4e00\u79cd\u9519\u8bef\u7684\u7528\u6cd5 Predicate < Apple > p = ( Apple a ) -> a . getWeight (); interface Predicate < T > { boolean test ( T t ); } \u4f8b\u4e2dLambda\u8868\u8fbe\u5f0f\u7684\u7b7e\u540d\u662f (Apple) -> Double \uff0cPredicate \u6240\u4ee3\u8868\u7684\u65b9\u6cd5\u662f (Apple) -> boolean \uff0c\u4e0d\u4e00\u81f4\u3002","title":"2.2 \u51fd\u6570\u63cf\u8ff0\u7b26"},{"location":"Java/Java-8-lambda/#23","text":"\u4e0a\u9762\u4ecb\u7ecd\u4e86\u51fd\u6570\u5f0f\u63a5\u53e3\u548c\u51fd\u6570\u63cf\u8ff0\u7b26\u7684\u6982\u5ff5\uff0c\u4e3a\u4e86\u5e94\u7528\u4e0d\u540c\u7684Lambda\u8868\u8fbe\u5f0f\uff0c\u5c31\u9700\u8981\u4e00\u5957\u80fd\u591f\u63cf\u8ff0\u5e38\u89c1\u51fd\u6570\u63cf\u8ff0\u7b26\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\u3002Java 8\u7684java.util.function\u5305\u4e2d\u4e3a\u6211\u4eec\u5f15\u5165\u4e86\u5f88\u591a\u51fd\u6570\u5f0f\u63a5\u53e3\u3002\u51e0\u4e2a\u5178\u578b\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\u5982\u4e0b\uff1a","title":"2.3 \u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u4f7f\u7528"},{"location":"Java/Java-8-lambda/#231-predicate","text":"@FunctionalInterface public interface Predicate < T > { boolean test ( T t ); ... } \u6d89\u53ca\u5230\u8fd4\u56de\u503c\u662fboolean\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\u65f6\uff0c\u53ef\u4ee5\u7528Predicate \uff0c\u4f8b\u5982\uff1a Predicate < String > p = ( s ) -> ! s . isTempty ();","title":"2.3.1 Predicate"},{"location":"Java/Java-8-lambda/#232-consumer","text":"@FunctionalInterface public interface Consumer < T > { void accept ( T t ); ... } \u9700\u8981\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u8bbf\u95ee\u53ef\u4ee5\u7528Consumer \uff0c\u4f8b\u5982\uff1a //\u5b9a\u4e49\u4e00\u4e2aforEach\u65b9\u6cd5 public void < T > forEach ( List < T > list , Consumer < T > consumer ) { for ( Integer i : list ) { consumer . consume ( i ); } } //\u4f7f\u7528 forEach ( Arrays . asList ( 1 , 2 , 3 , 4 , 5 ), ( Integer i ) -> System . out . print ( i )); 2.3.3 Function @FunctionalInterface public interface Function < T , R > { R apply ( T t ); ... } \u521b\u5efa\u6620\u5c04\u5173\u7cfb\u6216\u8005\u4ece\u4e00\u4e2a\u5bf9\u8c61\u4e2d\u63d0\u53d6\u4fe1\u606f\u53ef\u4ee5\u7528Function \u3002","title":"2.3.2 Consumer"},{"location":"Java/Java-8-lambda/#3","text":"\u4e0a\u9762\u63d0\u5230\uff0cLambda\u8868\u8fbe\u5f0f\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u63d0\u4f9b\u4e86\u5b9e\u73b0\uff0c\u4f46\u662fLambda\u8868\u8fbe\u5f0f\u672c\u8eab\u5e76\u4e0d\u5305\u542b\u5b9e\u73b0\u4e86\u54ea\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u4efb\u4f55\u4fe1\u606f\uff0c\u6240\u4ee5\u9700\u8981\u4e86\u89e3Lambda\u8868\u8fbe\u5f0f\u7684\u5b9e\u9645\u7c7b\u578b\u3002","title":"3 \u7c7b\u578b\u68c0\u67e5\u4e0e\u7c7b\u578b\u63a8\u65ad"},{"location":"Java/Java-8-lambda/#31","text":"Lambda\u8868\u8fbe\u5f0f\u9700\u8981\u7684\u7c7b\u578b\u79f0\u4e3a \u76ee\u6807\u7c7b\u578b \u3002\u53ea\u8981\u51fd\u6570\u7b7e\u540d\u4e00\u81f4\uff0cLambda\u8868\u8fbe\u5f0f\u53ef\u4ee5\u4e0e\u5f88\u591a\u51fd\u6570\u5f0f\u63a5\u53e3\u76f8\u5173\u8054\u3002 \u4e00\u5f20\u56fe\u8bf4\u660e\u7c7b\u578b\u68c0\u67e5\u7684\u8fc7\u7a0b\uff1a List < Apple > heavierThan150g = filter ( inventory , ( Apple a ) -> a . getWeight () > 150 );","title":"3.1 \u7c7b\u578b\u68c0\u67e5"},{"location":"Java/Java-8-lambda/#32","text":"\u7c7b\u578b\u63a8\u65ad\u662fJava 7\u5f15\u5165\u7684\u6982\u5ff5\uff0c<>\u64cd\u4f5c\u7b26\u53ef\u4f7f\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u6839\u636e\u4e0a\u4e0b\u6587\u63a8\u65ad\u51fa\u53c2\u6570\u7c7b\u578b\u3002 HashMap < String , Integer > map = new HashMap <> (); \u8fd9\u91cc\uff0c\u58f0\u660emap\u65f6\uff0c\u5df2\u7ecf\u660e\u786e\u6307\u5b9a\u4e86\u8303\u578b\u7684\u7c7b\u578b\uff0c\u6240\u4ee5\u5728new\u51faHashMap\u5bf9\u8c61\u65f6\uff0c\u7f16\u8bd1\u5668\u5df2\u7ecf\u77e5\u9053HashMap\u7684\u5177\u4f53\u8303\u578b\u3002 Java 8\u4e2d\uff0cLambda\u8868\u8fbe\u5f0f\u53ef\u4ee5\u7701\u7565\u6240\u6709\u53c2\u6570\u7684\u7c7b\u578b\u3002\u56e0\u4e3a\u51fd\u6570\u63cf\u8ff0\u7b26\u53ef\u4ee5\u901a\u8fc7\u76ee\u6807\u7c7b\u578b\u6765\u5f97\u5230\uff0c\u6240\u4ee5Java\u7f16\u8bd1\u5668\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u4e0b\u6587\u4fe1\u606f\u6765\u63a8\u65ad\u51fa\u6b63\u786e\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u4ece\u800c\u786e\u5b9a\u4f7f\u7528\u4ec0\u4e48\u51fd\u6570\u5f0f\u63a5\u53e3\u6765\u914d\u5408Lambda\u8868\u8fbe\u5f0f\u3002 \u5f53\u7136\uff0cLambda\u8868\u8fbe\u5f0f\u4e5f\u53ef\u4ee5\u4e0d\u7701\u7565\u53c2\u6570\u7c7b\u578b\uff0c\u663e\u5f0f\u6307\u5b9a\u3002\u81f3\u4e8e\u8fd9\u4e24\u79cd\u65b9\u5f0f\u54ea\u4e00\u79cd\u66f4\u597d\u5462\uff0c\u5219\u53d6\u51b3\u4e8e\u4e0d\u540c\u7684\u573a\u666f\uff0c\u6709\u65f6\u5019\u7701\u7565\u53c2\u6570\u7c7b\u578b\u4ee3\u7801\u66f4\u6613\u8bfb\uff0c\u6709\u7684\u65f6\u5019\u663e\u5f0f\u6307\u660e\u53c2\u6570\u7c7b\u578b\u5219\u6bd4\u8f83\u597d\u3002","title":"3.2 \u7c7b\u578b\u63a8\u65ad"},{"location":"Java/Java-8-lambda/#4","text":"","title":"4 \u65b9\u6cd5\u5f15\u7528"},{"location":"Java/Java-8-lambda/#41","text":"\u65e2\u7136Lambda\u8868\u8fbe\u5f0f\u53ef\u4ee5\u4e0e\u51fd\u6570\u5f0f\u63a5\u53e3\u76f8\u5173\u8054\uff0c\u4f5c\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u51fd\u6570\u63cf\u8ff0\u7b26\u7684\u5f15\u7528\uff0c\u90a3\u4e48\u4e00\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\u6709\u6ca1\u6709\u7c7b\u4f3c\u7684\u8868\u793a\u65b9\u6cd5\u5462\uff1f\u7b54\u6848\u662f\u6709\u7684\uff0cJava 8\u63d0\u4f9b\u4e86\u65b9\u6cd5\u5f15\u7528(Method Referen)\u7684\u8868\u793a\u65b9\u6cd5\u3002\uff08\u5728C\u8bed\u8a00\u6216\u8005\u662f\u5176\u4ed6\u4e00\u4e9b\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u4e5f\u6709\u7c7b\u4f3c\u7684\u6982\u5ff5\uff0c\u6bd4\u5982\uff0cC\u8bed\u8a00\u4e2d\u7684\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0cPython\u4e2d\u628a\u4e00\u4e2a\u51fd\u6570\u8d4b\u503c\u7ed9\u53d8\u91cf\uff09 \u65b9\u6cd5\u5f15\u7528\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u73b0\u6709\u7684\u65b9\u6cd5\u5b9a\u4e49\uff0c\u5e76\u50cfLambda\u8868\u8fbe\u5f0f\u4e00\u6837\u4f20\u9012\u5b83\u4eec\u3002 \u65b9\u6cd5\u5f15\u7528\u901a\u8fc7\u4e00\u4e2a::\u6765\u8868\u793a\uff0c\u9700\u8981\u4f7f\u7528\u65b9\u6cd5\u5f15\u7528\u65f6\uff0c\u76ee\u6807\u5f15\u7528\u653e\u5728\u5206\u9694\u7b26::\u524d\uff0c\u65b9\u6cd5\u540d\u653e\u5728\u540e\u9762\u3002 \u4e00\u4e9b\u4f8b\u5b50\uff1a Lambda \u65b9\u6cd5\u5f15\u7528 () -> Thread.currentThread().dumpStack() Thread.currentThread()::dumpStack (str, i) -> str.substring(i) String::substring (String s) -> System.out.print(s) System.out::print","title":"4.1 \u65b9\u6cd5\u5f15\u7528\u7b80\u4ecb"},{"location":"Java/Java-8-lambda/#42","text":"","title":"4.2 \u6784\u5efa\u65b9\u6cd5\u5f15\u7528"},{"location":"Java/Java-8-lambda/#421-3","text":"\u6307\u5411\u9759\u6001\u65b9\u6cd5\u5f15\u7528 \u4f8b\u5982Integer.parseInt()\u65b9\u6cd5\uff0c\u5199\u4f5cInteger::parseInt \u6307\u5411\u4efb\u610f\u7c7b\u578b\u65b9\u6cd5\u5b9e\u4f8b\u7684\u65b9\u6cd5\u5f15\u7528 \u5982String\u4e2d\u7684length\u65b9\u6cd5\uff0c\u5199\u4f5cString::length \u6307\u5411\u5df2\u6709\u5bf9\u8c61\u7684\u5b9e\u4f8b\u65b9\u6cd5\u7684\u65b9\u6cd5\u5f15\u7528 \u6bd4\u5982\u6709\u4e00\u4e2aStudent\u7684\u5b9e\u4f8bstu\uff0c\u6709\u4e00\u4e2a\u65b9\u6cd5\u662fgetName\uff0c\u5c31\u53ef\u4ee5\u5199\u6210stu::getName \u533a\u522b\uff1a \u9759\u6001\u65b9\u6cd5\u5f15\u7528\u662f\u76f4\u63a5\u5f15\u7528\u7c7b\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u901a\u8fc7 \"\u7c7b\u540d::\u65b9\u6cd5\u540d\"\u7684\u65b9\u5f0f\u5f15\u7528\uff1b \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u5f15\u7528\u4e2d\uff0c\u5f15\u7528\u4e86\u4e00\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u8fd9\u4e2a\u5bf9\u8c61\u672c\u8eab\u662fLambda\u8868\u8fbe\u5f0f\u7684\u4e00\u4e2a\u53c2\u6570\uff0c\u4e0d\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5bf9\u5e94\u7684Lambda\u8868\u8fbe\u5f0f\u662f(String s) -> s.length()\uff1b \u7b2c\u4e09\u79cd\u4e2d\uff0c\u662f\u5728Lambda\u8868\u8fbe\u5f0f\u4e2d\u8c03\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u6539\u5199\u6210Lambda\u8868\u8fbe\u5f0f\u5c31\u662f() -> stu.getName()\uff0c\u548c\u7b2c\u4e8c\u79cd\u7684\u533a\u522b\u5c31\u662f\u8c03\u7528\u7684\u5bf9\u8c61\u7684\u65b9\u6cd5\u4e0d\u662fLambda\u7684\u53c2\u6570\u3002","title":"4.2.1 \u65b9\u6cd5\u5f15\u7528\u4e3b\u8981\u5206\u4e3a3\u7c7b\uff1a"},{"location":"Java/Java-8-lambda/#412","text":"\u5bf9\u4e8e\u4e00\u4e2a\u73b0\u6709\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5229\u7528\u5b83\u7684\u540d\u79f0\u548c\u5173\u952e\u5b57new\u6765\u521b\u5efa\u4e00\u4e2a\u65b9\u6cd5\u5f15\u7528\uff1aClassName::new. \u5b83\u7684\u529f\u80fd\u548c\u9759\u6001\u65b9\u6cd5\u7684\u5f15\u7528\u7c7b\u4f3c\uff0c\u6bd4\u5982\u6709\u4e00\u4e2a\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u9002\u5408Supplier\u7684\u7b7e\u540d\uff0c() -> Apple\uff0c\u90a3\u4e48\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a Supplier < Apple > constuctor = Apple :: new ; Apple apple = constructor . get (); \u5b83\u7b49\u4ef7\u4e8eLambda\u8868\u8fbe\u5f0f\u7684\u5199\u6cd5\uff1a Supplier < Apple > constuctor = () -> new Apple (); Apple apple = constructor . get ();","title":"4.1.2 \u6784\u9020\u65b9\u6cd5\u5f15\u7528"},{"location":"Java/Java-8-lambda/#5","text":"\u6709\u4e00\u4e9b\u83dc\u54c1\uff0c\u5b58\u5728 List<Dish> dishes \u4e2d\uff0c\u73b0\u5728\u8981\u5c06\u5b83\u4eec\u6309\u7167\u4ef7\u683c\u5347\u5e8f\u6392\u5e8f\u3002 \u5728Java 8\u4e4b\u524d Java 8\u4e4b\u524d\uff0cList\u6ca1\u6709sort\u65b9\u6cd5\uff0c\u9700\u8981\u501f\u52a9Collection\u7c7b\u3002 public class DishComparator implements Comparator < Dish > { public int compare ( Dish d1 , Dish d2 ) { return d1 . getPrice () - d2 . getPrice (); } } Collection . sort ( list , new DishComparator ()); Java 8\u4e2d\uff0c\u4f7f\u7528\u6765\u6392\u5e8flist Java 8\u4e4b\u524d\uff0cList\u6ca1\u6709sort\u65b9\u6cd5\uff0c\u9700\u8981\u501f\u52a9Collection\u7c7b\u3002 public class DishComparator implements Comparator < Dish > { public int compare ( Dish d1 , Dish d2 ) { return d1 . getPrice () - d2 . getPrice (); } } list . sort ( new DishComparator ()); \u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b list . sort ( new Comparator < Dish > { public int compare ( Dish d1 , Dish d2 ) { return d1 . getPrice () - d2 . getPrice (); } }); \u4f7f\u7528Lambda\u8868\u8fbe\u5f0f list . sort (( Dish d1 , Dish d2 ) -> d1 . getPrice () - d2 . getPrice ()); \u4f7f\u7528\u65b9\u6cd5\u5f15\u7528 list . sort ( Comparator . comparating ( Dish :: getPrice ))","title":"5 \u5b9e\u8df5"},{"location":"Java/Java-8-lambda/#6","text":"Lambda\u8868\u8fbe\u5f0f \u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u79cd\u533f\u540d\u51fd\u6570\uff1a\u6ca1\u6709\u540d\u79f0\uff0c\u4f46\u6709\u53c2\u6570\u5217\u8868\u3001\u51fd\u6570\u4e3b\u4f53\u3001\u8fd4\u56de\u503c\uff1b Lambda\u8868\u8fbe\u5f0f\u53ef\u4ee5\u8ba9\u4f60\u66f4\u7b80\u6d01\u7684\u4f20\u9012\u4ee3\u7801\uff1b \u51fd\u6570\u5f0f\u63a5\u53e3 \u5c31\u662f\u4ec5\u4ec5\u58f0\u660e\u4e86\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\u7684\u63a5\u53e3\uff1b \u53ea\u6709\u5728\u63a5\u6536\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u5730\u65b9\u624d\u53ef\u4ee5\u4f7f\u7528Lambda\u8868\u8fbe\u5f0f\uff1b Lambda\u8868\u8fbe\u5f0f\u5141\u8bb8\u4f60\u76f4\u63a5\u5185\u8054\uff0c\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u62bd\u8c61\u65b9\u6cd5\u63d0\u4f9b\u5b9e\u73b0\uff0c\u5e76\u4e14\u5c06\u6574\u4e2a\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff1b Java 8\u81ea\u5e26\u4e00\u4e9b\u5e38\u7528\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u5728java.util.function\u5305\u91cc\uff0c\u5305\u62ecPredicate \u3001Function \u3001Supplier \u3001Consumer \u7b49\uff1b Lambda\u8868\u8fbe\u5f0f\u6240\u9700\u8981\u7684\u4ee3\u8868\u7684\u7c7b\u578b\u6210\u4e3a\u76ee\u6807\u7c7b\u578b\uff1b \u65b9\u6cd5\u5f15\u7528\u8ba9\u4f60\u91cd\u590d\u4f7f\u7528\u73b0\u6709\u7684\u65b9\u6cd5\u5b9e\u73b0\u5e76\u76f4\u63a5\u4f20\u9012\u5b83\u4eec\uff1b Comparator\u3001Predicate\u3001\u548cFunction\u7b49\u51fd\u6570\u5f0f\u63a5\u53e3\u6709\u51e0\u4e2a\u53ef\u4ee5\u7ed3\u5408Lambda\u8868\u8fbe\u5f0f\u7684\u9ed8\u8ba4\u65b9\u6cd5\u3002 -- \u4f5c\u8005\uff1aIvan J. Lee \u65f6\u95f4\uff1a2017-11-28 00:40","title":"6 \u5c0f\u7ed3"},{"location":"pages/android/","text":"Android\u5e94\u7528\u5de5\u7a0b\u5e08\u9700\u638c\u63e1\u7684\u57fa\u672c\u6280\u80fd \u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec\u5404\u79cd\u63a7\u4ef6\u3001\u7ec4\u4ef6\u7684\u57fa\u672c\u7528\u6cd5\uff0c\u4f18\u5316\u65b9\u5f0f \u6027\u80fd\u4f18\u5316\uff0c\u638c\u63e1\u7a33\u5b9a\u6027\uff0c\u6d41\u7545\u6027\uff0c\u8d44\u6e90\u6d88\u8017\uff0c\u5305\u5927\u5c0f\u7b49\u5404\u65b9\u5411\u7684\u4f18\u5316 \u67b6\u6784\u77e5\u8bc6\uff0c\u719f\u6089\u5e38\u89c1\u7684APP\u7684\u67b6\u6784\uff0cJetpack\uff0cCompose\u7b49 \u4e09\u65b9\u6846\u67b6\uff0c\u719f\u6089\u5e38\u89c1\u4e09\u65b9\u6846\u67b6\u7684\u4f7f\u7528\uff0c\u57fa\u672c\u7684\u539f\u7406\u548c\u5b9e\u73b0\u65b9\u5f0f framework\uff0c\u4e86\u89e3\u65e5\u5e38\u5f00\u53d1\u4e2d\u5e38\u7528\u7684API\u5728\u7cfb\u7edf\u5c42\u7ea7\u57fa\u672c\u6d41\u7a0b \u5de5\u5177\u4e0e\u5de5\u7a0b\uff0c\u719f\u6089\u5de5\u7a0b\u5316\u76f8\u5173\u7684\u57fa\u672c\u77e5\u8bc6","title":"Android\u77e5\u8bc6\u6811"},{"location":"pages/android/#android","text":"\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec\u5404\u79cd\u63a7\u4ef6\u3001\u7ec4\u4ef6\u7684\u57fa\u672c\u7528\u6cd5\uff0c\u4f18\u5316\u65b9\u5f0f \u6027\u80fd\u4f18\u5316\uff0c\u638c\u63e1\u7a33\u5b9a\u6027\uff0c\u6d41\u7545\u6027\uff0c\u8d44\u6e90\u6d88\u8017\uff0c\u5305\u5927\u5c0f\u7b49\u5404\u65b9\u5411\u7684\u4f18\u5316 \u67b6\u6784\u77e5\u8bc6\uff0c\u719f\u6089\u5e38\u89c1\u7684APP\u7684\u67b6\u6784\uff0cJetpack\uff0cCompose\u7b49 \u4e09\u65b9\u6846\u67b6\uff0c\u719f\u6089\u5e38\u89c1\u4e09\u65b9\u6846\u67b6\u7684\u4f7f\u7528\uff0c\u57fa\u672c\u7684\u539f\u7406\u548c\u5b9e\u73b0\u65b9\u5f0f framework\uff0c\u4e86\u89e3\u65e5\u5e38\u5f00\u53d1\u4e2d\u5e38\u7528\u7684API\u5728\u7cfb\u7edf\u5c42\u7ea7\u57fa\u672c\u6d41\u7a0b \u5de5\u5177\u4e0e\u5de5\u7a0b\uff0c\u719f\u6089\u5de5\u7a0b\u5316\u76f8\u5173\u7684\u57fa\u672c\u77e5\u8bc6","title":"Android\u5e94\u7528\u5de5\u7a0b\u5e08\u9700\u638c\u63e1\u7684\u57fa\u672c\u6280\u80fd"},{"location":"pages/android/1-basic/01-Activity/","text":"Activity \u57fa\u672c\u6982\u5ff5 Activity\u662fAndroid\u7684\u56db\u5927\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u4e5f\u662f\u552f\u4e00\u53ef\u4ee5\u548c\u7528\u6237\u76f4\u63a5\u4ea4\u4e92\u7684\u7ec4\u4ef6\uff0c\u5b83\u627f\u8f7d\u7740\u548c\u7528\u6237\u4ea4\u4e92\u7684\u754c\u9762\uff0c\u6bcf\u4e2aActivity\u90fd\u9644\u7740\u5728\u4e00\u4e2a\u5168\u5c4f\u6216\u8005\u975e\u5168\u5c4f\u7684\u7a97\u53e3\u4e0a\u3002Activity\u5145\u5f53\u4e86\u5e94\u7528\u4e8e\u7528\u6237\u7684\u5165\u53e3\u70b9\uff0c\u7528\u6237\u4e0e\u5e94\u7528\u4ea4\u4e92\u65f6\uff0c\u90fd\u662f\u76f4\u63a5\u548cActivity\u6253\u4ea4\u9053\u3002 \u4f20\u7edf\u684c\u9762\u7684\u5e94\u7528\u4e0e\u7528\u6237\u4e92\u52a8\u5f80\u5f80\u662f\u901a\u8fc7\u552f\u4e00\u7684\u5165\u53e3\uff0c\u79fb\u52a8\u7aef\u4ea4\u4e92\u5219\u4e0d\u540c\uff0c\u4ece\u4e00\u4e2a\u5e94\u7528\u4e2d\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u8fdb\u5230\u53e6\u4e00\u4e2a\u5e94\u7528\u7684\u4efb\u4f55\u4e00\u4e2a\u9875\u9762\u800c\u65e0\u9700\u542f\u52a8\u6574\u4e2a\u5e94\u7528\uff0c\u8fd9\u4e2a\u6253\u5f00\u7684\u9875\u9762\u5c31\u662f\u4e00\u4e2a\u5355\u72ec\u7684Activity\u3002 \u4e00\u4e2a\u5e94\u7528\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2aActivity\uff0c\u8fd9\u4e9bActivity\u90fd\u9700\u8981\u5728AndroidManifest\u6587\u4ef6\u4e2d\u6ce8\u518c\uff0c\u591a\u4e2aActivity\u534f\u540c\u5de5\u4f5c\u5171\u540c\u5b8c\u6210\u548c\u7528\u6237\u7684\u4ea4\u4e92\uff0c\u4f46\u662f\u4e0d\u540c\u7684Activity\u4e4b\u95f4\u4e5f\u5177\u6709\u6781\u5f31\u7684\u5173\u8054\u5173\u7cfb\u3002\u4e0d\u540c\u7684Activity\u901a\u8fc7Intent\u4ea4\u4e92\uff0c\u4ece\u4e00\u4e2aActivity\u542f\u52a8\u53e6\u4e00\u4e2aActivity\uff0c\u53ea\u9700\u8981\u901a\u8fc7Intent\u4f20\u5165\u7c7b\u540d\u5373\u53ef\uff0c\u751a\u81f3\u9690\u5f0f\u542f\u52a8Activity\u65f6\uff0c\u7c7b\u540d\u4e5f\u4e0d\u9700\u8981\u3002 \u751f\u547d\u5468\u671f \u6b63\u5e38\u751f\u547d\u5468\u671f onCreate onCreate\u662f\u751f\u547d\u5468\u671f\u7684\u7b2c\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6bcf\u4e2aActivity\u5bf9\u8c61\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21onCreate\uff0c\u4e00\u822c\u4f1a\u5728onCreate\u4e2d\u505a\u4e00\u4e9b\u521d\u59cb\u5316\u76f8\u5173\u7684\u5de5\u4f5c\u3002 onCreate\u53c2\u6570\u4e2d\u6709\u4e00\u4e2aBundle\u53c2\u6570\uff0c\u5982\u679cActivity\u662f\u88ab\u9500\u6bc1\u91cd\u5efa\u7684\uff0c\u5219Bundle\u4e2d\u4f1a\u5b58\u6709\u4e00\u4e9b\u4e0a\u6b21\u88ab\u9500\u6bc1\u65f6\u7684\u6570\u636e\uff0c\u91cd\u5efa\u65f6\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u6570\u636e\u505a\u4e00\u4e9b\u6062\u590d\u5de5\u4f5c\u3002 onStart onStart\u662f\u7528\u6237\u5373\u5c06\u8fdb\u5165\u524d\u53f0\u65f6\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u6b64\u65f6Activity\u5df2\u7ecf\u5bf9\u7528\u6237\u53ef\u89c1\u4e86\uff0c\u4f46\u662f\u8fd8\u4e0d\u80fd\u4ea4\u4e92\u3002onStart\u4f1a\u5feb\u901f\u7684\u8d70\u5b8c\uff0c\u63a5\u7740\u9a6c\u4e0a\u8d70onResume\uff0cActivity\u4e0d\u4f1a\u4e00\u76f4\u505c\u5728onStart\u4e0d\u52a8\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u5728onStart\u4e2d\u505a\u7279\u522b\u8017\u65f6\u7684\u64cd\u4f5c\u3002 onResume \u8d70\u5230onResume\u65f6\uff0cActivity\u624d\u771f\u6b63\u7684\u5b8c\u5168\u5904\u4e8e\u524d\u53f0\uff0c\u6b64\u65f6\u7528\u6237\u5c31\u53ef\u4ee5\u548c\u5e94\u7528\u4ea4\u4e92\u4e86\uff0c\u5982\u679c\u7528\u6237\u4e00\u76f4\u4e0d\u4ea4\u4e92\uff0cActivity\u4f1a\u4e00\u76f4\u505c\u7559\u5728onResume\u7684\u72b6\u6001\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cAndroid 7.0\u4e4b\u540e\uff0c\u5728\u591a\u7a97\u53e3\u6a21\u5f0f\u4e0b\uff0c\u53ea\u6709\u83b7\u53d6\u5230\u7126\u70b9\u7684Activity\u624d\u662fonResume\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u5373\u4f7f\u5f53\u524d\u7684Activity\u662f\u5b8c\u5168\u53ef\u89c1\u7684\uff0c\u6ca1\u6709\u7126\u70b9\u65f6\u4e5f\u5904\u4e8eonPause\u72b6\u6001\u3002\u4f46\u662f\u5728\u4e00\u4e9b\u6298\u53e0\u5c4f\u624b\u673a\u4e0a\uff0c\u4f1a\u6709\u591a\u4e2aActivity\u90fd\u5904\u4e8eonResume\u7684\u72b6\u6001\uff0c\u53ea\u662f\u5176\u4e2d\u53ea\u6709\u4e00\u4e2aActivity\u6709\u7126\u70b9\u3002 onPause onPause\u6807\u5fd7\u7740Activity\u8fdb\u5165\u4e86\u540e\u53f0\uff0c\u548conStart\u4e00\u6837\uff0c\u6b64\u65f6\u4e5f\u4e0d\u80fd\u548c\u7528\u6237\u4ea4\u4e92\u3002\u5728onPause\u4e2d\u4e00\u822c\u7528\u6765\u505a\u4e00\u4e9b\u8f7b\u91cf\u7ea7\u8d44\u6e90\u56de\u6536\u5de5\u4f5c\uff0c\u6bd4\u5982\u91ca\u653e\u7cfb\u7edf\u8d44\u6e90\uff0c\u91ca\u653e\u4f20\u611f\u5668\u8d44\u6e90\u7b49\u3002 \u5982\u679c\u542f\u52a8\u53e6\u4e00\u4e2aActivity\uff0conPause\u6267\u884c\u5b8c\u4e86\u4e4b\u540e\u624d\u4f1a\u6267\u884c\u4e0b\u4e2aActivity\u7684onResume\uff0c\u6240\u4ee5\u4e00\u822c\u4e5f\u4e0d\u5e94\u8be5\u5728onPause\u4e2d\u6267\u884c\u7279\u522b\u8017\u65f6\u7684\u64cd\u4f5c\u3002 \u548conStart\u7a0d\u6709\u533a\u522b\u7684\u662f\uff0c\u5728\u591a\u7a97\u53e3\u6a21\u5f0f\u4e0b\uff0c\u6216\u8005Activity\u4e0a\u76d6\u4e86\u4e00\u4e2a\u900f\u660e\u4e3b\u9898\u7684Activity\u3001\u6216\u8005\u8986\u76d6\u4e86\u4e00\u4e2aDialog\uff0cActivity\u5728\u8d70\u5b8conPause\u4e4b\u540e\uff0c\u662f\u4e0d\u4f1a\u8d70onStop\u7684\u3002 onStop onStop\u65f6\uff0cActivity\u5bf9\u7528\u6237\u5c31\u5df2\u7ecf\u4e0d\u53ef\u89c1\u4e86\uff0c\u5df2\u7ecf\u5b8c\u5168\u8fdb\u5165\u540e\u53f0\u4e86\u3002\u5728onStop\u65f6\uff0c\u5e94\u5f53\u91ca\u653e\u4e00\u4e9b\u5bf9\u7528\u6237\u4e0d\u53ef\u89c1\u65f6\u65e0\u7528\u7684\u8d44\u6e90\uff0c\u6bd4\u5982\u505c\u6b62\u52a8\u753b\uff0c\u5c06\u7cbe\u786e\u5b9a\u4f4d\u5207\u6362\u6210\u7c97\u7565\u5b9a\u4f4d\u3002\u5728onStop\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u6267\u884c\u4e00\u4e9bCPU\u5bc6\u96c6\u578b\u7684\u5173\u95ed\u64cd\u4f5c\uff0c\u5982\u8bfb\u5199\u6570\u636e\u5e93\u3002 onDestroy onDestroy\u662fActivity\u88ab\u9500\u6bc1\u65f6\u6267\u884c\u7684\u751f\u547d\u5468\u671f\u65b9\u6cd5\uff0c\u4e0d\u8bba\u662f\u4e3b\u52a8\u7ed3\u675fActivity\u8fd8\u662f\u5f02\u5e38\u60c5\u51b5\u4e0bActivity\u88ab\u9500\u6bc1\uff0c\u90fd\u4f1a\u8d70\u5230\u8fd9\u4e2a\u65b9\u6cd5\u3002 onRestart \u5f53\u4eceActivity\u79bb\u5f00\uff0c\u8d70\u5b8conStop\u540e\uff0c\u5982\u679c\u518d\u6b21\u8fd4\u56de\u5230\u5f53\u524dActivity\uff0c\u5219\u4f1a\u8d70\u5230onRestart\u3002 \u5f02\u5e38\u751f\u547d\u5468\u671f \ud83c\udf30\ud83c\udf30\ud83c\udf30\uff1aonPause\u548conStop\u4e0d\u6267\u884c \u5982\u679c\u5728onStart\u4e2d\u76f4\u63a5\u8c03\u7528finish()\u65b9\u6cd5\uff0c\u7531\u4e8eActivity\u8fd8\u6ca1\u5230\u524d\u53f0\uff0conPause\u548conStop\u4e5f\u5c31\u4e0d\u4f1a\u6267\u884c\u3002 \ud83c\udf30\ud83c\udf30\ud83c\udf30\uff1aonDestroy\u65b9\u6cd5\u4e0d\u6267\u884c \u4e00\u822c\u60c5\u51b5\u4e0b\uff0conDestroy\u65b9\u6cd5\u90fd\u662f\u4f1a\u6267\u884c\u7684\uff0c\u4f46\u662f\u5f53\u4efb\u52a1\u6808\u4e2d\u5b58\u5728\u591a\u4e2a\u672a\u9500\u6bc1\u7684Activity\u65f6\uff0c\u901a\u8fc7\u6700\u8fd1\u4efb\u52a1\u6740\u6b7b\u8fdb\u7a0b\uff0c\u53ea\u6709\u5904\u4e8e\u6808\u9876\u7684Activity\u624d\u4f1a\u8d70onDestroy\u65b9\u6cd5\u3002 \ud83c\udf30\ud83c\udf30\ud83c\udf30\uff1a \u4e3b\u52a8finishActivity\uff0c10s\u4e4b\u540e\u624d\u6267\u884conDestroy \u8c03\u7528finish()\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u89e6\u53d1Activity\u7684onDestry()\uff0c\u4f46\u662f\u8c03\u7528finish()\u4e4b\u540e\uff0c\u53ea\u662f\u5148\u4e3b\u7ebf\u7a0b\u7684\u6d88\u606f\u961f\u5217\u53d1\u9001\u4e00\u6761\u9500\u6bc1Activity\u7684\u6d88\u606f\uff0c\u56e0\u6b64\u4e0d\u4f1a\u9a6c\u4e0a\u89e6\u53d1onDestroy()\u3002\u6bd4\u5982\u6709\u573a\u666f\uff0c\u4eceActivityA\u542f\u52a8ActivityB\uff0c\u5e76\u540c\u65f6finish()\u6389ActivityA\uff0c\u540c\u65f6ActivityB\u4e2d\u901a\u8fc7Handler post\u6d88\u606f\u6301\u7eed\u64ad\u653e\u52a8\u753b\uff0c\u6b64\u65f6\u7531\u4e8e\u6d88\u606f\u961f\u5217\u4e00\u76f4\u5728\u5904\u7406\u524d\u53f0\u7684ActivityB\u7684\u6d88\u606f\uff0c\u4f1a\u5bfc\u81f4\u5904\u4e8e\u540e\u53f0\u7684ActivityA\u7684\u9500\u6bc1\u7684\u6d88\u606f\u4e00\u76f4\u7b49\u4e0d\u5230\u6267\u884c\u7684\u673a\u4f1a\uff0c\u4f46\u662f\u7cfb\u7edf\u5e76\u4e0d\u4f1a\u8ba9\u540e\u53f0\u7684Activity\u4e00\u76f4\u4e0d\u9500\u6bc1\uff0c\u5360\u7528\u7cfb\u7edf\u8d44\u6e90\uff0c\u56e0\u6b64\u6709\u4e00\u4e2a\u515c\u5e95\u768410s\u65f6\u95f4\uff0c\u8d85\u65f6\u540e\u5373\u4f1a\u9500\u6bc1\u3002\u540c\u6837\u7684\uff0c\u5982\u679cActivity\u7684\u8f6c\u573a\u52a8\u753b\u65f6\u95f4\u5f88\u957f\uff0c\u4e5f\u540c\u6837\u6709\u673a\u4f1a\u89e6\u53d1\u8d85\u65f6\u3002 \u72b6\u6001\u4fdd\u5b58\u4e0e\u6062\u590d \u4e00\u822cActivity\u57282\u5927\u7c7b\u573a\u666f\u4e0b\u9700\u8981\u8fdb\u884c\u72b6\u6001\u7684\u4fdd\u5b58\u4e0e\u6062\u590d\uff0c\u5185\u5b58\u4e0d\u8db3\u5bfc\u81f4Activity\u88ab\u6740\u6b7b\u548c\u914d\u7f6e\u53d8\u5316\u5bfc\u81f4\u7684Activity\u91cd\u5efa\u3002 \u72b6\u6001\u4fdd\u5b58 Activity\u4e2d\u63d0\u4f9b\u4e86onSaveInstanceState()\u65b9\u6cd5\u6765\u4fdd\u5b58\u72b6\u6001\uff0c\u8be5\u65b9\u6cd5\u5728onStop\u4e4b\u524d\u8c03\u7528\uff0c\u5c06\u9700\u8981\u4fdd\u5b58\u7684\u6570\u636e\u5199\u5165bundle\u4e2d\uff0c\u65e2\u53ef\u5b8c\u6210\u6570\u636e\u7684\u4fdd\u5b58\u3002 \u5728API 21\u4e4b\u540e\uff0cActivity\u7684onSaveInstanceState()\u589e\u52a0\u4e86\u4e00\u4e2a\u91cd\u8f7d\u7684\u65b9\u6cd5\uff1a public void onSaveInstanceState ( @NonNull Bundle outState , @NonNull PersistableBundle outPersistentState ) { onSaveInstanceState ( outState ); } \u5728\u6e05\u5355\u6587\u4ef6\u4e2d\u5bf9Activity\u589e\u52a0\u5c5e\u6027 android:persistableMode=\"persistAcrossReboots\" \u4e4b\u540e\uff0cActivity\u5177\u6709\u4e86\u6301\u4e45\u5316\u4fdd\u5b58\u6570\u636e\u7684\u80fd\u529b\uff0c\u8bbe\u5907\u91cd\u542f\u4e4b\u540e\u9996\u6b21\u518d\u6253\u5f00Activity\uff0c\u88ab\u6301\u4e45\u5316\u7684\u53c2\u6570\u5c31\u4f20\u5230onCreate\u65b9\u6cd5\u7684Bundle\u53c2\u6570\u4e2d\u3002 Activity\u7684onSaveInstanceState\u65b9\u6cd5\u4e2d\uff0c\u4f7f\u7528\u59d4\u6258\u7684\u65b9\u5f0f\uff0c\u901a\u8fc7\u8c03\u7528Window\u7684 saveHierarchyState \u65b9\u6cd5\u4fdd\u5b58\u89c6\u56fe\u7ed3\u6784\uff0c\u8fd9\u91cc\u7684Window\u901a\u5e38\u662fPhoneWindow\uff0cPhoneWindow\u53c8\u7ee7\u7eed\u8c03\u7528\u5176ContentView\u7684 saveHierarchyState \u65b9\u6cd5\u6765\u59d4\u6258\u5176\u5b50View\u4fdd\u5b58\u5176\u72b6\u6001\u3002\u5b50View\u5982\u9700\u4fdd\u5b58\u5176\u72b6\u6001\uff0c\u5fc5\u987b\u8981\u6709id\uff0c\u4e14\u5fc5\u987b\u8bbe\u7f6e\u5c5e\u6027 android:=android:saveEnabled=\"true\" \u3002 \u72b6\u6001\u6062\u590d \u72b6\u6001\u6062\u590d\u7684\u65b9\u6cd5\u67092\u4e2a\uff0c\u4e00\u4e2a\u662fonCreate\u65b9\u6cd5\uff0c\u4e00\u4e2a\u662fonRestoreInstanceState\u3002 onCreate\u65b9\u6cd5\u7684\u53c2\u6570\u4e2d\u6709\u4e00\u4e2aBundle\u65b9\u6cd5\uff0cBundle\u975e\u7a7a\u65f6\uff0c\u53ef\u4ee5\u5229\u7528Bundle\u4e2d\u7684\u6570\u636e\u6062\u590d\u72b6\u6001\u3002 onSaveInstanceState\u65b9\u6cd5\u5728onCreate\u65b9\u6cd5\u4e4b\u540e\u8c03\u7528\uff0c\u53c2\u6570\u4e5f\u662f\u4e00\u4e2aBundle\u53c2\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u5176\u6062\u590d\u72b6\u6001\u3002 \u5185\u5b58\u4e0d\u8db3Activity\u88ab\u6740\u6b7b \u5f53\u7cfb\u7edf\u5185\u5b58\u4e0d\u8db3\u65f6\uff0c\u4f1a\u6740\u6b7b\u4e00\u4e9b\u8fdb\u7a0b\u6765\u91ca\u653e\u8d44\u6e90\uff0c\u8fdb\u7a0b\u88ab\u6740\u6b7b\u7684\u4f18\u5148\u7ea7\u8ddf\u5f53\u524d\u8fdb\u7a0b\u7684\u524d\u540e\u53f0\u72b6\u6001\u6709\u5173\u3002 \u7cfb\u7edf\u6740\u8fdb\u7a0b\u53ef\u80fd\u6027 \u8fdb\u7a0b\u72b6\u6001 Activity\u72b6\u6001 \u5c0f \u524d\u53f0\uff08\u6709\u7126\u70b9\u6216\u5373\u5c06\u83b7\u53d6\u7126\u70b9\uff09 onCreate\u3001onStart\u3001onResume \u5927 \u540e\u53f0\uff08\u5373\u5c06\u5931\u53bb\u7126\u70b9\uff09 onPause \u6700\u5927 \u540e\u53f0\uff08\u5931\u53bb\u7126\u70b9\uff09 onStop \u6700\u5927 \u7a7a onDestroy \u914d\u7f6e\u53d8\u5316\u5bfc\u81f4Activity\u91cd\u5efa \u5f53\u914d\u7f6e\u53d1\u751f\u53d8\u66f4\u65f6\uff0cActivity\u4f1a\u88ab\u9500\u6bc1\u4e4b\u540e\u91cd\u65b0\u521b\u5efa\u3002\u5e38\u89c1\u7684\u4f1a\u89e6\u53d1\u914d\u7f6e\u53d8\u66f4\u7684\u884c\u4e3a\u5305\u62ec\uff1a\u6a2a\u7ad6\u5c4f\u5207\u6362\u3001\u8bed\u8a00\u6216\u8f93\u5165\u8bbe\u5907\u53d1\u751f\u53d8\u5316\u3002\u914d\u7f6e\u53d8\u66f4\u65f6\u4f1a\u56de\u8c03onConfigurationChanged\u65b9\u6cd5\uff0c\u4e5f\u4f1a\u8c03\u7528onSaveInstanceState\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u5bf9\u5e94\u7684\u65b9\u6cd5\u4e2d\u4fdd\u5b58\u72b6\u6001\u3002 \u914d\u7f6e android:configChanges=\"\" \u53ef\u4ee5\u8ba9\u914d\u7f6e\u6539\u53d8\u7684\u65f6\u5019\u4e0d\u91cd\u542fActivity \u4efb\u52a1\u6808 \u542f\u52a8\u6a21\u5f0f \u8bbe\u7f6eActivity\u7684\u542f\u52a8\u6a21\u5f0f\u6709\u79cd\u65b9\u5f0f\uff0c\u901a\u8fc7\u6e05\u5355\u6587\u4ef6\u8bbe\u7f6e\u6216\u8005\u5728Intent\u4e2d\u8bbe\u7f6eFLAG\u6807\u8bb0\u3002 \u4f7f\u7528\u6e05\u5355\u6587\u4ef6 stardard \u6807\u51c6\u6a21\u5f0f\uff0c\u6bcf\u6b21\u542f\u52a8\u5747\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Activity\u5b9e\u4f8b; singleTop \u6808\u9876\u590d\u7528\uff0c\u8981\u542f\u52a8\u7684Activity\u5728\u6808\u9876\u65f6\u590d\u7528Activity\u5b9e\u4f8b\uff0c\u540c\u65f6\u8c03\u7528onNewIntent()\u65b9\u6cd5\uff0c\u5426\u5219\u548c\u6807\u51c6\u6a21\u5f0f\u4e00\u6837\uff1b singleTask \u6808\u5185\u590d\u7528\uff0c\u5728\u8981\u542f\u52a8\u7684\u4efb\u52a1\u6808\u4e2d\u6709Activity\u7684\u5b9e\u4f8b\u5c31\u590d\u7528\uff0c\u540c\u65f6\u8c03\u7528onNewIntent()\u65b9\u6cd5\uff0c\u5982\u679c\u542f\u52a8\u7684\u4efb\u52a1\u6808\u4e2d\u4e0d\u5b58\u5728Activity\u5b9e\u4f8b\uff0c\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4efb\u52a1\u6808\uff0c\u5e76\u521b\u5efaActivity\u7684\u5b9e\u4f8b\u3002\u8fd9\u79cd\u6a21\u5f0f\u542f\u52a8Activity\u81ea\u5e26CLEAR_TOP\u7684\u7279\u6027\uff0c\u4f1a\u5c06\u8fd9\u4e2aActivity\u4e4b\u4e0a\u7684Activity\u90fd\u51fa\u6808\uff1b singleInstance \u5355\u4f8b\u6a21\u5f0f\uff0c\u72ec\u4eab\u4e00\u4e2a\u4efb\u52a1\u6808 \u4f7f\u7528Intent\u6807\u8bb0 FLAG_ACTIVITY_NEW_TASK \u867d\u7136\u540d\u5b57\u53ebNEW_TASK\uff0c\u4f46\u662f\u548c\u6e05\u5355\u6587\u4ef6\u4e2d\u914d\u7f6esingleTask\u6548\u679c\u662f\u4e00\u6837\u7684\u3002 FLAG_ACTIVITY_SINGLE_TOP \u6548\u679c\u548c\u6e05\u5355\u6587\u4ef6\u4e2d\u914d\u7f6esingleTop\u6548\u679c\u4e00\u6837\u3002 FLAG_ACTIVITY_CLEAR_TOP \u6e05\u5355\u6587\u4ef6\u4e2dlanchMode\u6ca1\u6709\u4e0e\u4e4b\u5339\u914d\u7684\u6a21\u5f0f\u3002\u5982\u679c\u542f\u52a8\u7684Activity\u5728\u6808\u5185\u4f46\u4e0d\u5728\u6808\u9876\uff0c\u4f1a\u6e05\u7a7a\u5176\u4e0a\u65b9\u7684Activity\uff0c\u4e0d\u4f1a\u521b\u5efa\u65b0\u5b9e\u4f8b\uff0c\u4f46\u4f1a\u8c03\u7528onNewIntent()\u65b9\u6cd5\u3002 \u4efb\u52a1\u6808\u7684\u8bbe\u7f6e \u6e05\u5355\u6587\u4ef6\u4e2d\u8bbe\u7f6etaskAffinity\uff0c\u53ef\u4ee5\u6307\u5b9a\u8981\u542f\u52a8\u7684Activity\u7684\u4efb\u52a1\u6808\uff0c\u9ed8\u8ba4\u548c\u5305\u540d\u4e00\u6837; \u6e05\u5355\u6587\u4ef6\u4e2d\u8fd8\u6709\u4e00\u4e2a\u5c5e\u6027allTaskReparenting\uff0c\u5f53\u8bbe\u7f6e\u8be5\u5c5e\u6027\u65f6\uff0cActivity\u53ef\u4ee5\u4ece\u4e00\u4e2a\u4efb\u52a1\u6808\u4e2d\u79fb\u5230\u53e6\u4e00\u4e2a\u4efb\u52a1\u6808\u4e2d\u3002 \u901a\u8fc7adb\u547d\u4ee4\u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u7684\u4efb\u52a1\u6808\uff1a adb shell dumpsys activity activities \u5728\u4ee3\u7801\u4e2d\uff0c\u53ef\u4ee5\u8c03\u7528 activityManager.getRunningTasks \u53ef\u4ee5\u83b7\u53d6\u4efb\u52a1\u6808\u3002 \u9875\u9762\u5bfc\u822a \u542f\u52a8Activity\u7684\u65b9\u5f0f\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u901a\u8fc7\u9690\u5f0fIntent\u542f\u52a8\uff0c\u5373\u542f\u52a8\u65f6\u6307\u5b9auri\u3001action\u3001category\uff0c\u5339\u914d\u89c4\u5219\u5339\u914d\u4e0a\u5373\u53ef\u542f\u52a8\u542f\u52a8\uff0c\u53e6\u4e00\u79cd\u662f\u901a\u8fc7\u5728Intent\u4e2d\u663e\u5f0f\u6307\u5b9aActivity\u7684class\uff0c\u5305\u540d\u7b49\u4fe1\u606f\u76f4\u63a5\u542f\u52a8\u6307\u5b9a\u7684Activity\u3002 \u9690\u5f0f\u542f\u52a8 Activity\u652f\u6301\u9690\u5f0f\u542f\u52a8\u5fc5\u987b\u5728\u6e05\u5355\u6587\u4ef6\u4e2d\u901a\u8fc7IntentFilter\u914d\u7f6e\u5339\u914d\u89c4\u5219\uff0c\u4e00\u4e2aActivity\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2aIntentFilter\uff0c\u53ea\u8981\u5176\u4e2d\u4e00\u4e2a\u80fd\u5339\u914d\u4e0a\uff0c\u5c31\u53ef\u4ee5\u542f\u52a8\u8be5Activity\u3002\u5339\u914d\u89c4\u5219\u5305\u62ec\uff1a action Action\u6307\u5b9a\u4e86\u64cd\u4f5c\u884c\u4e3a\uff0cIntent\u4e2d\u6709\u4e00\u4e9b\u9ed8\u8ba4\u7684\u884c\u4e3a\uff0c\u6bd4\u5982android.intent.ACTION_VIEW\u3002IntentFIlter\u4e2d\u914d\u7f6e\u4e86\u591a\u4e2aaction\u65f6\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u5339\u914d\u4e0a\u5c31\u53ef\u4ee5\u5339\u914d\u6210\u529f\u3002 category: \u53ef\u4ee5\u6ca1\u6709\uff0c\u4e00\u65e6\u6307\u5b9a\uff0c\u5fc5\u987b\u5b8c\u5168\u5339\u914d\u3002\u6ca1\u6709\u58f0\u660ecategory\u65f6\uff0c\u542f\u52a8Activity\uff0c\u7cfb\u7edf\u4e00\u822c\u4f1a\u6307\u5b9a\u4e00\u4e2a\u9ed8\u8ba4\u7684category\uff0candroid.intent.category.DEFAULT\u3002 data: datta\u548caction\u7684\u5339\u914d\u89c4\u5219\u4e00\u6837\u3002data\u4e2d\u53ef\u4ee5\u6307\u5b9a\u542f\u52a8\u7684uri\u5339\u914d\u89c4\u5219\uff0c\u4ee5\u53camineType\u3002 Activity\u7684\u542f\u52a8\u6d41\u7a0b \u53c2\u8003 Activity\u542f\u52a8\u6d41\u7a0b\u6e90\u7801 \u53c2\u8003 Android developers -- Activity Activity\u4e0e\u542f\u52a8\u65b9\u5f0f\u8be6\u89e3","title":"\u56db\u5927\u7ec4\u4ef6--Activity"},{"location":"pages/android/1-basic/01-Activity/#activity","text":"","title":"Activity"},{"location":"pages/android/1-basic/01-Activity/#_1","text":"Activity\u662fAndroid\u7684\u56db\u5927\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u4e5f\u662f\u552f\u4e00\u53ef\u4ee5\u548c\u7528\u6237\u76f4\u63a5\u4ea4\u4e92\u7684\u7ec4\u4ef6\uff0c\u5b83\u627f\u8f7d\u7740\u548c\u7528\u6237\u4ea4\u4e92\u7684\u754c\u9762\uff0c\u6bcf\u4e2aActivity\u90fd\u9644\u7740\u5728\u4e00\u4e2a\u5168\u5c4f\u6216\u8005\u975e\u5168\u5c4f\u7684\u7a97\u53e3\u4e0a\u3002Activity\u5145\u5f53\u4e86\u5e94\u7528\u4e8e\u7528\u6237\u7684\u5165\u53e3\u70b9\uff0c\u7528\u6237\u4e0e\u5e94\u7528\u4ea4\u4e92\u65f6\uff0c\u90fd\u662f\u76f4\u63a5\u548cActivity\u6253\u4ea4\u9053\u3002 \u4f20\u7edf\u684c\u9762\u7684\u5e94\u7528\u4e0e\u7528\u6237\u4e92\u52a8\u5f80\u5f80\u662f\u901a\u8fc7\u552f\u4e00\u7684\u5165\u53e3\uff0c\u79fb\u52a8\u7aef\u4ea4\u4e92\u5219\u4e0d\u540c\uff0c\u4ece\u4e00\u4e2a\u5e94\u7528\u4e2d\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u8fdb\u5230\u53e6\u4e00\u4e2a\u5e94\u7528\u7684\u4efb\u4f55\u4e00\u4e2a\u9875\u9762\u800c\u65e0\u9700\u542f\u52a8\u6574\u4e2a\u5e94\u7528\uff0c\u8fd9\u4e2a\u6253\u5f00\u7684\u9875\u9762\u5c31\u662f\u4e00\u4e2a\u5355\u72ec\u7684Activity\u3002 \u4e00\u4e2a\u5e94\u7528\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2aActivity\uff0c\u8fd9\u4e9bActivity\u90fd\u9700\u8981\u5728AndroidManifest\u6587\u4ef6\u4e2d\u6ce8\u518c\uff0c\u591a\u4e2aActivity\u534f\u540c\u5de5\u4f5c\u5171\u540c\u5b8c\u6210\u548c\u7528\u6237\u7684\u4ea4\u4e92\uff0c\u4f46\u662f\u4e0d\u540c\u7684Activity\u4e4b\u95f4\u4e5f\u5177\u6709\u6781\u5f31\u7684\u5173\u8054\u5173\u7cfb\u3002\u4e0d\u540c\u7684Activity\u901a\u8fc7Intent\u4ea4\u4e92\uff0c\u4ece\u4e00\u4e2aActivity\u542f\u52a8\u53e6\u4e00\u4e2aActivity\uff0c\u53ea\u9700\u8981\u901a\u8fc7Intent\u4f20\u5165\u7c7b\u540d\u5373\u53ef\uff0c\u751a\u81f3\u9690\u5f0f\u542f\u52a8Activity\u65f6\uff0c\u7c7b\u540d\u4e5f\u4e0d\u9700\u8981\u3002","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"pages/android/1-basic/01-Activity/#_2","text":"","title":"\u751f\u547d\u5468\u671f"},{"location":"pages/android/1-basic/01-Activity/#_3","text":"onCreate onCreate\u662f\u751f\u547d\u5468\u671f\u7684\u7b2c\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6bcf\u4e2aActivity\u5bf9\u8c61\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21onCreate\uff0c\u4e00\u822c\u4f1a\u5728onCreate\u4e2d\u505a\u4e00\u4e9b\u521d\u59cb\u5316\u76f8\u5173\u7684\u5de5\u4f5c\u3002 onCreate\u53c2\u6570\u4e2d\u6709\u4e00\u4e2aBundle\u53c2\u6570\uff0c\u5982\u679cActivity\u662f\u88ab\u9500\u6bc1\u91cd\u5efa\u7684\uff0c\u5219Bundle\u4e2d\u4f1a\u5b58\u6709\u4e00\u4e9b\u4e0a\u6b21\u88ab\u9500\u6bc1\u65f6\u7684\u6570\u636e\uff0c\u91cd\u5efa\u65f6\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u6570\u636e\u505a\u4e00\u4e9b\u6062\u590d\u5de5\u4f5c\u3002 onStart onStart\u662f\u7528\u6237\u5373\u5c06\u8fdb\u5165\u524d\u53f0\u65f6\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u6b64\u65f6Activity\u5df2\u7ecf\u5bf9\u7528\u6237\u53ef\u89c1\u4e86\uff0c\u4f46\u662f\u8fd8\u4e0d\u80fd\u4ea4\u4e92\u3002onStart\u4f1a\u5feb\u901f\u7684\u8d70\u5b8c\uff0c\u63a5\u7740\u9a6c\u4e0a\u8d70onResume\uff0cActivity\u4e0d\u4f1a\u4e00\u76f4\u505c\u5728onStart\u4e0d\u52a8\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u5728onStart\u4e2d\u505a\u7279\u522b\u8017\u65f6\u7684\u64cd\u4f5c\u3002 onResume \u8d70\u5230onResume\u65f6\uff0cActivity\u624d\u771f\u6b63\u7684\u5b8c\u5168\u5904\u4e8e\u524d\u53f0\uff0c\u6b64\u65f6\u7528\u6237\u5c31\u53ef\u4ee5\u548c\u5e94\u7528\u4ea4\u4e92\u4e86\uff0c\u5982\u679c\u7528\u6237\u4e00\u76f4\u4e0d\u4ea4\u4e92\uff0cActivity\u4f1a\u4e00\u76f4\u505c\u7559\u5728onResume\u7684\u72b6\u6001\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cAndroid 7.0\u4e4b\u540e\uff0c\u5728\u591a\u7a97\u53e3\u6a21\u5f0f\u4e0b\uff0c\u53ea\u6709\u83b7\u53d6\u5230\u7126\u70b9\u7684Activity\u624d\u662fonResume\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u5373\u4f7f\u5f53\u524d\u7684Activity\u662f\u5b8c\u5168\u53ef\u89c1\u7684\uff0c\u6ca1\u6709\u7126\u70b9\u65f6\u4e5f\u5904\u4e8eonPause\u72b6\u6001\u3002\u4f46\u662f\u5728\u4e00\u4e9b\u6298\u53e0\u5c4f\u624b\u673a\u4e0a\uff0c\u4f1a\u6709\u591a\u4e2aActivity\u90fd\u5904\u4e8eonResume\u7684\u72b6\u6001\uff0c\u53ea\u662f\u5176\u4e2d\u53ea\u6709\u4e00\u4e2aActivity\u6709\u7126\u70b9\u3002 onPause onPause\u6807\u5fd7\u7740Activity\u8fdb\u5165\u4e86\u540e\u53f0\uff0c\u548conStart\u4e00\u6837\uff0c\u6b64\u65f6\u4e5f\u4e0d\u80fd\u548c\u7528\u6237\u4ea4\u4e92\u3002\u5728onPause\u4e2d\u4e00\u822c\u7528\u6765\u505a\u4e00\u4e9b\u8f7b\u91cf\u7ea7\u8d44\u6e90\u56de\u6536\u5de5\u4f5c\uff0c\u6bd4\u5982\u91ca\u653e\u7cfb\u7edf\u8d44\u6e90\uff0c\u91ca\u653e\u4f20\u611f\u5668\u8d44\u6e90\u7b49\u3002 \u5982\u679c\u542f\u52a8\u53e6\u4e00\u4e2aActivity\uff0conPause\u6267\u884c\u5b8c\u4e86\u4e4b\u540e\u624d\u4f1a\u6267\u884c\u4e0b\u4e2aActivity\u7684onResume\uff0c\u6240\u4ee5\u4e00\u822c\u4e5f\u4e0d\u5e94\u8be5\u5728onPause\u4e2d\u6267\u884c\u7279\u522b\u8017\u65f6\u7684\u64cd\u4f5c\u3002 \u548conStart\u7a0d\u6709\u533a\u522b\u7684\u662f\uff0c\u5728\u591a\u7a97\u53e3\u6a21\u5f0f\u4e0b\uff0c\u6216\u8005Activity\u4e0a\u76d6\u4e86\u4e00\u4e2a\u900f\u660e\u4e3b\u9898\u7684Activity\u3001\u6216\u8005\u8986\u76d6\u4e86\u4e00\u4e2aDialog\uff0cActivity\u5728\u8d70\u5b8conPause\u4e4b\u540e\uff0c\u662f\u4e0d\u4f1a\u8d70onStop\u7684\u3002 onStop onStop\u65f6\uff0cActivity\u5bf9\u7528\u6237\u5c31\u5df2\u7ecf\u4e0d\u53ef\u89c1\u4e86\uff0c\u5df2\u7ecf\u5b8c\u5168\u8fdb\u5165\u540e\u53f0\u4e86\u3002\u5728onStop\u65f6\uff0c\u5e94\u5f53\u91ca\u653e\u4e00\u4e9b\u5bf9\u7528\u6237\u4e0d\u53ef\u89c1\u65f6\u65e0\u7528\u7684\u8d44\u6e90\uff0c\u6bd4\u5982\u505c\u6b62\u52a8\u753b\uff0c\u5c06\u7cbe\u786e\u5b9a\u4f4d\u5207\u6362\u6210\u7c97\u7565\u5b9a\u4f4d\u3002\u5728onStop\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u6267\u884c\u4e00\u4e9bCPU\u5bc6\u96c6\u578b\u7684\u5173\u95ed\u64cd\u4f5c\uff0c\u5982\u8bfb\u5199\u6570\u636e\u5e93\u3002 onDestroy onDestroy\u662fActivity\u88ab\u9500\u6bc1\u65f6\u6267\u884c\u7684\u751f\u547d\u5468\u671f\u65b9\u6cd5\uff0c\u4e0d\u8bba\u662f\u4e3b\u52a8\u7ed3\u675fActivity\u8fd8\u662f\u5f02\u5e38\u60c5\u51b5\u4e0bActivity\u88ab\u9500\u6bc1\uff0c\u90fd\u4f1a\u8d70\u5230\u8fd9\u4e2a\u65b9\u6cd5\u3002 onRestart \u5f53\u4eceActivity\u79bb\u5f00\uff0c\u8d70\u5b8conStop\u540e\uff0c\u5982\u679c\u518d\u6b21\u8fd4\u56de\u5230\u5f53\u524dActivity\uff0c\u5219\u4f1a\u8d70\u5230onRestart\u3002","title":"\u6b63\u5e38\u751f\u547d\u5468\u671f"},{"location":"pages/android/1-basic/01-Activity/#_4","text":"\ud83c\udf30\ud83c\udf30\ud83c\udf30\uff1aonPause\u548conStop\u4e0d\u6267\u884c \u5982\u679c\u5728onStart\u4e2d\u76f4\u63a5\u8c03\u7528finish()\u65b9\u6cd5\uff0c\u7531\u4e8eActivity\u8fd8\u6ca1\u5230\u524d\u53f0\uff0conPause\u548conStop\u4e5f\u5c31\u4e0d\u4f1a\u6267\u884c\u3002 \ud83c\udf30\ud83c\udf30\ud83c\udf30\uff1aonDestroy\u65b9\u6cd5\u4e0d\u6267\u884c \u4e00\u822c\u60c5\u51b5\u4e0b\uff0conDestroy\u65b9\u6cd5\u90fd\u662f\u4f1a\u6267\u884c\u7684\uff0c\u4f46\u662f\u5f53\u4efb\u52a1\u6808\u4e2d\u5b58\u5728\u591a\u4e2a\u672a\u9500\u6bc1\u7684Activity\u65f6\uff0c\u901a\u8fc7\u6700\u8fd1\u4efb\u52a1\u6740\u6b7b\u8fdb\u7a0b\uff0c\u53ea\u6709\u5904\u4e8e\u6808\u9876\u7684Activity\u624d\u4f1a\u8d70onDestroy\u65b9\u6cd5\u3002 \ud83c\udf30\ud83c\udf30\ud83c\udf30\uff1a \u4e3b\u52a8finishActivity\uff0c10s\u4e4b\u540e\u624d\u6267\u884conDestroy \u8c03\u7528finish()\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u89e6\u53d1Activity\u7684onDestry()\uff0c\u4f46\u662f\u8c03\u7528finish()\u4e4b\u540e\uff0c\u53ea\u662f\u5148\u4e3b\u7ebf\u7a0b\u7684\u6d88\u606f\u961f\u5217\u53d1\u9001\u4e00\u6761\u9500\u6bc1Activity\u7684\u6d88\u606f\uff0c\u56e0\u6b64\u4e0d\u4f1a\u9a6c\u4e0a\u89e6\u53d1onDestroy()\u3002\u6bd4\u5982\u6709\u573a\u666f\uff0c\u4eceActivityA\u542f\u52a8ActivityB\uff0c\u5e76\u540c\u65f6finish()\u6389ActivityA\uff0c\u540c\u65f6ActivityB\u4e2d\u901a\u8fc7Handler post\u6d88\u606f\u6301\u7eed\u64ad\u653e\u52a8\u753b\uff0c\u6b64\u65f6\u7531\u4e8e\u6d88\u606f\u961f\u5217\u4e00\u76f4\u5728\u5904\u7406\u524d\u53f0\u7684ActivityB\u7684\u6d88\u606f\uff0c\u4f1a\u5bfc\u81f4\u5904\u4e8e\u540e\u53f0\u7684ActivityA\u7684\u9500\u6bc1\u7684\u6d88\u606f\u4e00\u76f4\u7b49\u4e0d\u5230\u6267\u884c\u7684\u673a\u4f1a\uff0c\u4f46\u662f\u7cfb\u7edf\u5e76\u4e0d\u4f1a\u8ba9\u540e\u53f0\u7684Activity\u4e00\u76f4\u4e0d\u9500\u6bc1\uff0c\u5360\u7528\u7cfb\u7edf\u8d44\u6e90\uff0c\u56e0\u6b64\u6709\u4e00\u4e2a\u515c\u5e95\u768410s\u65f6\u95f4\uff0c\u8d85\u65f6\u540e\u5373\u4f1a\u9500\u6bc1\u3002\u540c\u6837\u7684\uff0c\u5982\u679cActivity\u7684\u8f6c\u573a\u52a8\u753b\u65f6\u95f4\u5f88\u957f\uff0c\u4e5f\u540c\u6837\u6709\u673a\u4f1a\u89e6\u53d1\u8d85\u65f6\u3002","title":"\u5f02\u5e38\u751f\u547d\u5468\u671f"},{"location":"pages/android/1-basic/01-Activity/#_5","text":"\u4e00\u822cActivity\u57282\u5927\u7c7b\u573a\u666f\u4e0b\u9700\u8981\u8fdb\u884c\u72b6\u6001\u7684\u4fdd\u5b58\u4e0e\u6062\u590d\uff0c\u5185\u5b58\u4e0d\u8db3\u5bfc\u81f4Activity\u88ab\u6740\u6b7b\u548c\u914d\u7f6e\u53d8\u5316\u5bfc\u81f4\u7684Activity\u91cd\u5efa\u3002 \u72b6\u6001\u4fdd\u5b58 Activity\u4e2d\u63d0\u4f9b\u4e86onSaveInstanceState()\u65b9\u6cd5\u6765\u4fdd\u5b58\u72b6\u6001\uff0c\u8be5\u65b9\u6cd5\u5728onStop\u4e4b\u524d\u8c03\u7528\uff0c\u5c06\u9700\u8981\u4fdd\u5b58\u7684\u6570\u636e\u5199\u5165bundle\u4e2d\uff0c\u65e2\u53ef\u5b8c\u6210\u6570\u636e\u7684\u4fdd\u5b58\u3002 \u5728API 21\u4e4b\u540e\uff0cActivity\u7684onSaveInstanceState()\u589e\u52a0\u4e86\u4e00\u4e2a\u91cd\u8f7d\u7684\u65b9\u6cd5\uff1a public void onSaveInstanceState ( @NonNull Bundle outState , @NonNull PersistableBundle outPersistentState ) { onSaveInstanceState ( outState ); } \u5728\u6e05\u5355\u6587\u4ef6\u4e2d\u5bf9Activity\u589e\u52a0\u5c5e\u6027 android:persistableMode=\"persistAcrossReboots\" \u4e4b\u540e\uff0cActivity\u5177\u6709\u4e86\u6301\u4e45\u5316\u4fdd\u5b58\u6570\u636e\u7684\u80fd\u529b\uff0c\u8bbe\u5907\u91cd\u542f\u4e4b\u540e\u9996\u6b21\u518d\u6253\u5f00Activity\uff0c\u88ab\u6301\u4e45\u5316\u7684\u53c2\u6570\u5c31\u4f20\u5230onCreate\u65b9\u6cd5\u7684Bundle\u53c2\u6570\u4e2d\u3002 Activity\u7684onSaveInstanceState\u65b9\u6cd5\u4e2d\uff0c\u4f7f\u7528\u59d4\u6258\u7684\u65b9\u5f0f\uff0c\u901a\u8fc7\u8c03\u7528Window\u7684 saveHierarchyState \u65b9\u6cd5\u4fdd\u5b58\u89c6\u56fe\u7ed3\u6784\uff0c\u8fd9\u91cc\u7684Window\u901a\u5e38\u662fPhoneWindow\uff0cPhoneWindow\u53c8\u7ee7\u7eed\u8c03\u7528\u5176ContentView\u7684 saveHierarchyState \u65b9\u6cd5\u6765\u59d4\u6258\u5176\u5b50View\u4fdd\u5b58\u5176\u72b6\u6001\u3002\u5b50View\u5982\u9700\u4fdd\u5b58\u5176\u72b6\u6001\uff0c\u5fc5\u987b\u8981\u6709id\uff0c\u4e14\u5fc5\u987b\u8bbe\u7f6e\u5c5e\u6027 android:=android:saveEnabled=\"true\" \u3002 \u72b6\u6001\u6062\u590d \u72b6\u6001\u6062\u590d\u7684\u65b9\u6cd5\u67092\u4e2a\uff0c\u4e00\u4e2a\u662fonCreate\u65b9\u6cd5\uff0c\u4e00\u4e2a\u662fonRestoreInstanceState\u3002 onCreate\u65b9\u6cd5\u7684\u53c2\u6570\u4e2d\u6709\u4e00\u4e2aBundle\u65b9\u6cd5\uff0cBundle\u975e\u7a7a\u65f6\uff0c\u53ef\u4ee5\u5229\u7528Bundle\u4e2d\u7684\u6570\u636e\u6062\u590d\u72b6\u6001\u3002 onSaveInstanceState\u65b9\u6cd5\u5728onCreate\u65b9\u6cd5\u4e4b\u540e\u8c03\u7528\uff0c\u53c2\u6570\u4e5f\u662f\u4e00\u4e2aBundle\u53c2\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u5176\u6062\u590d\u72b6\u6001\u3002","title":"\u72b6\u6001\u4fdd\u5b58\u4e0e\u6062\u590d"},{"location":"pages/android/1-basic/01-Activity/#activity_1","text":"\u5f53\u7cfb\u7edf\u5185\u5b58\u4e0d\u8db3\u65f6\uff0c\u4f1a\u6740\u6b7b\u4e00\u4e9b\u8fdb\u7a0b\u6765\u91ca\u653e\u8d44\u6e90\uff0c\u8fdb\u7a0b\u88ab\u6740\u6b7b\u7684\u4f18\u5148\u7ea7\u8ddf\u5f53\u524d\u8fdb\u7a0b\u7684\u524d\u540e\u53f0\u72b6\u6001\u6709\u5173\u3002 \u7cfb\u7edf\u6740\u8fdb\u7a0b\u53ef\u80fd\u6027 \u8fdb\u7a0b\u72b6\u6001 Activity\u72b6\u6001 \u5c0f \u524d\u53f0\uff08\u6709\u7126\u70b9\u6216\u5373\u5c06\u83b7\u53d6\u7126\u70b9\uff09 onCreate\u3001onStart\u3001onResume \u5927 \u540e\u53f0\uff08\u5373\u5c06\u5931\u53bb\u7126\u70b9\uff09 onPause \u6700\u5927 \u540e\u53f0\uff08\u5931\u53bb\u7126\u70b9\uff09 onStop \u6700\u5927 \u7a7a onDestroy","title":"\u5185\u5b58\u4e0d\u8db3Activity\u88ab\u6740\u6b7b"},{"location":"pages/android/1-basic/01-Activity/#activity_2","text":"\u5f53\u914d\u7f6e\u53d1\u751f\u53d8\u66f4\u65f6\uff0cActivity\u4f1a\u88ab\u9500\u6bc1\u4e4b\u540e\u91cd\u65b0\u521b\u5efa\u3002\u5e38\u89c1\u7684\u4f1a\u89e6\u53d1\u914d\u7f6e\u53d8\u66f4\u7684\u884c\u4e3a\u5305\u62ec\uff1a\u6a2a\u7ad6\u5c4f\u5207\u6362\u3001\u8bed\u8a00\u6216\u8f93\u5165\u8bbe\u5907\u53d1\u751f\u53d8\u5316\u3002\u914d\u7f6e\u53d8\u66f4\u65f6\u4f1a\u56de\u8c03onConfigurationChanged\u65b9\u6cd5\uff0c\u4e5f\u4f1a\u8c03\u7528onSaveInstanceState\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u5bf9\u5e94\u7684\u65b9\u6cd5\u4e2d\u4fdd\u5b58\u72b6\u6001\u3002 \u914d\u7f6e android:configChanges=\"\" \u53ef\u4ee5\u8ba9\u914d\u7f6e\u6539\u53d8\u7684\u65f6\u5019\u4e0d\u91cd\u542fActivity","title":"\u914d\u7f6e\u53d8\u5316\u5bfc\u81f4Activity\u91cd\u5efa"},{"location":"pages/android/1-basic/01-Activity/#_6","text":"","title":"\u4efb\u52a1\u6808"},{"location":"pages/android/1-basic/01-Activity/#_7","text":"\u8bbe\u7f6eActivity\u7684\u542f\u52a8\u6a21\u5f0f\u6709\u79cd\u65b9\u5f0f\uff0c\u901a\u8fc7\u6e05\u5355\u6587\u4ef6\u8bbe\u7f6e\u6216\u8005\u5728Intent\u4e2d\u8bbe\u7f6eFLAG\u6807\u8bb0\u3002 \u4f7f\u7528\u6e05\u5355\u6587\u4ef6 stardard \u6807\u51c6\u6a21\u5f0f\uff0c\u6bcf\u6b21\u542f\u52a8\u5747\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Activity\u5b9e\u4f8b; singleTop \u6808\u9876\u590d\u7528\uff0c\u8981\u542f\u52a8\u7684Activity\u5728\u6808\u9876\u65f6\u590d\u7528Activity\u5b9e\u4f8b\uff0c\u540c\u65f6\u8c03\u7528onNewIntent()\u65b9\u6cd5\uff0c\u5426\u5219\u548c\u6807\u51c6\u6a21\u5f0f\u4e00\u6837\uff1b singleTask \u6808\u5185\u590d\u7528\uff0c\u5728\u8981\u542f\u52a8\u7684\u4efb\u52a1\u6808\u4e2d\u6709Activity\u7684\u5b9e\u4f8b\u5c31\u590d\u7528\uff0c\u540c\u65f6\u8c03\u7528onNewIntent()\u65b9\u6cd5\uff0c\u5982\u679c\u542f\u52a8\u7684\u4efb\u52a1\u6808\u4e2d\u4e0d\u5b58\u5728Activity\u5b9e\u4f8b\uff0c\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4efb\u52a1\u6808\uff0c\u5e76\u521b\u5efaActivity\u7684\u5b9e\u4f8b\u3002\u8fd9\u79cd\u6a21\u5f0f\u542f\u52a8Activity\u81ea\u5e26CLEAR_TOP\u7684\u7279\u6027\uff0c\u4f1a\u5c06\u8fd9\u4e2aActivity\u4e4b\u4e0a\u7684Activity\u90fd\u51fa\u6808\uff1b singleInstance \u5355\u4f8b\u6a21\u5f0f\uff0c\u72ec\u4eab\u4e00\u4e2a\u4efb\u52a1\u6808 \u4f7f\u7528Intent\u6807\u8bb0 FLAG_ACTIVITY_NEW_TASK \u867d\u7136\u540d\u5b57\u53ebNEW_TASK\uff0c\u4f46\u662f\u548c\u6e05\u5355\u6587\u4ef6\u4e2d\u914d\u7f6esingleTask\u6548\u679c\u662f\u4e00\u6837\u7684\u3002 FLAG_ACTIVITY_SINGLE_TOP \u6548\u679c\u548c\u6e05\u5355\u6587\u4ef6\u4e2d\u914d\u7f6esingleTop\u6548\u679c\u4e00\u6837\u3002 FLAG_ACTIVITY_CLEAR_TOP \u6e05\u5355\u6587\u4ef6\u4e2dlanchMode\u6ca1\u6709\u4e0e\u4e4b\u5339\u914d\u7684\u6a21\u5f0f\u3002\u5982\u679c\u542f\u52a8\u7684Activity\u5728\u6808\u5185\u4f46\u4e0d\u5728\u6808\u9876\uff0c\u4f1a\u6e05\u7a7a\u5176\u4e0a\u65b9\u7684Activity\uff0c\u4e0d\u4f1a\u521b\u5efa\u65b0\u5b9e\u4f8b\uff0c\u4f46\u4f1a\u8c03\u7528onNewIntent()\u65b9\u6cd5\u3002","title":"\u542f\u52a8\u6a21\u5f0f"},{"location":"pages/android/1-basic/01-Activity/#_8","text":"\u6e05\u5355\u6587\u4ef6\u4e2d\u8bbe\u7f6etaskAffinity\uff0c\u53ef\u4ee5\u6307\u5b9a\u8981\u542f\u52a8\u7684Activity\u7684\u4efb\u52a1\u6808\uff0c\u9ed8\u8ba4\u548c\u5305\u540d\u4e00\u6837; \u6e05\u5355\u6587\u4ef6\u4e2d\u8fd8\u6709\u4e00\u4e2a\u5c5e\u6027allTaskReparenting\uff0c\u5f53\u8bbe\u7f6e\u8be5\u5c5e\u6027\u65f6\uff0cActivity\u53ef\u4ee5\u4ece\u4e00\u4e2a\u4efb\u52a1\u6808\u4e2d\u79fb\u5230\u53e6\u4e00\u4e2a\u4efb\u52a1\u6808\u4e2d\u3002 \u901a\u8fc7adb\u547d\u4ee4\u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u7684\u4efb\u52a1\u6808\uff1a adb shell dumpsys activity activities \u5728\u4ee3\u7801\u4e2d\uff0c\u53ef\u4ee5\u8c03\u7528 activityManager.getRunningTasks \u53ef\u4ee5\u83b7\u53d6\u4efb\u52a1\u6808\u3002","title":"\u4efb\u52a1\u6808\u7684\u8bbe\u7f6e"},{"location":"pages/android/1-basic/01-Activity/#_9","text":"\u542f\u52a8Activity\u7684\u65b9\u5f0f\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u901a\u8fc7\u9690\u5f0fIntent\u542f\u52a8\uff0c\u5373\u542f\u52a8\u65f6\u6307\u5b9auri\u3001action\u3001category\uff0c\u5339\u914d\u89c4\u5219\u5339\u914d\u4e0a\u5373\u53ef\u542f\u52a8\u542f\u52a8\uff0c\u53e6\u4e00\u79cd\u662f\u901a\u8fc7\u5728Intent\u4e2d\u663e\u5f0f\u6307\u5b9aActivity\u7684class\uff0c\u5305\u540d\u7b49\u4fe1\u606f\u76f4\u63a5\u542f\u52a8\u6307\u5b9a\u7684Activity\u3002","title":"\u9875\u9762\u5bfc\u822a"},{"location":"pages/android/1-basic/01-Activity/#_10","text":"Activity\u652f\u6301\u9690\u5f0f\u542f\u52a8\u5fc5\u987b\u5728\u6e05\u5355\u6587\u4ef6\u4e2d\u901a\u8fc7IntentFilter\u914d\u7f6e\u5339\u914d\u89c4\u5219\uff0c\u4e00\u4e2aActivity\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2aIntentFilter\uff0c\u53ea\u8981\u5176\u4e2d\u4e00\u4e2a\u80fd\u5339\u914d\u4e0a\uff0c\u5c31\u53ef\u4ee5\u542f\u52a8\u8be5Activity\u3002\u5339\u914d\u89c4\u5219\u5305\u62ec\uff1a action Action\u6307\u5b9a\u4e86\u64cd\u4f5c\u884c\u4e3a\uff0cIntent\u4e2d\u6709\u4e00\u4e9b\u9ed8\u8ba4\u7684\u884c\u4e3a\uff0c\u6bd4\u5982android.intent.ACTION_VIEW\u3002IntentFIlter\u4e2d\u914d\u7f6e\u4e86\u591a\u4e2aaction\u65f6\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u5339\u914d\u4e0a\u5c31\u53ef\u4ee5\u5339\u914d\u6210\u529f\u3002 category: \u53ef\u4ee5\u6ca1\u6709\uff0c\u4e00\u65e6\u6307\u5b9a\uff0c\u5fc5\u987b\u5b8c\u5168\u5339\u914d\u3002\u6ca1\u6709\u58f0\u660ecategory\u65f6\uff0c\u542f\u52a8Activity\uff0c\u7cfb\u7edf\u4e00\u822c\u4f1a\u6307\u5b9a\u4e00\u4e2a\u9ed8\u8ba4\u7684category\uff0candroid.intent.category.DEFAULT\u3002 data: datta\u548caction\u7684\u5339\u914d\u89c4\u5219\u4e00\u6837\u3002data\u4e2d\u53ef\u4ee5\u6307\u5b9a\u542f\u52a8\u7684uri\u5339\u914d\u89c4\u5219\uff0c\u4ee5\u53camineType\u3002","title":"\u9690\u5f0f\u542f\u52a8"},{"location":"pages/android/1-basic/01-Activity/#activity_3","text":"\u53c2\u8003 Activity\u542f\u52a8\u6d41\u7a0b\u6e90\u7801","title":"Activity\u7684\u542f\u52a8\u6d41\u7a0b"},{"location":"pages/android/1-basic/01-Activity/#_11","text":"Android developers -- Activity Activity\u4e0e\u542f\u52a8\u65b9\u5f0f\u8be6\u89e3","title":"\u53c2\u8003"},{"location":"pages/android/1-basic/02-Service/","text":"Service \u6982\u5ff5 Service\u662f\u4e00\u79cd\u53ef\u4ee5\u5728\u540e\u53f0\u957f\u65f6\u95f4\u8fd0\u884c\u800c\u4e0d\u63d0\u4f9b\u7528\u6237\u754c\u9762\u7684\u7ec4\u4ef6\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u7684\u7ec4\u4ef6\u542f\u52a8\uff0c\u5f53\u5207\u6362\u5230\u5176\u4ed6\u5e94\u7528\u4e4b\u540e\uff0cService\u8fd8\u53ef\u4ee5\u5728\u540e\u53f0\u8fd0\u884c\u3002 \u4f7f\u7528 \u76f4\u63a5\u7ee7\u627fService\u6216\u8005IntentService\uff1b \u5728AndroidManifest.xml\u6587\u4ef6\u4e2d\u58f0\u660e\u81ea\u5b9a\u4e49\u7684Service\uff1b \u7ec4\u4ef6\u901a\u8fc7context.startService()\u3001context.startForegroundService()\u6216\u8005context.bindService()\u542f\u52a8Service\uff0c\u533a\u522b\u5728\u4e8estartService()\u542f\u52a8\u7684Service\u751f\u547d\u5468\u671f\u4e0e\u542f\u52a8\u7684\u7ec4\u4ef6\u65e0\u5173\uff0cbindService()\u542f\u52a8\u7684Service\u751f\u547d\u5468\u671f\u4e0e\u542f\u52a8\u5176\u7684\u7ec4\u4ef6\u4e00\u81f4\uff1b \u82e5\u901a\u8fc7startService()\u542f\u52a8\uff0c\u4f1a\u8c03\u7528onStartCommand()\uff0c\u82e5\u901a\u8fc7bindService()\u542f\u52a8\uff0c\u5219\u4f1a\u8c03\u7528onBind()\uff0c\u5728\u5bf9\u5e94\u7684\u65b9\u6cd5\u4e2d\u5904\u7406\uff1b \u4e3b\u52a8\u8c03\u7528stopSelf()\u505c\u6b62Service\uff0c\u7ed1\u5b9a\u670d\u52a1\u9700\u8981\u5148\u8c03\u7528context.unbindService()\u89e3\u7ed1\u3002 \u4f7f\u7528Tips: \u8c03\u7528startService()\u542f\u52a8\uff0c\u5982\u679c\u53d1\u73b0service\u5df2\u7ecf\u5b58\u5728\u4e86\uff0c\u4f1a\u76f4\u63a5\u8d70\u5230onStatCommand()\u65b9\u6cd5\u4e2d\uff0c\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684startId\u6765\u505a\u4e0d\u540c\u7684\u64cd\u4f5c\uff1b Android 5.0(API 21)\u4e4b\u540e\uff0c\u901a\u8fc7\u9690\u5f0fIntent\u542f\u52a8Service\u4f1a\u76f4\u63a5\u629b\u5f02\u5e38\uff1b \u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684Service\u90fd\u53ef\u4ee5\u5728\u7cfb\u7edf\u8bbe\u7f6e\u4e2d\u88ab\u770b\u5230\uff0c\u7528\u6237\u53ef\u4ee5\u5f3a\u6740\uff0c\u56e0\u6b64\u6709\u5fc5\u8981\u5728AndroidManifest.xml\u4e2d\u58f0\u660eService\u65f6\u6307\u5b9adescription\uff0c\u544a\u8bc9\u7528\u6237\u6b64Service\u7684\u4f5c\u7528\uff1b \u9664\u4e86\u8c03\u7528context.stopService()\u5916\uff0c\u7528context.startService()\u6307\u5b9a\u7279\u5b9a\u7684startId\uff0c\u5728Service\u4e2d\u8c03\u7528stopSelf()\u4e5f\u53ef\u4ee5\u7ed3\u675fService(); \u9ed8\u8ba4\u60c5\u51b5\u4e0bService\u8fd0\u884c\u5728\u4e3b\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u8fdb\u884cUI\u64cd\u4f5c\uff0c\u6bd4\u5982\u53ef\u4ee5\u5f39Toast\uff0c\u66f4\u65b0\u901a\u77e5\u680f\u3002 Service\u4e0e\u7ebf\u7a0b\u7684\u533a\u522b Service\u662fAndroid\u7684\u56db\u5927\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u9664\u4e86\u53ef\u4ee5\u5904\u7406\u4e00\u822c\u7684\u6ca1\u6709\u754c\u9762\u7684\u4efb\u52a1\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u8de8\u8fdb\u7a0b\u901a\u4fe1(AIDL)\uff0c\u56e0\u6b64Service\u65e2\u53ef\u4ee5\u8fd0\u884c\u5728\u5f53\u524d\u8fdb\u7a0b\u4e2d\uff0c\u4e5f\u6709\u53ef\u80fd\u88ab\u5176\u4ed6\u7684\u8fdb\u7a0b\u542f\u52a8\uff1b \u542f\u52a8Service\u4e4b\u540e\uff0c\u5b9e\u9645\u4e0a\u662f\u8fd0\u884c\u5728\u4e3b\u7ebf\u7a0b\u4e0a\u7684\uff08IntentService\u662f\u7279\u6b8a\u5904\u7406\uff0c\u81ea\u5df1\u5207\u6362\u5230\u5b50\u7ebf\u7a0b\u7684\uff09\uff0c\u56e0\u6b64\u9700\u8981\u6ce8\u610f\u907f\u514dANR\uff0cService\u4e2d20s\u8fd8\u6ca1\u6709\u54cd\u5e94\u5c31\u4f1a\u51fa\u73b0ANR\uff1b Service\u6709\u81ea\u5df1\u7684\u7279\u6709\u751f\u547d\u5468\u671f\uff0c\u7ebf\u7a0b\u6ca1\u6709\uff1b \u5982\u679crun\u65b9\u6cd5\u6ca1\u6267\u884c\u5b8c\uff0c\u7ebf\u7a0b\u53ef\u4ee5\u5728\u5176\u6240\u5728\u7684\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u7ed3\u675f\u540e\u7ee7\u7eed\u5b58\u5728\uff0c\u4f7f\u7528\u4e0d\u614e\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u542f\u52a8Service\u7684\u4e24\u79cd\u65b9\u5f0f startService \u4f7f\u7528context.startService()\u6216\u8005context.startFrogoundService()\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2aService\uff0c\u542f\u52a8\u4e4b\u540e\uff0cService\u7684\u751f\u547d\u5468\u671f\u5c31\u548c\u542f\u52a8\u5b83\u7684\u7ec4\u4ef6\u65e0\u5173\u4e86\uff0c\u5373\u4f7f\u542f\u52a8\u5b83\u7684\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u7ed3\u675f\u4e86\uff0cService\u4e5f\u8fd8\u662f\u5b58\u5728\u3002IntentService\u662f\u81ea\u5df1\u8c03\u7528stopSelf()\u6765\u7ed3\u675f\u7684\u3002 Service\u542f\u52a8\u4e4b\u540e\uff0c\u9ed8\u8ba4\u8fd0\u884c\u5728\u4e3b\u7ebf\u7a0b\u4e2d\uff0c\u5728onStartCommand()\u4e2d\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684startId\u8fdb\u884c\u4e0d\u540c\u7684\u64cd\u4f5c\u3002\u5982\u679c\u542f\u52a8\u7684\u662fIntentService\uff0c\u5728onHandleIntent()\u4e2d\u8fdb\u884c\u64cd\u4f5c\u3002 onStartCommand()\u7684\u8fd4\u56de\u503c\u4e0d\u540c\u53ef\u4ee5\u51b3\u5b9a\u5982\u4f55\u5728\u7cfb\u7edf\u7ed3\u675fService\u4e4b\u540e\uff0c\u7ee7\u7eed\u8fd0\u884cService\uff1a START_NOT_STICKY \u7ed3\u675fService\u4e4b\u540e\u4e0d\u4f1a\u91cd\u5efa\uff1b START_STICKY \u7ed3\u675fService\u4e4b\u540e\uff0c\u4f1a\u91cd\u5efa\u5e76\u8c03\u7528onStartCommand\uff0c\u5982\u679c\u6709\u6302\u8d77Intent\uff0conStartCommand\u4e2d\u4f1a\u4f20\u9012\u8be5Intent\uff0c\u5426\u5219\u91cd\u542f\u65f6onStartCommand\u4e2d\u7684intent\u662f\u7a7a\u503c\u3002\u9002\u7528\u4e8e\u4e0d\u6267\u884c\u547d\u4ee4\uff0c\u7b49\u5f85\u547d\u4ee4\u6765\u65f6\u624d\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u64ad\u653e\u5668\u3002 START_REDELIVER_INTENT \u7ed3\u675fService\u4e4b\u540e\u4f1a\u91cd\u542f\uff0c\u5e76\u8c03\u7528onStartCommand()\uff0c\u4f20\u9012\u7684intent\u662f\u6700\u540e\u4e00\u6b21\u542f\u52a8Service\u7684Intent\u3002\u9002\u7528\u4e8e\u6267\u884c\u4efb\u52a1\u65f6\u9700\u8981\u7acb\u5373\u6062\u590d\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u6587\u4ef6\u4e0b\u8f7d\uff0c\u65ad\u70b9\u7eed\u4f20\u3002 Service\u7684\u4efb\u52a1\u5904\u7406\u5b8c\u4e4b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7stopSelf\u6765\u7ed3\u675f\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7context.stopService()\u6765\u7ed3\u675f\u3002 bindService context.startService()\u53ef\u4ee5\u542f\u52a8Service\uff0c\u542f\u52a8\u4e4b\u540e\uff0cService\u7684\u751f\u547d\u5468\u671f\u548c\u542f\u52a8\u5b83\u7684\u7ec4\u4ef6\u7ed1\u5b9a\uff0c\u542f\u52a8Service\u7684\u7ec4\u4ef6\u7ed3\u675f\u540e\uff0cService\u4e5f\u4f1a\u7ed3\u675f\u3002 \u591a\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u7ed1\u5b9a\u540c\u4e00\u4e2aService\uff0c\u5f53\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f\u90fd\u7ed3\u675f\u540e\uff0c\u88ab\u542f\u52a8\u7684Service\u7684\u751f\u547d\u5468\u671f\u624d\u4f1a\u7ed3\u675f\u3002 \u901a\u8fc7bindService()\u542f\u52a8\u7684Service\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u5b9e\u73b0onStartCommand()\u65b9\u6cd5\uff0c\u6839\u636e\u8fd4\u56de\u503c\uff0c\u5728\u6240\u6709\u7ec4\u4ef6\u89e3\u7ed1\u4e4b\u540e\uff0cService\u4f1a\u91cd\u542f\u3002 \u4f7f\u7528bindService\u542f\u52a8service\u4e4b\u540e\uff0c\u4e0d\u5141\u8bb8\u518d\u901a\u8fc7startService\u542f\u52a8\uff08todo\uff09\u3002 \u8fd9\u79cd\u65b9\u5f0f\u542f\u52a8\u7684Service\u591a\u7528\u4e8e\u8de8\u8fdb\u7a0b\u901a\u4fe1\uff0c\u6216\u8005\u662f\u4eceActivity\u4e2d\u542f\u52a8\u548cUI\u6709\u4ea4\u4e92\u3002\u751f\u547d\u5468\u671f\u4e2d\u7684onBind()\u4f1a\u8fd4\u56de\u4e00\u4e2aIBinder\uff0c\u5728bindService()\u7684\u53c2\u6570\u4e2d\u6709\u4e00\u4e2aServiceConnection\u63a5\u53e3\uff0c\u53ef\u4ee5\u83b7\u53d6\u5230\u8fd9\u4e2aIBinder\u63a5\u53e3\uff0c\u4ece\u800c\u8fdb\u884c\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u3002 \u751f\u547d\u5468\u671f \u51e0\u79cd\u4e0d\u540c\u7684Service \u524d\u53f0Service \u524d\u53f0Service\u53ef\u4ee5\u901a\u8fc7startService(int, Notification)\u542f\u52a8\uff0cService\u8fd0\u884c\u65f6\uff0c\u5fc5\u987b\u5728\u72b6\u6001\u680f\u663e\u793a\u901a\u77e5\uff0c\u505c\u6b62\u4f7f\u7528stopForground()\u3002 \u5982\u679ctargetSdkVersion\u662fAndroid 9 (API level 28) \uff0c\u542f\u52a8\u524d\u53f0Service\u5fc5\u987b\u5728AndroidManifest\u6587\u4ef6\u4e2d\u58f0\u660eFOREGROUND_SERVICE\u6743\u9650\uff0c\u5426\u8d77\u4f1a\u629bSecurityException\u3002 \u5982\u679ctargetSdkVersion\u662fAndroid 10(API level 29)\uff0c\u5728\u524d\u53f0Service\u4e2d\u8bbf\u95ee\u5b9a\u4f4d\u9700\u8981\u5728AndroidManifet.xml\u6587\u4ef6\u7684 \u6807\u7b7e\u4e2d\u52a0\u4e0a android:foregroundServiceType=\"location\" \uff0c\u6307\u5b9a\u524d\u53f0Service\u7c7b\u578b\u3002 \u5982\u679ctargetSdkVersion\u662fAndroid 11(API level 30)\uff0c\u5728\u524d\u53f0Service\u4e2d\u8bbf\u95ee\u76f8\u673a\u548c\u9ea6\u514b\u98ce\uff0cforegroundServiceType\u4e5f\u8981\u58f0\u660e camera \u548c microphone \u3002 \u5728Android 11\u4e0a\uff0c\u524d\u53f0Service\u6709\u4e00\u4e9b\u9650\u5236\uff0c\u5bf9\u4e8e\u4ece\u540e\u53f0\u542f\u52a8\u7684\u524d\u53f0Service\uff1a \u4ec5\u5f53\u7528\u6237\u8d4b\u4e88\u4e86 ACCESS_BACKGROUND_LOCATION \u6743\u9650\u65f6\uff0cService\u4e2d\u624d\u80fd\u83b7\u53d6\u5230\u5b9a\u4f4d\u4fe1\u606f\uff1b \u8bbf\u95ee\u4e0d\u4e86\u76f8\u673a\u548c\u9ea6\u514b\u98ce\uff1b \u5bf9\u4e8e\u4ece\u524d\u53f0\u542f\u52a8\u7684\u524d\u53f0Service\uff1a \u4ec5\u5f53\u7528\u6237\u8d4b\u4e88\u4e86 ACCESS_BACKGROUND_LOCATION \u6743\u9650\u65f6\uff0cService\u4e2d\u624d\u53ef\u4ee5\u4e00\u76f4\u83b7\u53d6\u5230\u5b9a\u4f4d\u4fe1\u606f\uff0c\u5426\u5219\u53ea\u6709\u5f53APP\u5728\u524d\u53f0\u65f6\u624d\u80fd\u83b7\u53d6\u5230\u5b9a\u4f4d\u4fe1\u606f\uff1b \u7528\u6237\u8d4b\u4e88\u4e86 CAMERA \u6743\u9650\uff0c\u624d\u53ef\u4ee5\u8bbf\u95ee\u76f8\u673a\uff1b \u7528\u6237\u8d4b\u4e88\u4e86 RECORD_AUDIO \u6743\u9650\uff0c\u624d\u53ef\u4ee5\u8bbf\u95ee\u9ea6\u514b\u98ce\uff1b \u540e\u53f0Service Android\u5b98\u7f51\u4e0a\u5e76\u6ca1\u5b9a\u4e49\u540e\u53f0Service\u7684\u6982\u5ff5\uff0c\u8fd9\u91cc\u7684\u540e\u53f0Service\u662f\u76f8\u5bf9\u524d\u53f0Service\u7684\uff0c\u5176\u7279\u70b9\u4f53\u73b0\u5728\uff1a startService()\u4e4b\u540e\uff0c\u9ed8\u8ba4\u8fd0\u884c\u5728\u4e3b\u7ebf\u7a0b\u4e0a\uff1b \u6ca1\u6709\u7528\u6237\u754c\u9762\uff0c\u9664\u975e\u5230\u8bbe\u7f6e\u91cc\u53bb\u770b\uff0c\u5426\u5219\u7528\u6237\u611f\u77e5\u4e0d\u5230Service\u7684\u5b58\u5728\uff1b \u5177\u4f53\u53c2\u8003 startService \u7ed1\u5b9aService \u901a\u8fc7bindService()\u542f\u52a8\u7684Service\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u901a\u8fc7\u4e09\u79cd\u65b9\u5f0f\u6765\u4e0e\u5176\u901a\u4fe1\uff1a Binder onBind\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2aBinder\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6269\u5c55Bind\u7c7b\u63d0\u4f9b\u4e00\u4e9b\u65b9\u6cd5\uff0c\u5ba2\u6237\u7aef\u7ed1\u5b9a\u4e4b\u540e\u5728ServiceConnection\u7684\u56de\u6389\u4e2d\u53ef\u4ee5\u62ff\u5230Binder\u5bf9\u8c61\uff0c\u4e0eService\u901a\u4fe1\uff0c\u4e5f\u53ef\u4ee5\u5728ServiceConnection\u7684\u56de\u6389\u4e2d\u901a\u8fc7Service\u5bf9\u8c61\u6765\u8c03\u7528Service\u7684public\u65b9\u6cd5\u3002\u591a\u4e2a\u5ba2\u6237\u7aef\u7ed1\u5b9a\u540c\u4e00\u4e2aService\u65f6\uff0c\u62ff\u5230\u7684Binder\u5bf9\u8c61\u548cService\u5bf9\u8c61\u90fd\u662f\u540c\u4e00\u4efd\u3002 Messenger \u521b\u5efa\u4e00\u4e2aHandler\uff0c\u63a5\u53d7\u6d88\u606f\uff1b \u4f7f\u7528Handler\u521b\u5efa\u4e00\u4e2aMessagener\u5bf9\u8c61\uff1b \u5728Service\u7684onBind()\u65b9\u6cd5\u4e2d\u8fd4\u56de\u901a\u8fc7messagener.getBinder()\u8fd4\u56de\u4e00\u4e2aBinder\uff1b \u5728\u5ba2\u6237\u7aef\u7684ServiceConnection\u56de\u8c03\u4e2d\uff0c\u901a\u8fc7service\u521b\u5efa\u4e00\u4e2aMessenger\u5bf9\u8c61\uff1b \u5ba2\u6237\u7aef\u4e2d\u901a\u8fc7Messager\u5bf9\u8c61\u7684sendMessage(msg)\u65b9\u6cd5\u5411Service\u53d1\u6d88\u606f\uff1b AIDL AIDL\u6587\u4ef6\u4e2d\u5b9a\u4e49\u63a5\u53e3\uff0c\u5ba2\u6237\u7aef\u8bbf\u95eeService\u65f6\uff0c\u62f7\u8d1d.aidl\u6587\u4ef6\uff0c\u83b7\u53d6\u5230Stub\u63a5\u53e3\u4e4b\u540e\uff0c\u53ef\u4ee5\u8c03\u7528\u5230Service\u7684\u65b9\u6cd5\u3002\u4e00\u822c\u6765\u8bf4\u540c\u4e00\u4e2a\u5e94\u7528\u4e2d\u4e0d\u5efa\u8bae\u4f7f\u7528AIDL\uff0c\u53ea\u6709\u4e0d\u540cAPP\u4e4b\u95f4\u8de8\u8fdb\u7a0b\u901a\u4fe1\u65f6\u624d\u9700\u8981\u7528\u5230\u3002 IntentService \u2003\u2003Service\u5728onStartCommand\u4e2d\uff0c\u4ecd\u7136\u662f\u5728\u4e3b\u7ebf\u7a0b\u4e2d\uff0cIntentService\u5728onCreate\u65b9\u6cd5\u4e2d\u5b9e\u4f8b\u5316\u4e86\u4e00\u4e2aHandlerThread\uff0c\u5728onStartCommand\u4e2d\u901a\u8fc7Handler\u628a\u6d88\u606fpost\u5230\u5b50\u7ebf\u7a0b\u4e0a\uff0c\u63d0\u4f9b\u4e00\u4e2aonHandleIntent()\u7684\u62bd\u8c61\u65b9\u6cd5\uff0c\u5728onHandleIntent\u4e2d\uff0c\u5b9e\u9645\u662f\u5728\u5b50\u7ebf\u7a0b\u4e2d\u5904\u7406\uff0c\u53ef\u4ee5\u8fdb\u884c\u8017\u65f6\u64cd\u4f5c\uff0c\u4e4b\u540eonHandleIntent\u6267\u884c\u5b8c\u8c03\u7528stopSelf()\u7ed3\u675f\u81ea\u5df1\u3002","title":"\u56db\u5927\u7ec4\u4ef6--Service"},{"location":"pages/android/1-basic/02-Service/#service","text":"","title":"Service"},{"location":"pages/android/1-basic/02-Service/#_1","text":"Service\u662f\u4e00\u79cd\u53ef\u4ee5\u5728\u540e\u53f0\u957f\u65f6\u95f4\u8fd0\u884c\u800c\u4e0d\u63d0\u4f9b\u7528\u6237\u754c\u9762\u7684\u7ec4\u4ef6\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u7684\u7ec4\u4ef6\u542f\u52a8\uff0c\u5f53\u5207\u6362\u5230\u5176\u4ed6\u5e94\u7528\u4e4b\u540e\uff0cService\u8fd8\u53ef\u4ee5\u5728\u540e\u53f0\u8fd0\u884c\u3002","title":"\u6982\u5ff5"},{"location":"pages/android/1-basic/02-Service/#_2","text":"\u76f4\u63a5\u7ee7\u627fService\u6216\u8005IntentService\uff1b \u5728AndroidManifest.xml\u6587\u4ef6\u4e2d\u58f0\u660e\u81ea\u5b9a\u4e49\u7684Service\uff1b \u7ec4\u4ef6\u901a\u8fc7context.startService()\u3001context.startForegroundService()\u6216\u8005context.bindService()\u542f\u52a8Service\uff0c\u533a\u522b\u5728\u4e8estartService()\u542f\u52a8\u7684Service\u751f\u547d\u5468\u671f\u4e0e\u542f\u52a8\u7684\u7ec4\u4ef6\u65e0\u5173\uff0cbindService()\u542f\u52a8\u7684Service\u751f\u547d\u5468\u671f\u4e0e\u542f\u52a8\u5176\u7684\u7ec4\u4ef6\u4e00\u81f4\uff1b \u82e5\u901a\u8fc7startService()\u542f\u52a8\uff0c\u4f1a\u8c03\u7528onStartCommand()\uff0c\u82e5\u901a\u8fc7bindService()\u542f\u52a8\uff0c\u5219\u4f1a\u8c03\u7528onBind()\uff0c\u5728\u5bf9\u5e94\u7684\u65b9\u6cd5\u4e2d\u5904\u7406\uff1b \u4e3b\u52a8\u8c03\u7528stopSelf()\u505c\u6b62Service\uff0c\u7ed1\u5b9a\u670d\u52a1\u9700\u8981\u5148\u8c03\u7528context.unbindService()\u89e3\u7ed1\u3002 \u4f7f\u7528Tips: \u8c03\u7528startService()\u542f\u52a8\uff0c\u5982\u679c\u53d1\u73b0service\u5df2\u7ecf\u5b58\u5728\u4e86\uff0c\u4f1a\u76f4\u63a5\u8d70\u5230onStatCommand()\u65b9\u6cd5\u4e2d\uff0c\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684startId\u6765\u505a\u4e0d\u540c\u7684\u64cd\u4f5c\uff1b Android 5.0(API 21)\u4e4b\u540e\uff0c\u901a\u8fc7\u9690\u5f0fIntent\u542f\u52a8Service\u4f1a\u76f4\u63a5\u629b\u5f02\u5e38\uff1b \u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684Service\u90fd\u53ef\u4ee5\u5728\u7cfb\u7edf\u8bbe\u7f6e\u4e2d\u88ab\u770b\u5230\uff0c\u7528\u6237\u53ef\u4ee5\u5f3a\u6740\uff0c\u56e0\u6b64\u6709\u5fc5\u8981\u5728AndroidManifest.xml\u4e2d\u58f0\u660eService\u65f6\u6307\u5b9adescription\uff0c\u544a\u8bc9\u7528\u6237\u6b64Service\u7684\u4f5c\u7528\uff1b \u9664\u4e86\u8c03\u7528context.stopService()\u5916\uff0c\u7528context.startService()\u6307\u5b9a\u7279\u5b9a\u7684startId\uff0c\u5728Service\u4e2d\u8c03\u7528stopSelf()\u4e5f\u53ef\u4ee5\u7ed3\u675fService(); \u9ed8\u8ba4\u60c5\u51b5\u4e0bService\u8fd0\u884c\u5728\u4e3b\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u8fdb\u884cUI\u64cd\u4f5c\uff0c\u6bd4\u5982\u53ef\u4ee5\u5f39Toast\uff0c\u66f4\u65b0\u901a\u77e5\u680f\u3002","title":"\u4f7f\u7528"},{"location":"pages/android/1-basic/02-Service/#service_1","text":"Service\u662fAndroid\u7684\u56db\u5927\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u9664\u4e86\u53ef\u4ee5\u5904\u7406\u4e00\u822c\u7684\u6ca1\u6709\u754c\u9762\u7684\u4efb\u52a1\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u8de8\u8fdb\u7a0b\u901a\u4fe1(AIDL)\uff0c\u56e0\u6b64Service\u65e2\u53ef\u4ee5\u8fd0\u884c\u5728\u5f53\u524d\u8fdb\u7a0b\u4e2d\uff0c\u4e5f\u6709\u53ef\u80fd\u88ab\u5176\u4ed6\u7684\u8fdb\u7a0b\u542f\u52a8\uff1b \u542f\u52a8Service\u4e4b\u540e\uff0c\u5b9e\u9645\u4e0a\u662f\u8fd0\u884c\u5728\u4e3b\u7ebf\u7a0b\u4e0a\u7684\uff08IntentService\u662f\u7279\u6b8a\u5904\u7406\uff0c\u81ea\u5df1\u5207\u6362\u5230\u5b50\u7ebf\u7a0b\u7684\uff09\uff0c\u56e0\u6b64\u9700\u8981\u6ce8\u610f\u907f\u514dANR\uff0cService\u4e2d20s\u8fd8\u6ca1\u6709\u54cd\u5e94\u5c31\u4f1a\u51fa\u73b0ANR\uff1b Service\u6709\u81ea\u5df1\u7684\u7279\u6709\u751f\u547d\u5468\u671f\uff0c\u7ebf\u7a0b\u6ca1\u6709\uff1b \u5982\u679crun\u65b9\u6cd5\u6ca1\u6267\u884c\u5b8c\uff0c\u7ebf\u7a0b\u53ef\u4ee5\u5728\u5176\u6240\u5728\u7684\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u7ed3\u675f\u540e\u7ee7\u7eed\u5b58\u5728\uff0c\u4f7f\u7528\u4e0d\u614e\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002","title":"Service\u4e0e\u7ebf\u7a0b\u7684\u533a\u522b"},{"location":"pages/android/1-basic/02-Service/#service_2","text":"","title":"\u542f\u52a8Service\u7684\u4e24\u79cd\u65b9\u5f0f"},{"location":"pages/android/1-basic/02-Service/#startservice","text":"\u4f7f\u7528context.startService()\u6216\u8005context.startFrogoundService()\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2aService\uff0c\u542f\u52a8\u4e4b\u540e\uff0cService\u7684\u751f\u547d\u5468\u671f\u5c31\u548c\u542f\u52a8\u5b83\u7684\u7ec4\u4ef6\u65e0\u5173\u4e86\uff0c\u5373\u4f7f\u542f\u52a8\u5b83\u7684\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u7ed3\u675f\u4e86\uff0cService\u4e5f\u8fd8\u662f\u5b58\u5728\u3002IntentService\u662f\u81ea\u5df1\u8c03\u7528stopSelf()\u6765\u7ed3\u675f\u7684\u3002 Service\u542f\u52a8\u4e4b\u540e\uff0c\u9ed8\u8ba4\u8fd0\u884c\u5728\u4e3b\u7ebf\u7a0b\u4e2d\uff0c\u5728onStartCommand()\u4e2d\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684startId\u8fdb\u884c\u4e0d\u540c\u7684\u64cd\u4f5c\u3002\u5982\u679c\u542f\u52a8\u7684\u662fIntentService\uff0c\u5728onHandleIntent()\u4e2d\u8fdb\u884c\u64cd\u4f5c\u3002 onStartCommand()\u7684\u8fd4\u56de\u503c\u4e0d\u540c\u53ef\u4ee5\u51b3\u5b9a\u5982\u4f55\u5728\u7cfb\u7edf\u7ed3\u675fService\u4e4b\u540e\uff0c\u7ee7\u7eed\u8fd0\u884cService\uff1a START_NOT_STICKY \u7ed3\u675fService\u4e4b\u540e\u4e0d\u4f1a\u91cd\u5efa\uff1b START_STICKY \u7ed3\u675fService\u4e4b\u540e\uff0c\u4f1a\u91cd\u5efa\u5e76\u8c03\u7528onStartCommand\uff0c\u5982\u679c\u6709\u6302\u8d77Intent\uff0conStartCommand\u4e2d\u4f1a\u4f20\u9012\u8be5Intent\uff0c\u5426\u5219\u91cd\u542f\u65f6onStartCommand\u4e2d\u7684intent\u662f\u7a7a\u503c\u3002\u9002\u7528\u4e8e\u4e0d\u6267\u884c\u547d\u4ee4\uff0c\u7b49\u5f85\u547d\u4ee4\u6765\u65f6\u624d\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u64ad\u653e\u5668\u3002 START_REDELIVER_INTENT \u7ed3\u675fService\u4e4b\u540e\u4f1a\u91cd\u542f\uff0c\u5e76\u8c03\u7528onStartCommand()\uff0c\u4f20\u9012\u7684intent\u662f\u6700\u540e\u4e00\u6b21\u542f\u52a8Service\u7684Intent\u3002\u9002\u7528\u4e8e\u6267\u884c\u4efb\u52a1\u65f6\u9700\u8981\u7acb\u5373\u6062\u590d\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u6587\u4ef6\u4e0b\u8f7d\uff0c\u65ad\u70b9\u7eed\u4f20\u3002 Service\u7684\u4efb\u52a1\u5904\u7406\u5b8c\u4e4b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7stopSelf\u6765\u7ed3\u675f\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7context.stopService()\u6765\u7ed3\u675f\u3002","title":"startService"},{"location":"pages/android/1-basic/02-Service/#bindservice","text":"context.startService()\u53ef\u4ee5\u542f\u52a8Service\uff0c\u542f\u52a8\u4e4b\u540e\uff0cService\u7684\u751f\u547d\u5468\u671f\u548c\u542f\u52a8\u5b83\u7684\u7ec4\u4ef6\u7ed1\u5b9a\uff0c\u542f\u52a8Service\u7684\u7ec4\u4ef6\u7ed3\u675f\u540e\uff0cService\u4e5f\u4f1a\u7ed3\u675f\u3002 \u591a\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u7ed1\u5b9a\u540c\u4e00\u4e2aService\uff0c\u5f53\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f\u90fd\u7ed3\u675f\u540e\uff0c\u88ab\u542f\u52a8\u7684Service\u7684\u751f\u547d\u5468\u671f\u624d\u4f1a\u7ed3\u675f\u3002 \u901a\u8fc7bindService()\u542f\u52a8\u7684Service\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u5b9e\u73b0onStartCommand()\u65b9\u6cd5\uff0c\u6839\u636e\u8fd4\u56de\u503c\uff0c\u5728\u6240\u6709\u7ec4\u4ef6\u89e3\u7ed1\u4e4b\u540e\uff0cService\u4f1a\u91cd\u542f\u3002 \u4f7f\u7528bindService\u542f\u52a8service\u4e4b\u540e\uff0c\u4e0d\u5141\u8bb8\u518d\u901a\u8fc7startService\u542f\u52a8\uff08todo\uff09\u3002 \u8fd9\u79cd\u65b9\u5f0f\u542f\u52a8\u7684Service\u591a\u7528\u4e8e\u8de8\u8fdb\u7a0b\u901a\u4fe1\uff0c\u6216\u8005\u662f\u4eceActivity\u4e2d\u542f\u52a8\u548cUI\u6709\u4ea4\u4e92\u3002\u751f\u547d\u5468\u671f\u4e2d\u7684onBind()\u4f1a\u8fd4\u56de\u4e00\u4e2aIBinder\uff0c\u5728bindService()\u7684\u53c2\u6570\u4e2d\u6709\u4e00\u4e2aServiceConnection\u63a5\u53e3\uff0c\u53ef\u4ee5\u83b7\u53d6\u5230\u8fd9\u4e2aIBinder\u63a5\u53e3\uff0c\u4ece\u800c\u8fdb\u884c\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u3002","title":"bindService"},{"location":"pages/android/1-basic/02-Service/#_3","text":"","title":"\u751f\u547d\u5468\u671f"},{"location":"pages/android/1-basic/02-Service/#service_3","text":"","title":"\u51e0\u79cd\u4e0d\u540c\u7684Service"},{"location":"pages/android/1-basic/02-Service/#service_4","text":"\u524d\u53f0Service\u53ef\u4ee5\u901a\u8fc7startService(int, Notification)\u542f\u52a8\uff0cService\u8fd0\u884c\u65f6\uff0c\u5fc5\u987b\u5728\u72b6\u6001\u680f\u663e\u793a\u901a\u77e5\uff0c\u505c\u6b62\u4f7f\u7528stopForground()\u3002 \u5982\u679ctargetSdkVersion\u662fAndroid 9 (API level 28) \uff0c\u542f\u52a8\u524d\u53f0Service\u5fc5\u987b\u5728AndroidManifest\u6587\u4ef6\u4e2d\u58f0\u660eFOREGROUND_SERVICE\u6743\u9650\uff0c\u5426\u8d77\u4f1a\u629bSecurityException\u3002 \u5982\u679ctargetSdkVersion\u662fAndroid 10(API level 29)\uff0c\u5728\u524d\u53f0Service\u4e2d\u8bbf\u95ee\u5b9a\u4f4d\u9700\u8981\u5728AndroidManifet.xml\u6587\u4ef6\u7684 \u6807\u7b7e\u4e2d\u52a0\u4e0a android:foregroundServiceType=\"location\" \uff0c\u6307\u5b9a\u524d\u53f0Service\u7c7b\u578b\u3002 \u5982\u679ctargetSdkVersion\u662fAndroid 11(API level 30)\uff0c\u5728\u524d\u53f0Service\u4e2d\u8bbf\u95ee\u76f8\u673a\u548c\u9ea6\u514b\u98ce\uff0cforegroundServiceType\u4e5f\u8981\u58f0\u660e camera \u548c microphone \u3002 \u5728Android 11\u4e0a\uff0c\u524d\u53f0Service\u6709\u4e00\u4e9b\u9650\u5236\uff0c\u5bf9\u4e8e\u4ece\u540e\u53f0\u542f\u52a8\u7684\u524d\u53f0Service\uff1a \u4ec5\u5f53\u7528\u6237\u8d4b\u4e88\u4e86 ACCESS_BACKGROUND_LOCATION \u6743\u9650\u65f6\uff0cService\u4e2d\u624d\u80fd\u83b7\u53d6\u5230\u5b9a\u4f4d\u4fe1\u606f\uff1b \u8bbf\u95ee\u4e0d\u4e86\u76f8\u673a\u548c\u9ea6\u514b\u98ce\uff1b \u5bf9\u4e8e\u4ece\u524d\u53f0\u542f\u52a8\u7684\u524d\u53f0Service\uff1a \u4ec5\u5f53\u7528\u6237\u8d4b\u4e88\u4e86 ACCESS_BACKGROUND_LOCATION \u6743\u9650\u65f6\uff0cService\u4e2d\u624d\u53ef\u4ee5\u4e00\u76f4\u83b7\u53d6\u5230\u5b9a\u4f4d\u4fe1\u606f\uff0c\u5426\u5219\u53ea\u6709\u5f53APP\u5728\u524d\u53f0\u65f6\u624d\u80fd\u83b7\u53d6\u5230\u5b9a\u4f4d\u4fe1\u606f\uff1b \u7528\u6237\u8d4b\u4e88\u4e86 CAMERA \u6743\u9650\uff0c\u624d\u53ef\u4ee5\u8bbf\u95ee\u76f8\u673a\uff1b \u7528\u6237\u8d4b\u4e88\u4e86 RECORD_AUDIO \u6743\u9650\uff0c\u624d\u53ef\u4ee5\u8bbf\u95ee\u9ea6\u514b\u98ce\uff1b","title":"\u524d\u53f0Service"},{"location":"pages/android/1-basic/02-Service/#service_5","text":"Android\u5b98\u7f51\u4e0a\u5e76\u6ca1\u5b9a\u4e49\u540e\u53f0Service\u7684\u6982\u5ff5\uff0c\u8fd9\u91cc\u7684\u540e\u53f0Service\u662f\u76f8\u5bf9\u524d\u53f0Service\u7684\uff0c\u5176\u7279\u70b9\u4f53\u73b0\u5728\uff1a startService()\u4e4b\u540e\uff0c\u9ed8\u8ba4\u8fd0\u884c\u5728\u4e3b\u7ebf\u7a0b\u4e0a\uff1b \u6ca1\u6709\u7528\u6237\u754c\u9762\uff0c\u9664\u975e\u5230\u8bbe\u7f6e\u91cc\u53bb\u770b\uff0c\u5426\u5219\u7528\u6237\u611f\u77e5\u4e0d\u5230Service\u7684\u5b58\u5728\uff1b \u5177\u4f53\u53c2\u8003 startService","title":"\u540e\u53f0Service"},{"location":"pages/android/1-basic/02-Service/#service_6","text":"\u901a\u8fc7bindService()\u542f\u52a8\u7684Service\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u901a\u8fc7\u4e09\u79cd\u65b9\u5f0f\u6765\u4e0e\u5176\u901a\u4fe1\uff1a Binder onBind\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2aBinder\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6269\u5c55Bind\u7c7b\u63d0\u4f9b\u4e00\u4e9b\u65b9\u6cd5\uff0c\u5ba2\u6237\u7aef\u7ed1\u5b9a\u4e4b\u540e\u5728ServiceConnection\u7684\u56de\u6389\u4e2d\u53ef\u4ee5\u62ff\u5230Binder\u5bf9\u8c61\uff0c\u4e0eService\u901a\u4fe1\uff0c\u4e5f\u53ef\u4ee5\u5728ServiceConnection\u7684\u56de\u6389\u4e2d\u901a\u8fc7Service\u5bf9\u8c61\u6765\u8c03\u7528Service\u7684public\u65b9\u6cd5\u3002\u591a\u4e2a\u5ba2\u6237\u7aef\u7ed1\u5b9a\u540c\u4e00\u4e2aService\u65f6\uff0c\u62ff\u5230\u7684Binder\u5bf9\u8c61\u548cService\u5bf9\u8c61\u90fd\u662f\u540c\u4e00\u4efd\u3002 Messenger \u521b\u5efa\u4e00\u4e2aHandler\uff0c\u63a5\u53d7\u6d88\u606f\uff1b \u4f7f\u7528Handler\u521b\u5efa\u4e00\u4e2aMessagener\u5bf9\u8c61\uff1b \u5728Service\u7684onBind()\u65b9\u6cd5\u4e2d\u8fd4\u56de\u901a\u8fc7messagener.getBinder()\u8fd4\u56de\u4e00\u4e2aBinder\uff1b \u5728\u5ba2\u6237\u7aef\u7684ServiceConnection\u56de\u8c03\u4e2d\uff0c\u901a\u8fc7service\u521b\u5efa\u4e00\u4e2aMessenger\u5bf9\u8c61\uff1b \u5ba2\u6237\u7aef\u4e2d\u901a\u8fc7Messager\u5bf9\u8c61\u7684sendMessage(msg)\u65b9\u6cd5\u5411Service\u53d1\u6d88\u606f\uff1b AIDL AIDL\u6587\u4ef6\u4e2d\u5b9a\u4e49\u63a5\u53e3\uff0c\u5ba2\u6237\u7aef\u8bbf\u95eeService\u65f6\uff0c\u62f7\u8d1d.aidl\u6587\u4ef6\uff0c\u83b7\u53d6\u5230Stub\u63a5\u53e3\u4e4b\u540e\uff0c\u53ef\u4ee5\u8c03\u7528\u5230Service\u7684\u65b9\u6cd5\u3002\u4e00\u822c\u6765\u8bf4\u540c\u4e00\u4e2a\u5e94\u7528\u4e2d\u4e0d\u5efa\u8bae\u4f7f\u7528AIDL\uff0c\u53ea\u6709\u4e0d\u540cAPP\u4e4b\u95f4\u8de8\u8fdb\u7a0b\u901a\u4fe1\u65f6\u624d\u9700\u8981\u7528\u5230\u3002","title":"\u7ed1\u5b9aService"},{"location":"pages/android/1-basic/02-Service/#intentservice","text":"Service\u5728onStartCommand\u4e2d\uff0c\u4ecd\u7136\u662f\u5728\u4e3b\u7ebf\u7a0b\u4e2d\uff0cIntentService\u5728onCreate\u65b9\u6cd5\u4e2d\u5b9e\u4f8b\u5316\u4e86\u4e00\u4e2aHandlerThread\uff0c\u5728onStartCommand\u4e2d\u901a\u8fc7Handler\u628a\u6d88\u606fpost\u5230\u5b50\u7ebf\u7a0b\u4e0a\uff0c\u63d0\u4f9b\u4e00\u4e2aonHandleIntent()\u7684\u62bd\u8c61\u65b9\u6cd5\uff0c\u5728onHandleIntent\u4e2d\uff0c\u5b9e\u9645\u662f\u5728\u5b50\u7ebf\u7a0b\u4e2d\u5904\u7406\uff0c\u53ef\u4ee5\u8fdb\u884c\u8017\u65f6\u64cd\u4f5c\uff0c\u4e4b\u540eonHandleIntent\u6267\u884c\u5b8c\u8c03\u7528stopSelf()\u7ed3\u675f\u81ea\u5df1\u3002","title":"IntentService"},{"location":"pages/android/1-basic/03-BroadcastReceiver/","text":"BroadcastReceiver BroadCastReceiver\u662fAndroid\u56db\u5927\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u4e3b\u8981\u7528\u4e8e\u63a5\u6536\u7cfb\u7edf\u6216\u8005app\u53d1\u9001\u7684\u5e7f\u64ad\u4e8b\u4ef6\u3002\u5e7f\u64ad\u91c7\u7528\u4e86\u89c2\u5bdf\u8005\u6a21\u5f0f\uff0c\u901a\u8fc7\u53d1\u5e03\u8ba2\u9605\u7684\u6a21\u5f0f\u5b9e\u73b0\u901a\u4fe1\uff0c\u5e7f\u64ad\u7684\u901a\u4fe1\u673a\u5236\u4e5f\u662f\u7528Android\u7684Binder\u3002 \u63a5\u6536\u5e7f\u64ad \u63a5\u53d7\u5e7f\u64ad\u7684\u65b9\u5f0f\u6709\u4e24\u79cd \u6e05\u5355\u6587\u4ef6\u6ce8\u518c \u5728Manifest\u6587\u4ef6\u4e2d\u58f0\u660e\u5e7f\u64ad\uff0c\u6ce8\u518cintent-filter. <receiver android:name= \".MyBroadcastReceiver\" android:exported= \"false\" > <intent-filter> <action android:name= \"APP_SPECIFIC_BROADCAST\" /> </intent-filter> </receiver> \u5b9e\u73b0BroadcastReceiver\uff0c\u5728onReceive\u4e2d\u5904\u7406\u6536\u5230\u7684\u5e7f\u64ad\u3002 public class MyBroadcastReceiver extends BroadcastReceiver { @Override public void onReceive ( Context context , Intent intent ) { // ... } } \u901a\u8fc7context\u6ce8\u518c // \u521b\u5efa\u5e7f\u64ad\u5b9e\u4f8b BroadcastReceiver br = new MyBroadcastReceiver (); // \u521b\u5efaInterntFilter IntentFilter filter = new IntentFilter ( APP_SPECIFIC_BROADCAST ); // \u662f\u5426\u5bfc\u51fa boolean listenToBroadcastsFromOtherApps = false ; if ( listenToBroadcastsFromOtherApps ) { receiverFlags = ContextCompat . RECEIVER_EXPORTED ; } else { receiverFlags = ContextCompat . RECEIVER_NOT_EXPORTED ; } // \u6ce8\u518c\u5e7f\u64ad ContextCompat . registerReceiver ( context , br , filter , receiverFlags ); // \u89e3\u6ce8\u518c ContextCompat . unregisterReceiver ( context ); \u53d1\u9001\u5e7f\u64ad \u5e38\u89c4\u5e7f\u64ad context.sendBroadCastReceiver(Intent)\uff0c\u4f1a\u5411\u6240\u6709\u7684\u63a5\u6536\u5668\u53d1\u9001\u5e7f\u64ad\uff0c\u987a\u5e8f\u4e0d\u56fa\u5b9a\u3002\u5982\u679c\u63a5\u6536\u5668\u8de8\u8fdb\u7a0b\u4e86\uff0c\u4e5f\u80fd\u6536\u5230\u5e7f\u64ad\u3002\u4f18\u70b9\u662f\u6548\u7387\u9ad8\uff0c\u7f3a\u70b9\u662f\u63a5\u6536\u5668\u53ea\u80fd\u88ab\u52a8\u63a5\u53d7\u5e7f\u64ad\uff0c\u65e0\u6cd5\u963b\u6b62\u53d1\u9001\u8005\u53d1\u9001\u3002 \u6709\u5e8f\u5e7f\u64ad context.sendOrderedBroadcast(Intent, String)\uff0c\u6309\u987a\u5e8f\u5411\u63a5\u6536\u8005\u53d1\u9001\u5e7f\u64ad\uff0c\u987a\u5e8f\u6309\u63a5\u6536\u8005\u6ce8\u518c\u7684\u7684intent-filter\u7684 android:priority \u786e\u5b9a\u3002\u63a5\u6536\u5668\u53ef\u4ee5\u5728\u6536\u5230\u5e7f\u64ad\u540e\u7ee7\u7eed\u5904\u7406\u5c06\u5e7f\u64ad\u5f80\u4e0b\u53d1\uff0c\u4e5f\u53ef\u4ee5\u4e2d\u65ad\u5e7f\u64ad\u3002 \u9ecf\u6027\u5e7f\u64ad context.sendStickyBroadcast(Intent)\uff0c\u9ecf\u6027\u5e7f\u64ad\u662f\u6307\u5728\u53d1\u9001\u4e4b\u540e\uff0c\u5373\u4f7f\u63a5\u6536\u5668\u540e\u6ca1\u6709\u6ce8\u518c\uff0c\u4e5f\u80fd\u5728\u6ce8\u518c\u4e4b\u540e\u6536\u5230\u5e7f\u64ad\u3002\u63a5\u53d7\u9ecf\u6027\u5173\u95ed\u9700\u8981\u6743\u9650 android.permission.BROADCAST_STICKY \u3002\u7531\u4e8e\u5b58\u5728\u5b89\u5168\u95ee\u9898\uff0c\u9ecf\u6027\u5e7f\u64ad\u5df2\u7ecf\u88ab\u5e9f\u5f03\u4e86\u3002 \u672c\u5730\u5e7f\u64ad LocalBroadcastManager.getInstance(Context).sendBroadCastReceiver(Intent)\uff0c\u672c\u5730\u5e7f\u64ad\u53ea\u80fd\u5728\u5f53\u524d\u8fdb\u7a0b\u5185\u63a5\u53d7\uff0c\u5b89\u5168\u6027\u66f4\u9ad8\u3002 API\u884c\u4e3a\u53d8\u66f4 Android 14\uff0cAPP\u5904\u4e8e\u540e\u53f0\u65f6\uff0c\u4f1a\u5ef6\u8fdf\u6536\u5230\u4e00\u4e9b\u4e0d\u91cd\u8981\u7684\u5e7f\u64ad\uff0c\u5f53\u6062\u590d\u5230\u524d\u53f0\u65f6\uff0c\u4f1a\u7acb\u523b\u6536\u5230\u8fd9\u4e9b\u5ef6\u8fdf\u7684\u5e7f\u64ad\u3002 Android 9\uff0cNETWORK_STATE_CHANGED_ACTION \u4e0d\u518d\u63a5\u6536\u4f4d\u7f6e\u4fe1\u606f\u548c\u4e2a\u4eba\u8eab\u4efd\u6570\u636e\u76f8\u5173\u7684\u4fe1\u606f\u3002 Android 8.0\uff0c\u5bf9\u9690\u5f0f\u6ce8\u518c\u7684\u5e7f\u64ad\u9650\u5236\uff0c\u901a\u8fc7\u6e05\u5355\u6587\u4ef6\u6ce8\u518c\u7684\u5e7f\u64ad\u63a5\u6536\u5668\uff0c\u5927\u90e8\u5206\u7cfb\u7edf\u5e7f\u64ad\u90fd\u65e0\u6cd5\u6536\u5230\u3002\u901a\u8fc7context\u6ce8\u518c\u7684\u5e7f\u64ad\u4e0d\u53d7\u9650\u5236\u3002 Android 7\uff0ctargetApi >= 24\uff0c\u7cfb\u7edf\u4e0d\u53d1\u9001ACTION_NEW_PICTURE\uff0cACTION_NEW_VIDEO\u5e7f\u64ad\u3002\u6e05\u5355\u6587\u4ef6\u4e2d\u6ce8\u518c\u7684\u63a5\u6536\u5668\uff0c\u4e0d\u80fd\u63a5\u6536CONNECTIVITY_ACTION\u5e7f\u64ad\u3002 \u6700\u4f73\u5b9e\u8df5 \u5e7f\u64ad\u63a5\u6536\u5668\u7684onReiceive\u8fd0\u884c\u5728\u4e3b\u7ebf\u7a0b\u4e0a\uff0c\u4e0d\u53ef\u4ee5\u505a\u8017\u65f6\u7684\u64cd\u4f5c\uff0c\u8fd0\u884c\u65f6\u95f4\u8d85\u8fc715s\uff0c\u4f1a\u4ea7\u751fANR\u3002 \u5e7f\u64ad\u63a5\u6536\u5668\u7684\u751f\u547d\u5468\u671f\u5728onReceive\u6267\u884c\u7ed3\u675f\u4e4b\u540e\u5c31\u7ed3\u675f\u4e86\uff0c\u56e0\u6b64\u4e0d\u8981\u5728onReceive\u4e2d\u6267\u884c\u957f\u671f\u5b58\u5728\u7684\u4efb\u52a1\uff0c\u6bd4\u5982\u5f00\u4e00\u4e2a\u8017\u65f6\u7684\u7ebf\u7a0b\uff0c\u7c7b\u4f3c\u7684\u505a\u6cd5\u5efa\u8bae\u7528Service\u3002 \u6536\u5230\u5e7f\u64ad\u540e\uff0c\u5c3d\u91cf\u4e0d\u8981\u542f\u52a8\u65b0\u7684Activity\uff0c\u4f53\u9a8c\u975e\u5e38\u7cdf\u7cd5\uff0c\u53ef\u4ee5\u5728\u63a5\u6536\u5230\u901a\u77e5\u540e\uff0c\u53d1\u9001\u901a\u77e5\u680f\u901a\u77e5\u3002 \u5e7f\u64ad\u64cd\u4f5c\u7684\u547d\u540d\u7a7a\u95f4\u662f\u5168\u5c40\u6027\u7684\uff0c\u9700\u8981\u6307\u5b9a\u597d\u547d\u540d\u7a7a\u95f4\uff0c\u9632\u6b62\u56e0\u4e3a\u91cd\u540d\uff0c\u5bfc\u81f4\u5176\u4ed6\u5e94\u7528\u63a5\u53d7\u5230\u5e7f\u64ad\u3002 \u5e7f\u64ad\u4e2d\u4e0d\u8981\u53d1\u9001\u9690\u79c1\u4fe1\u606f\uff0c\u5bb9\u6613\u88ab\u5176\u4ed6\u5e94\u7528\u63a5\u53d7\u5230\uff0c\u53ef\u4ee5\u5728\u53d1\u9001\u5e7f\u64ad\u65f6\u6307\u5b9a\u6743\u9650\u3002 \u53c2\u8003 Android Developer \u5e7f\u64ad\u6982\u89c8 \u7406\u89e3\u56db\u5927\u7ec4\u4ef6Broadcast \u53d1\u9001\u4e0e\u63a5\u6536\u6d41\u7a0b(\u57fa\u4e8eAndroid10)","title":"\u56db\u5927\u7ec4\u4ef6--BroadcastReceiver"},{"location":"pages/android/1-basic/03-BroadcastReceiver/#broadcastreceiver","text":"BroadCastReceiver\u662fAndroid\u56db\u5927\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u4e3b\u8981\u7528\u4e8e\u63a5\u6536\u7cfb\u7edf\u6216\u8005app\u53d1\u9001\u7684\u5e7f\u64ad\u4e8b\u4ef6\u3002\u5e7f\u64ad\u91c7\u7528\u4e86\u89c2\u5bdf\u8005\u6a21\u5f0f\uff0c\u901a\u8fc7\u53d1\u5e03\u8ba2\u9605\u7684\u6a21\u5f0f\u5b9e\u73b0\u901a\u4fe1\uff0c\u5e7f\u64ad\u7684\u901a\u4fe1\u673a\u5236\u4e5f\u662f\u7528Android\u7684Binder\u3002","title":"BroadcastReceiver"},{"location":"pages/android/1-basic/03-BroadcastReceiver/#_1","text":"\u63a5\u53d7\u5e7f\u64ad\u7684\u65b9\u5f0f\u6709\u4e24\u79cd \u6e05\u5355\u6587\u4ef6\u6ce8\u518c \u5728Manifest\u6587\u4ef6\u4e2d\u58f0\u660e\u5e7f\u64ad\uff0c\u6ce8\u518cintent-filter. <receiver android:name= \".MyBroadcastReceiver\" android:exported= \"false\" > <intent-filter> <action android:name= \"APP_SPECIFIC_BROADCAST\" /> </intent-filter> </receiver> \u5b9e\u73b0BroadcastReceiver\uff0c\u5728onReceive\u4e2d\u5904\u7406\u6536\u5230\u7684\u5e7f\u64ad\u3002 public class MyBroadcastReceiver extends BroadcastReceiver { @Override public void onReceive ( Context context , Intent intent ) { // ... } } \u901a\u8fc7context\u6ce8\u518c // \u521b\u5efa\u5e7f\u64ad\u5b9e\u4f8b BroadcastReceiver br = new MyBroadcastReceiver (); // \u521b\u5efaInterntFilter IntentFilter filter = new IntentFilter ( APP_SPECIFIC_BROADCAST ); // \u662f\u5426\u5bfc\u51fa boolean listenToBroadcastsFromOtherApps = false ; if ( listenToBroadcastsFromOtherApps ) { receiverFlags = ContextCompat . RECEIVER_EXPORTED ; } else { receiverFlags = ContextCompat . RECEIVER_NOT_EXPORTED ; } // \u6ce8\u518c\u5e7f\u64ad ContextCompat . registerReceiver ( context , br , filter , receiverFlags ); // \u89e3\u6ce8\u518c ContextCompat . unregisterReceiver ( context );","title":"\u63a5\u6536\u5e7f\u64ad"},{"location":"pages/android/1-basic/03-BroadcastReceiver/#_2","text":"\u5e38\u89c4\u5e7f\u64ad context.sendBroadCastReceiver(Intent)\uff0c\u4f1a\u5411\u6240\u6709\u7684\u63a5\u6536\u5668\u53d1\u9001\u5e7f\u64ad\uff0c\u987a\u5e8f\u4e0d\u56fa\u5b9a\u3002\u5982\u679c\u63a5\u6536\u5668\u8de8\u8fdb\u7a0b\u4e86\uff0c\u4e5f\u80fd\u6536\u5230\u5e7f\u64ad\u3002\u4f18\u70b9\u662f\u6548\u7387\u9ad8\uff0c\u7f3a\u70b9\u662f\u63a5\u6536\u5668\u53ea\u80fd\u88ab\u52a8\u63a5\u53d7\u5e7f\u64ad\uff0c\u65e0\u6cd5\u963b\u6b62\u53d1\u9001\u8005\u53d1\u9001\u3002 \u6709\u5e8f\u5e7f\u64ad context.sendOrderedBroadcast(Intent, String)\uff0c\u6309\u987a\u5e8f\u5411\u63a5\u6536\u8005\u53d1\u9001\u5e7f\u64ad\uff0c\u987a\u5e8f\u6309\u63a5\u6536\u8005\u6ce8\u518c\u7684\u7684intent-filter\u7684 android:priority \u786e\u5b9a\u3002\u63a5\u6536\u5668\u53ef\u4ee5\u5728\u6536\u5230\u5e7f\u64ad\u540e\u7ee7\u7eed\u5904\u7406\u5c06\u5e7f\u64ad\u5f80\u4e0b\u53d1\uff0c\u4e5f\u53ef\u4ee5\u4e2d\u65ad\u5e7f\u64ad\u3002 \u9ecf\u6027\u5e7f\u64ad context.sendStickyBroadcast(Intent)\uff0c\u9ecf\u6027\u5e7f\u64ad\u662f\u6307\u5728\u53d1\u9001\u4e4b\u540e\uff0c\u5373\u4f7f\u63a5\u6536\u5668\u540e\u6ca1\u6709\u6ce8\u518c\uff0c\u4e5f\u80fd\u5728\u6ce8\u518c\u4e4b\u540e\u6536\u5230\u5e7f\u64ad\u3002\u63a5\u53d7\u9ecf\u6027\u5173\u95ed\u9700\u8981\u6743\u9650 android.permission.BROADCAST_STICKY \u3002\u7531\u4e8e\u5b58\u5728\u5b89\u5168\u95ee\u9898\uff0c\u9ecf\u6027\u5e7f\u64ad\u5df2\u7ecf\u88ab\u5e9f\u5f03\u4e86\u3002 \u672c\u5730\u5e7f\u64ad LocalBroadcastManager.getInstance(Context).sendBroadCastReceiver(Intent)\uff0c\u672c\u5730\u5e7f\u64ad\u53ea\u80fd\u5728\u5f53\u524d\u8fdb\u7a0b\u5185\u63a5\u53d7\uff0c\u5b89\u5168\u6027\u66f4\u9ad8\u3002","title":"\u53d1\u9001\u5e7f\u64ad"},{"location":"pages/android/1-basic/03-BroadcastReceiver/#api","text":"Android 14\uff0cAPP\u5904\u4e8e\u540e\u53f0\u65f6\uff0c\u4f1a\u5ef6\u8fdf\u6536\u5230\u4e00\u4e9b\u4e0d\u91cd\u8981\u7684\u5e7f\u64ad\uff0c\u5f53\u6062\u590d\u5230\u524d\u53f0\u65f6\uff0c\u4f1a\u7acb\u523b\u6536\u5230\u8fd9\u4e9b\u5ef6\u8fdf\u7684\u5e7f\u64ad\u3002 Android 9\uff0cNETWORK_STATE_CHANGED_ACTION \u4e0d\u518d\u63a5\u6536\u4f4d\u7f6e\u4fe1\u606f\u548c\u4e2a\u4eba\u8eab\u4efd\u6570\u636e\u76f8\u5173\u7684\u4fe1\u606f\u3002 Android 8.0\uff0c\u5bf9\u9690\u5f0f\u6ce8\u518c\u7684\u5e7f\u64ad\u9650\u5236\uff0c\u901a\u8fc7\u6e05\u5355\u6587\u4ef6\u6ce8\u518c\u7684\u5e7f\u64ad\u63a5\u6536\u5668\uff0c\u5927\u90e8\u5206\u7cfb\u7edf\u5e7f\u64ad\u90fd\u65e0\u6cd5\u6536\u5230\u3002\u901a\u8fc7context\u6ce8\u518c\u7684\u5e7f\u64ad\u4e0d\u53d7\u9650\u5236\u3002 Android 7\uff0ctargetApi >= 24\uff0c\u7cfb\u7edf\u4e0d\u53d1\u9001ACTION_NEW_PICTURE\uff0cACTION_NEW_VIDEO\u5e7f\u64ad\u3002\u6e05\u5355\u6587\u4ef6\u4e2d\u6ce8\u518c\u7684\u63a5\u6536\u5668\uff0c\u4e0d\u80fd\u63a5\u6536CONNECTIVITY_ACTION\u5e7f\u64ad\u3002","title":"API\u884c\u4e3a\u53d8\u66f4"},{"location":"pages/android/1-basic/03-BroadcastReceiver/#_3","text":"\u5e7f\u64ad\u63a5\u6536\u5668\u7684onReiceive\u8fd0\u884c\u5728\u4e3b\u7ebf\u7a0b\u4e0a\uff0c\u4e0d\u53ef\u4ee5\u505a\u8017\u65f6\u7684\u64cd\u4f5c\uff0c\u8fd0\u884c\u65f6\u95f4\u8d85\u8fc715s\uff0c\u4f1a\u4ea7\u751fANR\u3002 \u5e7f\u64ad\u63a5\u6536\u5668\u7684\u751f\u547d\u5468\u671f\u5728onReceive\u6267\u884c\u7ed3\u675f\u4e4b\u540e\u5c31\u7ed3\u675f\u4e86\uff0c\u56e0\u6b64\u4e0d\u8981\u5728onReceive\u4e2d\u6267\u884c\u957f\u671f\u5b58\u5728\u7684\u4efb\u52a1\uff0c\u6bd4\u5982\u5f00\u4e00\u4e2a\u8017\u65f6\u7684\u7ebf\u7a0b\uff0c\u7c7b\u4f3c\u7684\u505a\u6cd5\u5efa\u8bae\u7528Service\u3002 \u6536\u5230\u5e7f\u64ad\u540e\uff0c\u5c3d\u91cf\u4e0d\u8981\u542f\u52a8\u65b0\u7684Activity\uff0c\u4f53\u9a8c\u975e\u5e38\u7cdf\u7cd5\uff0c\u53ef\u4ee5\u5728\u63a5\u6536\u5230\u901a\u77e5\u540e\uff0c\u53d1\u9001\u901a\u77e5\u680f\u901a\u77e5\u3002 \u5e7f\u64ad\u64cd\u4f5c\u7684\u547d\u540d\u7a7a\u95f4\u662f\u5168\u5c40\u6027\u7684\uff0c\u9700\u8981\u6307\u5b9a\u597d\u547d\u540d\u7a7a\u95f4\uff0c\u9632\u6b62\u56e0\u4e3a\u91cd\u540d\uff0c\u5bfc\u81f4\u5176\u4ed6\u5e94\u7528\u63a5\u53d7\u5230\u5e7f\u64ad\u3002 \u5e7f\u64ad\u4e2d\u4e0d\u8981\u53d1\u9001\u9690\u79c1\u4fe1\u606f\uff0c\u5bb9\u6613\u88ab\u5176\u4ed6\u5e94\u7528\u63a5\u53d7\u5230\uff0c\u53ef\u4ee5\u5728\u53d1\u9001\u5e7f\u64ad\u65f6\u6307\u5b9a\u6743\u9650\u3002 \u53c2\u8003 Android Developer \u5e7f\u64ad\u6982\u89c8 \u7406\u89e3\u56db\u5927\u7ec4\u4ef6Broadcast \u53d1\u9001\u4e0e\u63a5\u6536\u6d41\u7a0b(\u57fa\u4e8eAndroid10)","title":"\u6700\u4f73\u5b9e\u8df5"},{"location":"pages/android/1-basic/04-ContentProvider/","text":"ContentProvider ContentProvider \u53ef\u4ee5\u5e2e\u52a9\u5e94\u7528\u7ba1\u7406\u5bf9\u81ea\u8eab\u5b58\u50a8\u6216\u7531\u5176\u4ed6\u5e94\u7528\u5b58\u50a8\u7684\u6570\u636e\u7684\u8bbf\u95ee\uff0c\u5e76\u63d0\u4f9b\u4e0e\u5176\u4ed6\u5e94\u7528\u5171\u4eab\u6570\u636e\u7684\u65b9\u6cd5\u3002\u5b83\u4eec\u5c01\u88c5\u6570\u636e\uff0c\u5e76\u63d0\u4f9b\u7528\u4e8e\u5b9a\u4e49\u6570\u636e\u5b89\u5168\u6027\u7684\u673a\u5236\u3002ContentProvider \u662f\u5c06\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u6570\u636e\u4e0e\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u7684\u4ee3\u7801\u8fde\u63a5\u7684\u6807\u51c6\u63a5\u53e3\u3002 \u5b9e\u73b0 ContentProvider \u6709\u8bf8\u591a\u4f18\u52bf\u3002\u901a\u8fc7\u914d\u7f6e ContentProvider\uff0c\u8ba9\u5176\u4ed6\u5e94\u7528\u5b89\u5168\u5730\u8bbf\u95ee\u548c\u4fee\u6539\u60a8\u7684\u5e94\u7528\u6570\u636e\u3002 ContentProvider\u5bf9\u5916\u66b4\u9732\u7684\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u4e1a\u52a1\u65b9\u4f7f\u7528\u65f6\u53ea\u9700\u8981\u4f7f\u7528\u7edf\u4e00\u7684 uri \u8bbf\u95ee\u6570\u636e\u5373\u53ef\uff0c\u65e0\u9700\u5173\u7cfb\u5b58\u50a8\u7684\u5b9e\u73b0\u3002\u5728ContentProvider\u7684\u5b9e\u73b0\u4fa7\uff0c\u6570\u636e\u5b58\u50a8\u53ef\u4ee5\u7528sqlite\uff0c\u6587\u4ef6\uff0csharedpreference\uff0c\u751a\u81f3\u662fassets\u3002 \u4f7f\u7528 \u81ea\u5b9a\u4e49ContentProvider \u5b9e\u73b0ContentProvider\u5fc5\u987b\u5b9e\u73b0onCreate\u548c\u589e\u5220\u6539\u67e5\u65b9\u6cd5\u3002 public class ExampleProvider extends ContentProvider { // \u58f0\u660e\u6570\u636e\u5e93 private AppDatabase appDatabase ; // \u5b9a\u4e49DAO private UserDao userDao ; private static final String DBNAME = \"userdb\" ; public boolean onCreate () { // \u521b\u5efadb\u5bf9\u8c61 appDatabase = Room . databaseBuilder ( getContext (), AppDatabase . class , DBNAME ). build (); // \u83b7\u53d6dao userDao = appDatabase . getUserDao (); return true ; } ... // \u5b9e\u73b0insert\u65b9\u6cd5 @Override public @Nullable Uri insert ( @NonNull Uri uri , @Nullable ContentValues values ) { // \u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528UriMatcher\u6765\u5339\u914dUri } //\u5b9e\u73b0insert\u65b9\u6cd5 @Override public int update ( @NonNull Uri uri , @Nullable ContentValues values , @Nullable String selection , @Nullable String [] selectionArgs ) { ... } // \u5b9e\u73b0delete\u65b9\u6cd5 @Override public int delete ( @NonNull Uri uri , @Nullable String selection , @Nullable String [] selectionArgs ) { ... } // \u5b9e\u73b0query\u65b9\u6cd5 @Override public @Nullable Cursor query ( @NonNull Uri uri , @Nullable String [] projection , @Nullable String selection , @Nullable String [] selectionArgs , @Nullable String sortOrder ) { ... } } \u539f\u7406 \u5e94\u7528\u542f\u52a8\u65f6\uff0c\u5148\u521b\u5efaContextImpl\u548cInstrumentation\uff0c\u63a5\u7740\u521b\u5efaApplication\uff0c\u67e5\u627e\u5f53\u524d\u8fdb\u7a0b\u7684ContentProvider\uff0c\u521b\u5efaContentProvider\u7684\u5bf9\u8c61\uff0c\u540c\u65f6\u8c03\u7528onCreate()\u65b9\u6cd5\u3002 \u8c03\u7528contentResolver\u7684query\u3001update\u3001insert\u3001delete\u65b9\u6cd5\u65f6\uff0c\u83b7\u53d6\u5230\u7684ContentResolver\u5b9e\u9645\u662fApplicationContentResolver\uff0c\u901a\u8fc7acquireProvider()\u65b9\u6cd5\u67e5\u627e\u5bf9\u5e94\u7684ContentProvider\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\u76f4\u63a5\u8fd4\u56de\uff0c\u5426\u5219\u4f1a\u8d70\u5230\u542f\u52a8\u8fdb\u7a0b\u7684\u6d41\u7a0b\uff0c\u5728ActivityThread\u4e2d\u8c03\u7528instalProvider()\uff0c\u542f\u52a8\u5bf9\u5e94\u7684ContentProvider\uff0c\u5e76\u8c03\u7528onCreate\u65b9\u6cd5\u3002 \u53c2\u8003 Android Developer ContentProvider\u7b80\u4ecb CSDN-ContentProvider\u5de5\u4f5c\u539f\u7406\u2014\u2014\u72ec\u5bb6\u79d8\u65b9","title":"\u56db\u5927\u7ec4\u4ef6--ContentProvder"},{"location":"pages/android/1-basic/04-ContentProvider/#contentprovider","text":"ContentProvider \u53ef\u4ee5\u5e2e\u52a9\u5e94\u7528\u7ba1\u7406\u5bf9\u81ea\u8eab\u5b58\u50a8\u6216\u7531\u5176\u4ed6\u5e94\u7528\u5b58\u50a8\u7684\u6570\u636e\u7684\u8bbf\u95ee\uff0c\u5e76\u63d0\u4f9b\u4e0e\u5176\u4ed6\u5e94\u7528\u5171\u4eab\u6570\u636e\u7684\u65b9\u6cd5\u3002\u5b83\u4eec\u5c01\u88c5\u6570\u636e\uff0c\u5e76\u63d0\u4f9b\u7528\u4e8e\u5b9a\u4e49\u6570\u636e\u5b89\u5168\u6027\u7684\u673a\u5236\u3002ContentProvider \u662f\u5c06\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u6570\u636e\u4e0e\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u7684\u4ee3\u7801\u8fde\u63a5\u7684\u6807\u51c6\u63a5\u53e3\u3002 \u5b9e\u73b0 ContentProvider \u6709\u8bf8\u591a\u4f18\u52bf\u3002\u901a\u8fc7\u914d\u7f6e ContentProvider\uff0c\u8ba9\u5176\u4ed6\u5e94\u7528\u5b89\u5168\u5730\u8bbf\u95ee\u548c\u4fee\u6539\u60a8\u7684\u5e94\u7528\u6570\u636e\u3002 ContentProvider\u5bf9\u5916\u66b4\u9732\u7684\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u4e1a\u52a1\u65b9\u4f7f\u7528\u65f6\u53ea\u9700\u8981\u4f7f\u7528\u7edf\u4e00\u7684 uri \u8bbf\u95ee\u6570\u636e\u5373\u53ef\uff0c\u65e0\u9700\u5173\u7cfb\u5b58\u50a8\u7684\u5b9e\u73b0\u3002\u5728ContentProvider\u7684\u5b9e\u73b0\u4fa7\uff0c\u6570\u636e\u5b58\u50a8\u53ef\u4ee5\u7528sqlite\uff0c\u6587\u4ef6\uff0csharedpreference\uff0c\u751a\u81f3\u662fassets\u3002","title":"ContentProvider"},{"location":"pages/android/1-basic/04-ContentProvider/#_1","text":"\u81ea\u5b9a\u4e49ContentProvider \u5b9e\u73b0ContentProvider\u5fc5\u987b\u5b9e\u73b0onCreate\u548c\u589e\u5220\u6539\u67e5\u65b9\u6cd5\u3002 public class ExampleProvider extends ContentProvider { // \u58f0\u660e\u6570\u636e\u5e93 private AppDatabase appDatabase ; // \u5b9a\u4e49DAO private UserDao userDao ; private static final String DBNAME = \"userdb\" ; public boolean onCreate () { // \u521b\u5efadb\u5bf9\u8c61 appDatabase = Room . databaseBuilder ( getContext (), AppDatabase . class , DBNAME ). build (); // \u83b7\u53d6dao userDao = appDatabase . getUserDao (); return true ; } ... // \u5b9e\u73b0insert\u65b9\u6cd5 @Override public @Nullable Uri insert ( @NonNull Uri uri , @Nullable ContentValues values ) { // \u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528UriMatcher\u6765\u5339\u914dUri } //\u5b9e\u73b0insert\u65b9\u6cd5 @Override public int update ( @NonNull Uri uri , @Nullable ContentValues values , @Nullable String selection , @Nullable String [] selectionArgs ) { ... } // \u5b9e\u73b0delete\u65b9\u6cd5 @Override public int delete ( @NonNull Uri uri , @Nullable String selection , @Nullable String [] selectionArgs ) { ... } // \u5b9e\u73b0query\u65b9\u6cd5 @Override public @Nullable Cursor query ( @NonNull Uri uri , @Nullable String [] projection , @Nullable String selection , @Nullable String [] selectionArgs , @Nullable String sortOrder ) { ... } }","title":"\u4f7f\u7528"},{"location":"pages/android/1-basic/04-ContentProvider/#_2","text":"\u5e94\u7528\u542f\u52a8\u65f6\uff0c\u5148\u521b\u5efaContextImpl\u548cInstrumentation\uff0c\u63a5\u7740\u521b\u5efaApplication\uff0c\u67e5\u627e\u5f53\u524d\u8fdb\u7a0b\u7684ContentProvider\uff0c\u521b\u5efaContentProvider\u7684\u5bf9\u8c61\uff0c\u540c\u65f6\u8c03\u7528onCreate()\u65b9\u6cd5\u3002 \u8c03\u7528contentResolver\u7684query\u3001update\u3001insert\u3001delete\u65b9\u6cd5\u65f6\uff0c\u83b7\u53d6\u5230\u7684ContentResolver\u5b9e\u9645\u662fApplicationContentResolver\uff0c\u901a\u8fc7acquireProvider()\u65b9\u6cd5\u67e5\u627e\u5bf9\u5e94\u7684ContentProvider\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\u76f4\u63a5\u8fd4\u56de\uff0c\u5426\u5219\u4f1a\u8d70\u5230\u542f\u52a8\u8fdb\u7a0b\u7684\u6d41\u7a0b\uff0c\u5728ActivityThread\u4e2d\u8c03\u7528instalProvider()\uff0c\u542f\u52a8\u5bf9\u5e94\u7684ContentProvider\uff0c\u5e76\u8c03\u7528onCreate\u65b9\u6cd5\u3002 \u53c2\u8003 Android Developer ContentProvider\u7b80\u4ecb CSDN-ContentProvider\u5de5\u4f5c\u539f\u7406\u2014\u2014\u72ec\u5bb6\u79d8\u65b9","title":"\u539f\u7406"},{"location":"pages/android/1-basic/05-Fragment/","text":"Fragment Fragment\u662f\u5e94\u7528\u754c\u9762\u4e0a\u7684\u53ef\u4ee5\u7528\u6765\u91cd\u7528\u7684\u7ec4\u4ef6\uff0c\u5b83\u6709\u81ea\u5df1\u7684\u89c6\u56fe(\u4e5f\u53ef\u4ee5\u6ca1\u6709)\uff0c\u4e5f\u6709\u81ea\u5df1\u7684\u751f\u547d\u5468\u671f\uff0c\u4e0d\u80fd\u72ec\u7acb\u5b58\u5728\uff0c\u53ea\u80fd\u4f9d\u9644\u4e8eActivity\u6216\u8005\u5176\u4ed6\u7684Fragment\u5b58\u5728\u3002\u6700\u7ec8\u6e32\u67d3\u65f6\uff0cFragment\u4f1a\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684View\u52a0\u5230Activity\u4e0a\u3002 Fragment\u7684\u4f7f\u7528 \u7edd\u5927\u591a\u6570\u7684\u573a\u666f\u4e0b\uff0c\u90fd\u9700\u8981\u81ea\u5df1\u7ee7\u627fFragment\u7c7b\uff0c\u6765\u5b9e\u73b0\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\u3002 class ExampleFragment extends Fragment { public ExampleFragment () { super ( R . layout . example_fragment ); } } \u4f7f\u7528\u65f6\uff0c\u67092\u79cd\u65b9\u6cd5\u5c06Fragment\u52a0\u5230\u9875\u9762\u4e0a\uff1a \u901a\u8fc7xml\u52a0\u8f7d <!-- res/layout/example_activity.xml --> <androidx.fragment.app.FragmentContainerView xmlns:android= \"http://schemas.android.com/apk/res/android\" android:id= \"@+id/fragment_container_view\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> \u4e0d\u4f7f\u7528androidx\u65f6\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728xml\u4e2d\u5199fragment\u6807\u7b7e <fragment android:id= \"@+id/example_fragment\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:name= \"com.example.ExampleFragment\" /> \u4ee5\u4ee3\u7801\u7684\u5f62\u5f0f\u901a\u8fc7FragmentManager\u52a0\u8f7d public class ExampleActivity extends AppCompatActivity { public ExampleActivity () { super ( R . layout . example_activity ); } @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); if ( savedInstanceState == null ) { getSupportFragmentManager (). beginTransaction () . setReorderingAllowed ( true ) . add ( R . id . fragment_container_view , ExampleFragment . class , \"tag_fragment_example\" ) . commit (); } } } FragmentManager\u4e0eFragmentTransaction Fragment\u7684\u64cd\u4f5c\u90fd\u662f\u901a\u8fc7FragmentTransaction\u548cFragmentTransaction\u6765\u5b9e\u73b0\u7684\u3002 FragmentManager\u53ef\u4ee5\u901a\u8fc7FragmentActivity\u53ca\u5176\u5b50\u7c7b\u7684 getSupportFragmentManager() \u65b9\u6cd5\u83b7\u53d6\uff0c\u901a\u8fc7 fragmentManager.beginTransaction() \u53ef\u4ee5\u5f00\u542f\u4e00\u4e2a\u4e8b\u52a1\uff0c\u4e8b\u52a1\u4e2d\u53ef\u4ee5\u8fdb\u884cFragment\u7684\u5404\u79cd\u64cd\u4f5c\u3002 \u5e38\u7528\u7684FragmentManager\u7684\u65b9\u6cd5\u5305\u62ec\uff1a findFragmentById(int)\uff0cid\u5373Fragment\u5bb9\u5668View\u7684id findFragmentByTag(String)\uff0ctag\u662ffragmentTranstation.add()\u65f6\u6307\u5b9a\u7684tag \u5bf9Fragment\u7684\u64cd\u4f5c\u51e0\u4e4e\u90fd\u662f\u901a\u8fc7FramentTransaction\u6765\u5b9e\u73b0\u7684\uff0c\u5e38\u89c1\u7684\u64cd\u4f5c\u5305\u62ec\uff1a add/remove/replace \u4ece\u754c\u9762\u4e0a\u6dfb\u52a0/\u79fb\u9664/\u66ff\u6362Fragment\uff0c\u4f1a\u89e6\u53d1onCreateView/onViewDestroy\u65b9\u6cd5 show/hide \u663e\u793a\u548c\u9690\u85cf\uff0c\u4f1a\u89e6\u53d1onHiddenChange()\u65b9\u6cd5 detach/attach \u4ece\u754c\u9762\u4e0a\u6682\u65f6\u79fb\u9664/\u6dfb\u52a0Fragment\uff0c\u4e0d\u540c\u4e0eadd/remove\uff0cFragment\u7684\u72b6\u6001\u4ecd\u7136\u7531FragmentManager\u7ef4\u62a4 setPrimaryNavigation() \u8bbe\u7f6e\u5f53\u524d\u6d3b\u8dc3\u7684Fragment setMaxLifecycle() \u8bbe\u7f6e\u6700\u5927\u7684\u751f\u547d\u5468\u671f\u72b6\u6001\uff0c\u5982\u679c\u8bbe\u7f6e\u7684\u72b6\u6001\u6bd4\u5f53\u524d\u7684\u72b6\u6001\u66f4\u5c0f\uff0c\u5219\u4f1a\u5f3a\u5236\u56de\u9000\u72b6\u6001 commit/commitAllowingStateLoss \u5f02\u6b65\u63d0\u4ea4\u4e8b\u52a1\uff0ccommitAllowingStateLoss\u4f1a\u5728\u6267\u884c\u65f6\u4e0d\u68c0\u67e5Fragment\u7684\u72b6\u6001 commitNow/commitNowAllowingStateLoss \u540c\u6b65\u63d0\u4ea4\u4e8b\u52a1 \u56de\u9000\u6808 \u540cActivity\u7c7b\u4f3c\uff0cFragmentManager\u4e2d\u4e5f\u7ef4\u62a4\u4e86\u4e00\u4e2a\u6808\uff0c\u6808\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662fBackRacod\uff0c\u5b83\u662fFragmentTransaction\u7684\u5b50\u7c7b\u3002\u5728\u6267\u884cFragment\u7684\u4e8b\u52a1\u65f6\uff0c\u901a\u8fc7 transaction.addBackRecord() \u5c06\u5f53\u524d\u7684\u64cd\u4f5c\u52a0\u5165\u5230\u6808\u4e2d\uff0c\u901a\u8fc7 fragmentManager.popBackStack() \u53ef\u4ee5\u8fdb\u884c\u51fa\u6808\u64cd\u4f5c\u3002 \u5f53\u6309\u8fd4\u56de\u6309\u94ae\u65f6\uff0c\u4f1a\u6267\u884c\u4e8b\u52a1\u7684\u51fa\u6808\u64cd\u4f5c\uff0c\u5f53\u6ca1\u6709\u53ef\u4ee5\u51fa\u6808\u7684\u4e8b\u52a1\u540e\uff0c\u4f1a\u6267\u884c\u5230Activity\u7684onBackPress\u65b9\u6cd5\u4e2d\u3002 \u901a\u8fc7 supportFragmentManager.saveBackStack(String) \u548c supportFragmentManager.restoreBackStack(String) \u4e5f\u53ef\u4ee5\u8fdb\u884c\u4e8b\u52a1\u72b6\u6001\u7684\u4fdd\u5b58\u548c\u6062\u590d\u3002 \u751f\u547d\u5468\u671f \u72b6\u6001\u4fdd\u5b58 Fragment\u7684\u72b6\u6001\u4fdd\u5b58\u540cActivity\u4e00\u6837\uff0c\u5728onSavedInstanceState\u548conRestoreInstanceState\u4e2d\u5b8c\u6210\u3002\u901a\u8fc7 fragment.setArgument(Bundle) \u65b9\u6cd5\u8bbe\u7f6e\u7684\u53c2\u6570\uff0c\u5728Fragment\u91cd\u5efa\u4e4b\u540e\uff0c\u4e5f\u4f1a\u88ab\u6062\u590d\uff0cFragment\u4e2d\u5176\u4ed6\u7684\u6210\u5458\u53d8\u91cf\u5219\u65e0\u6cd5\u88ab\u6062\u590d\u3002 \u901a\u4fe1 Fragment\u4e0eFragment 1\u3001\u901a\u8fc7\u5171\u540c\u7684Activity\u6865\u63a5 2\u3001\u76f4\u63a5\u7528EventBus\u4e4b\u7c7b\u7684\u4e8b\u4ef6\u8ba2\u9605\u6765\u901a\u4fe1 3\u3001\u5b98\u7f51\u63a8\u8350\u7528ViewModel\u6765\u5b9e\u73b0\u901a\u4fe1\uff0c\u591a\u4e2aFragment\u53ef\u4ee5\u5171\u4eab\u4e00\u4e2aViewModule 4\u3001\u901a\u8fc7fragmentManager\u7684ResultApi\uff0c\u7528\u89c2\u5bdf\u8005\u6a21\u5f0f\u5b9e\u73b0 Activity\u4e0eFragment Activity\u901a\u8fc7 fragment.setArgument(Bundle) \u5411Fragment\u4f20\u9012\u53c2\u6570\uff0c\u62ff\u5230Fragment\u5bf9\u8c61\uff0c\u76f4\u63a5\u8c03\u7528fragment\u65b9\u6cd5\u3002 Fragment\u901a\u8fc7 getContext() \u83b7\u53d6\u5230\u5bbf\u4e3bActivity\uff0c\u901a\u8fc7\u56de\u8c03\u7684\u65b9\u5f0f\u8c03\u7528Activity\u4e2d\u7684\u65b9\u6cd5\u3002 Fragment\u4e8b\u52a1\u7684\u5de5\u4f5c\u539f\u7406 \u901a\u8fc7FragmentManager.beganTransaction\u5f00\u542f\u4e8b\u52a1\uff0c\u5373FragmentTransaction\uff0cFragmentTransaction\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u7684\u5b9e\u73b0\u7c7b\u901a\u5e38\u662fBackStackRecord\u3002 FragmentTransaction\u4e2d\u4ee5ArrayList \u7684\u5f62\u5f0f\u7ef4\u62a4\u4e86\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\u961f\u5217\uff0c\u6267\u884cadd/remove\u7b49\u65b9\u6cd5\u65f6\uff0c\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Op\u5bf9\u8c61\u3002 \u5f53\u6267\u884cFragmentTransaction\u7684commit()\u65b9\u6cd5\u65f6\uff0c\u5c06FragmentTransaction\u5bf9\u8c61\u653e\u5165\u5230FragmentManager\u7684mPendingActions\u961f\u5217\u4e2d\uff0c\u5f02\u6b65\u6267\u884c\u3002\u5982\u679c\u4f7f\u7528\u7684\u662fcommitNow()\u76f8\u5173\u7684\u65b9\u6cd5\uff0c\u4f1a\u7acb\u5373\u6267\u884c\u3002 \u5728FragmentManager\u4e2d\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7684\u72b6\u6001\u6821\u9a8c\u540e\uff0c\u4f1a\u8c03\u7528\u5230moveState\u65b9\u6cd5\uff0c\u5728\u5176\u4e2d\u8fdb\u884cFragment\u7684\u72b6\u6001\u6d41\u8f6c\uff0c\u5e76\u6267\u884c\u751f\u547d\u5468\u671f\u65b9\u6cd5\u3002 Fragment\u7684\u72b6\u6001\u67098\u4e2a: INITIALIZING = -1; // Not yet attached. ATTACHED = 0; // Attached to the host. CREATED = 1; // Created. VIEW_CREATED = 2; // View Created. AWAITING_EXIT_EFFECTS = 3; // Downward state, awaiting exit effects ACTIVITY_CREATED = 4; // Fully created, not started. STARTED = 5; // Created and started, not resumed. AWAITING_ENTER_EFFECTS = 6; // Upward state, awaiting enter effects RESUMED = 7; // Created started and resumed. \u53c2\u8003 Android Developer Fragment\u7b80\u4ecb Android Developer \u4e0eFragment\u901a\u4fe1","title":"Fragment"},{"location":"pages/android/1-basic/05-Fragment/#fragment","text":"Fragment\u662f\u5e94\u7528\u754c\u9762\u4e0a\u7684\u53ef\u4ee5\u7528\u6765\u91cd\u7528\u7684\u7ec4\u4ef6\uff0c\u5b83\u6709\u81ea\u5df1\u7684\u89c6\u56fe(\u4e5f\u53ef\u4ee5\u6ca1\u6709)\uff0c\u4e5f\u6709\u81ea\u5df1\u7684\u751f\u547d\u5468\u671f\uff0c\u4e0d\u80fd\u72ec\u7acb\u5b58\u5728\uff0c\u53ea\u80fd\u4f9d\u9644\u4e8eActivity\u6216\u8005\u5176\u4ed6\u7684Fragment\u5b58\u5728\u3002\u6700\u7ec8\u6e32\u67d3\u65f6\uff0cFragment\u4f1a\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684View\u52a0\u5230Activity\u4e0a\u3002","title":"Fragment"},{"location":"pages/android/1-basic/05-Fragment/#fragment_1","text":"\u7edd\u5927\u591a\u6570\u7684\u573a\u666f\u4e0b\uff0c\u90fd\u9700\u8981\u81ea\u5df1\u7ee7\u627fFragment\u7c7b\uff0c\u6765\u5b9e\u73b0\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\u3002 class ExampleFragment extends Fragment { public ExampleFragment () { super ( R . layout . example_fragment ); } } \u4f7f\u7528\u65f6\uff0c\u67092\u79cd\u65b9\u6cd5\u5c06Fragment\u52a0\u5230\u9875\u9762\u4e0a\uff1a \u901a\u8fc7xml\u52a0\u8f7d <!-- res/layout/example_activity.xml --> <androidx.fragment.app.FragmentContainerView xmlns:android= \"http://schemas.android.com/apk/res/android\" android:id= \"@+id/fragment_container_view\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> \u4e0d\u4f7f\u7528androidx\u65f6\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728xml\u4e2d\u5199fragment\u6807\u7b7e <fragment android:id= \"@+id/example_fragment\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:name= \"com.example.ExampleFragment\" /> \u4ee5\u4ee3\u7801\u7684\u5f62\u5f0f\u901a\u8fc7FragmentManager\u52a0\u8f7d public class ExampleActivity extends AppCompatActivity { public ExampleActivity () { super ( R . layout . example_activity ); } @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); if ( savedInstanceState == null ) { getSupportFragmentManager (). beginTransaction () . setReorderingAllowed ( true ) . add ( R . id . fragment_container_view , ExampleFragment . class , \"tag_fragment_example\" ) . commit (); } } }","title":"Fragment\u7684\u4f7f\u7528"},{"location":"pages/android/1-basic/05-Fragment/#fragmentmanagerfragmenttransaction","text":"Fragment\u7684\u64cd\u4f5c\u90fd\u662f\u901a\u8fc7FragmentTransaction\u548cFragmentTransaction\u6765\u5b9e\u73b0\u7684\u3002 FragmentManager\u53ef\u4ee5\u901a\u8fc7FragmentActivity\u53ca\u5176\u5b50\u7c7b\u7684 getSupportFragmentManager() \u65b9\u6cd5\u83b7\u53d6\uff0c\u901a\u8fc7 fragmentManager.beginTransaction() \u53ef\u4ee5\u5f00\u542f\u4e00\u4e2a\u4e8b\u52a1\uff0c\u4e8b\u52a1\u4e2d\u53ef\u4ee5\u8fdb\u884cFragment\u7684\u5404\u79cd\u64cd\u4f5c\u3002 \u5e38\u7528\u7684FragmentManager\u7684\u65b9\u6cd5\u5305\u62ec\uff1a findFragmentById(int)\uff0cid\u5373Fragment\u5bb9\u5668View\u7684id findFragmentByTag(String)\uff0ctag\u662ffragmentTranstation.add()\u65f6\u6307\u5b9a\u7684tag \u5bf9Fragment\u7684\u64cd\u4f5c\u51e0\u4e4e\u90fd\u662f\u901a\u8fc7FramentTransaction\u6765\u5b9e\u73b0\u7684\uff0c\u5e38\u89c1\u7684\u64cd\u4f5c\u5305\u62ec\uff1a add/remove/replace \u4ece\u754c\u9762\u4e0a\u6dfb\u52a0/\u79fb\u9664/\u66ff\u6362Fragment\uff0c\u4f1a\u89e6\u53d1onCreateView/onViewDestroy\u65b9\u6cd5 show/hide \u663e\u793a\u548c\u9690\u85cf\uff0c\u4f1a\u89e6\u53d1onHiddenChange()\u65b9\u6cd5 detach/attach \u4ece\u754c\u9762\u4e0a\u6682\u65f6\u79fb\u9664/\u6dfb\u52a0Fragment\uff0c\u4e0d\u540c\u4e0eadd/remove\uff0cFragment\u7684\u72b6\u6001\u4ecd\u7136\u7531FragmentManager\u7ef4\u62a4 setPrimaryNavigation() \u8bbe\u7f6e\u5f53\u524d\u6d3b\u8dc3\u7684Fragment setMaxLifecycle() \u8bbe\u7f6e\u6700\u5927\u7684\u751f\u547d\u5468\u671f\u72b6\u6001\uff0c\u5982\u679c\u8bbe\u7f6e\u7684\u72b6\u6001\u6bd4\u5f53\u524d\u7684\u72b6\u6001\u66f4\u5c0f\uff0c\u5219\u4f1a\u5f3a\u5236\u56de\u9000\u72b6\u6001 commit/commitAllowingStateLoss \u5f02\u6b65\u63d0\u4ea4\u4e8b\u52a1\uff0ccommitAllowingStateLoss\u4f1a\u5728\u6267\u884c\u65f6\u4e0d\u68c0\u67e5Fragment\u7684\u72b6\u6001 commitNow/commitNowAllowingStateLoss \u540c\u6b65\u63d0\u4ea4\u4e8b\u52a1","title":"FragmentManager\u4e0eFragmentTransaction"},{"location":"pages/android/1-basic/05-Fragment/#_1","text":"\u540cActivity\u7c7b\u4f3c\uff0cFragmentManager\u4e2d\u4e5f\u7ef4\u62a4\u4e86\u4e00\u4e2a\u6808\uff0c\u6808\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662fBackRacod\uff0c\u5b83\u662fFragmentTransaction\u7684\u5b50\u7c7b\u3002\u5728\u6267\u884cFragment\u7684\u4e8b\u52a1\u65f6\uff0c\u901a\u8fc7 transaction.addBackRecord() \u5c06\u5f53\u524d\u7684\u64cd\u4f5c\u52a0\u5165\u5230\u6808\u4e2d\uff0c\u901a\u8fc7 fragmentManager.popBackStack() \u53ef\u4ee5\u8fdb\u884c\u51fa\u6808\u64cd\u4f5c\u3002 \u5f53\u6309\u8fd4\u56de\u6309\u94ae\u65f6\uff0c\u4f1a\u6267\u884c\u4e8b\u52a1\u7684\u51fa\u6808\u64cd\u4f5c\uff0c\u5f53\u6ca1\u6709\u53ef\u4ee5\u51fa\u6808\u7684\u4e8b\u52a1\u540e\uff0c\u4f1a\u6267\u884c\u5230Activity\u7684onBackPress\u65b9\u6cd5\u4e2d\u3002 \u901a\u8fc7 supportFragmentManager.saveBackStack(String) \u548c supportFragmentManager.restoreBackStack(String) \u4e5f\u53ef\u4ee5\u8fdb\u884c\u4e8b\u52a1\u72b6\u6001\u7684\u4fdd\u5b58\u548c\u6062\u590d\u3002","title":"\u56de\u9000\u6808"},{"location":"pages/android/1-basic/05-Fragment/#_2","text":"","title":"\u751f\u547d\u5468\u671f"},{"location":"pages/android/1-basic/05-Fragment/#_3","text":"Fragment\u7684\u72b6\u6001\u4fdd\u5b58\u540cActivity\u4e00\u6837\uff0c\u5728onSavedInstanceState\u548conRestoreInstanceState\u4e2d\u5b8c\u6210\u3002\u901a\u8fc7 fragment.setArgument(Bundle) \u65b9\u6cd5\u8bbe\u7f6e\u7684\u53c2\u6570\uff0c\u5728Fragment\u91cd\u5efa\u4e4b\u540e\uff0c\u4e5f\u4f1a\u88ab\u6062\u590d\uff0cFragment\u4e2d\u5176\u4ed6\u7684\u6210\u5458\u53d8\u91cf\u5219\u65e0\u6cd5\u88ab\u6062\u590d\u3002","title":"\u72b6\u6001\u4fdd\u5b58"},{"location":"pages/android/1-basic/05-Fragment/#_4","text":"Fragment\u4e0eFragment 1\u3001\u901a\u8fc7\u5171\u540c\u7684Activity\u6865\u63a5 2\u3001\u76f4\u63a5\u7528EventBus\u4e4b\u7c7b\u7684\u4e8b\u4ef6\u8ba2\u9605\u6765\u901a\u4fe1 3\u3001\u5b98\u7f51\u63a8\u8350\u7528ViewModel\u6765\u5b9e\u73b0\u901a\u4fe1\uff0c\u591a\u4e2aFragment\u53ef\u4ee5\u5171\u4eab\u4e00\u4e2aViewModule 4\u3001\u901a\u8fc7fragmentManager\u7684ResultApi\uff0c\u7528\u89c2\u5bdf\u8005\u6a21\u5f0f\u5b9e\u73b0 Activity\u4e0eFragment Activity\u901a\u8fc7 fragment.setArgument(Bundle) \u5411Fragment\u4f20\u9012\u53c2\u6570\uff0c\u62ff\u5230Fragment\u5bf9\u8c61\uff0c\u76f4\u63a5\u8c03\u7528fragment\u65b9\u6cd5\u3002 Fragment\u901a\u8fc7 getContext() \u83b7\u53d6\u5230\u5bbf\u4e3bActivity\uff0c\u901a\u8fc7\u56de\u8c03\u7684\u65b9\u5f0f\u8c03\u7528Activity\u4e2d\u7684\u65b9\u6cd5\u3002","title":"\u901a\u4fe1"},{"location":"pages/android/1-basic/05-Fragment/#fragment_2","text":"\u901a\u8fc7FragmentManager.beganTransaction\u5f00\u542f\u4e8b\u52a1\uff0c\u5373FragmentTransaction\uff0cFragmentTransaction\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u7684\u5b9e\u73b0\u7c7b\u901a\u5e38\u662fBackStackRecord\u3002 FragmentTransaction\u4e2d\u4ee5ArrayList \u7684\u5f62\u5f0f\u7ef4\u62a4\u4e86\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\u961f\u5217\uff0c\u6267\u884cadd/remove\u7b49\u65b9\u6cd5\u65f6\uff0c\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Op\u5bf9\u8c61\u3002 \u5f53\u6267\u884cFragmentTransaction\u7684commit()\u65b9\u6cd5\u65f6\uff0c\u5c06FragmentTransaction\u5bf9\u8c61\u653e\u5165\u5230FragmentManager\u7684mPendingActions\u961f\u5217\u4e2d\uff0c\u5f02\u6b65\u6267\u884c\u3002\u5982\u679c\u4f7f\u7528\u7684\u662fcommitNow()\u76f8\u5173\u7684\u65b9\u6cd5\uff0c\u4f1a\u7acb\u5373\u6267\u884c\u3002 \u5728FragmentManager\u4e2d\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7684\u72b6\u6001\u6821\u9a8c\u540e\uff0c\u4f1a\u8c03\u7528\u5230moveState\u65b9\u6cd5\uff0c\u5728\u5176\u4e2d\u8fdb\u884cFragment\u7684\u72b6\u6001\u6d41\u8f6c\uff0c\u5e76\u6267\u884c\u751f\u547d\u5468\u671f\u65b9\u6cd5\u3002 Fragment\u7684\u72b6\u6001\u67098\u4e2a: INITIALIZING = -1; // Not yet attached. ATTACHED = 0; // Attached to the host. CREATED = 1; // Created. VIEW_CREATED = 2; // View Created. AWAITING_EXIT_EFFECTS = 3; // Downward state, awaiting exit effects ACTIVITY_CREATED = 4; // Fully created, not started. STARTED = 5; // Created and started, not resumed. AWAITING_ENTER_EFFECTS = 6; // Upward state, awaiting enter effects RESUMED = 7; // Created started and resumed.","title":"Fragment\u4e8b\u52a1\u7684\u5de5\u4f5c\u539f\u7406"},{"location":"pages/android/1-basic/05-Fragment/#_5","text":"Android Developer Fragment\u7b80\u4ecb Android Developer \u4e0eFragment\u901a\u4fe1","title":"\u53c2\u8003"},{"location":"pages/android/1-basic/06-Handler/","text":"\u6d88\u606f\u673a\u5236 \u57fa\u672c\u7528\u6cd5 \u901a\u8fc7\u81ea\u5b9a\u4e49Handler\uff0c\u91cd\u5199handleMessage\u65b9\u6cd5\uff0c\u6839\u636emessage\u6765\u5904\u7406\u6d88\u606f\u3002 private class MyHandler extends Handler { void handleMessage ( Message message ) { // \u5904\u7406\u6d88\u606f if ( message . what == 1 ) { // ... } } } Handler handler = new MyHandler (); Message message = Message . obtain ( hanlder , 1 ); handler . sendMessage ( message ); \u76f4\u63a5\u901a\u8fc7Handler.post(runnable)\u6765\u5904\u7406\u6d88\u606f\u3002 Handler handle = new Handler ( Looper . mainLooper ()); handler . post (() -> { // ... }); \u76f8\u5173\u6982\u5ff5 Handler\u76f8\u5173\u7684\u7c7b\u67094\u4e2a\uff0cHandler\uff0cLooper\uff0cMessage\uff0cMessageQueue. \u7b80\u5355\u6765\u8bf4\uff0c\u6d88\u606f\u673a\u5236\u5c31\u662fHandler\u53d1\u9001\u6d88\u606f\uff0c\u5c06Message\u653e\u5230MessageQueue\u4e2d\uff0c\u901a\u8fc7Looper\u8fdb\u884c\u6b7b\u5faa\u73af\uff0c\u4e0d\u65ad\u4eceMessageQueue\u4e2d\u53d6Message\uff0c\u7136\u540e\u901a\u8fc7Message.target.dispatchMessage()\u5904\u7406\u6d88\u606f\u3002 Looper Looper\u4e2d\u5b58\u6709\u4e00\u4e2aThread\u5bf9\u8c61\u548c\u4e00\u4e2aMessageQueue\uff0c\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u4f1a\u521d\u59cb\u5316\uff0c\u65b0\u5efa\u4e00\u4e2aMessageQueue\uff0c\u628a\u5f53\u524dThread\u7684\u5f15\u7528\u6307\u5411\u5f53\u524d\u7ebf\u7a0b\u3002 \u6b64\u5916\uff0cLooper\u4e2d\u8fd8\u6709\u4e00\u4e2a\u9759\u6001\u7684ThreadLocal\u5bf9\u8c61\uff0c\u5728prepare()\u65b9\u6cd5\u4e2d\uff0c\u4f1a\u65b0\u5efa\u4e00\u4e2aLooper\u5bf9\u8c61\uff0c\u5b58\u5165ThreadLocal\u4e2d\u3002 Looper\u4e2d\u8fd8\u6709\u4e00\u4e2aloop()\u65b9\u6cd5\uff0cloop()\u65b9\u6cd5\u4e2d\u662f\u4e00\u4e2a\u6b7b\u5faa\u73af\uff0c\u4e0d\u65ad\u4eceMessageQueue\u4e2d\u53d6\u51fa\u6d88\u606f\uff0c\u901a\u8fc7target.dispatchMessage()\u65b9\u6cd5\u5206\u53d1\u6d88\u606f\u3002 Handler Handler\u6709\u4e00\u4e2aLooper\u5b9e\u4f8b\uff0c\u8fd8\u6709\u4e00\u4e2aMessageQueue\uff0cMessageQueue\u5373Looper\u7684queue\uff0c\u53d1\u9001\u6d88\u606f\u65f6\uff0c\u6700\u7ec8\u90fd\u4f1a\u8d70\u5230sendMessageAtTime()\u5c06Message\u653e\u5165\u6d88\u606f\u961f\u5217\u4e2d\u3002 post(Runnable)\u65b9\u6cd5\u4f1a\u5148\u6267\u884c\uff0c\u56e0\u4e3ahandleMessage\u65f6\u4f1a\u5148\u5224\u65adCallback\uff0c\u5148\u6267\u884cCallback\u7684\u65b9\u6cd5\u3002 \u53d6\u6d88\u6d88\u606f\u53ef\u4ee5\u901a\u8fc7removeMessage(what)\u548cremoveMessage(Runnable) Message \u6d88\u606f\u5bf9\u8c61\uff0c\u6301\u6709Handler\u7684\u5f15\u7528\uff0c\u4ee5\u53cawhat\uff0carg1\uff0carg2\u4e00\u4e2aObject\u5bf9\u8c61\uff0c\u590d\u6742\u7684\u503c\u53ef\u4ee5\u653e\u5728Bundle\u4e2d\u4f20\u9012 MessageQueue \u6d88\u606f\u961f\u5217\uff0c\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5355\u5411\u94fe\u8868\uff0cMessage\u4f5c\u4e3a\u8282\u70b9\uff0c\u901a\u8fc7Looper.myQueue()\u53ef\u4ee5\u83b7\u5f97\u3002 \u7ebf\u7a0b\u95f4\u901a\u4fe1\u539f\u7406 \u7efc\u4e0a\uff0c\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u90fd\u662f\u5f62\u6210Handler-Looper-Message-MessageQueue\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u8bf4\u662fHandler\u662f\u548c\u67d0\u4e2a\u7ebf\u7a0b\u5bf9\u5e94\u7684\uff0c\u901a\u8fc7\u54ea\u4e2a\u7ebf\u7a0b\u7684Handler\u53d1\u9001\u6d88\u606f\uff0c\u6700\u7ec8\u6d88\u606f\u5904\u7406\u4e5f\u5c31\u5728\u54ea\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u3002 Android \u5f02\u6b65\u6d88\u606f\u5904\u7406\u673a\u5236 \u8ba9\u4f60\u6df1\u5165\u7406\u89e3 Looper\u3001Handler\u3001Message\u4e09\u8005\u5173\u7cfb","title":"\u6d88\u606f\u673a\u5236"},{"location":"pages/android/1-basic/06-Handler/#_1","text":"","title":"\u6d88\u606f\u673a\u5236"},{"location":"pages/android/1-basic/06-Handler/#_2","text":"\u901a\u8fc7\u81ea\u5b9a\u4e49Handler\uff0c\u91cd\u5199handleMessage\u65b9\u6cd5\uff0c\u6839\u636emessage\u6765\u5904\u7406\u6d88\u606f\u3002 private class MyHandler extends Handler { void handleMessage ( Message message ) { // \u5904\u7406\u6d88\u606f if ( message . what == 1 ) { // ... } } } Handler handler = new MyHandler (); Message message = Message . obtain ( hanlder , 1 ); handler . sendMessage ( message ); \u76f4\u63a5\u901a\u8fc7Handler.post(runnable)\u6765\u5904\u7406\u6d88\u606f\u3002 Handler handle = new Handler ( Looper . mainLooper ()); handler . post (() -> { // ... });","title":"\u57fa\u672c\u7528\u6cd5"},{"location":"pages/android/1-basic/06-Handler/#_3","text":"Handler\u76f8\u5173\u7684\u7c7b\u67094\u4e2a\uff0cHandler\uff0cLooper\uff0cMessage\uff0cMessageQueue. \u7b80\u5355\u6765\u8bf4\uff0c\u6d88\u606f\u673a\u5236\u5c31\u662fHandler\u53d1\u9001\u6d88\u606f\uff0c\u5c06Message\u653e\u5230MessageQueue\u4e2d\uff0c\u901a\u8fc7Looper\u8fdb\u884c\u6b7b\u5faa\u73af\uff0c\u4e0d\u65ad\u4eceMessageQueue\u4e2d\u53d6Message\uff0c\u7136\u540e\u901a\u8fc7Message.target.dispatchMessage()\u5904\u7406\u6d88\u606f\u3002 Looper Looper\u4e2d\u5b58\u6709\u4e00\u4e2aThread\u5bf9\u8c61\u548c\u4e00\u4e2aMessageQueue\uff0c\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u4f1a\u521d\u59cb\u5316\uff0c\u65b0\u5efa\u4e00\u4e2aMessageQueue\uff0c\u628a\u5f53\u524dThread\u7684\u5f15\u7528\u6307\u5411\u5f53\u524d\u7ebf\u7a0b\u3002 \u6b64\u5916\uff0cLooper\u4e2d\u8fd8\u6709\u4e00\u4e2a\u9759\u6001\u7684ThreadLocal\u5bf9\u8c61\uff0c\u5728prepare()\u65b9\u6cd5\u4e2d\uff0c\u4f1a\u65b0\u5efa\u4e00\u4e2aLooper\u5bf9\u8c61\uff0c\u5b58\u5165ThreadLocal\u4e2d\u3002 Looper\u4e2d\u8fd8\u6709\u4e00\u4e2aloop()\u65b9\u6cd5\uff0cloop()\u65b9\u6cd5\u4e2d\u662f\u4e00\u4e2a\u6b7b\u5faa\u73af\uff0c\u4e0d\u65ad\u4eceMessageQueue\u4e2d\u53d6\u51fa\u6d88\u606f\uff0c\u901a\u8fc7target.dispatchMessage()\u65b9\u6cd5\u5206\u53d1\u6d88\u606f\u3002 Handler Handler\u6709\u4e00\u4e2aLooper\u5b9e\u4f8b\uff0c\u8fd8\u6709\u4e00\u4e2aMessageQueue\uff0cMessageQueue\u5373Looper\u7684queue\uff0c\u53d1\u9001\u6d88\u606f\u65f6\uff0c\u6700\u7ec8\u90fd\u4f1a\u8d70\u5230sendMessageAtTime()\u5c06Message\u653e\u5165\u6d88\u606f\u961f\u5217\u4e2d\u3002 post(Runnable)\u65b9\u6cd5\u4f1a\u5148\u6267\u884c\uff0c\u56e0\u4e3ahandleMessage\u65f6\u4f1a\u5148\u5224\u65adCallback\uff0c\u5148\u6267\u884cCallback\u7684\u65b9\u6cd5\u3002 \u53d6\u6d88\u6d88\u606f\u53ef\u4ee5\u901a\u8fc7removeMessage(what)\u548cremoveMessage(Runnable) Message \u6d88\u606f\u5bf9\u8c61\uff0c\u6301\u6709Handler\u7684\u5f15\u7528\uff0c\u4ee5\u53cawhat\uff0carg1\uff0carg2\u4e00\u4e2aObject\u5bf9\u8c61\uff0c\u590d\u6742\u7684\u503c\u53ef\u4ee5\u653e\u5728Bundle\u4e2d\u4f20\u9012 MessageQueue \u6d88\u606f\u961f\u5217\uff0c\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5355\u5411\u94fe\u8868\uff0cMessage\u4f5c\u4e3a\u8282\u70b9\uff0c\u901a\u8fc7Looper.myQueue()\u53ef\u4ee5\u83b7\u5f97\u3002","title":"\u76f8\u5173\u6982\u5ff5"},{"location":"pages/android/1-basic/06-Handler/#_4","text":"\u7efc\u4e0a\uff0c\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u90fd\u662f\u5f62\u6210Handler-Looper-Message-MessageQueue\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u8bf4\u662fHandler\u662f\u548c\u67d0\u4e2a\u7ebf\u7a0b\u5bf9\u5e94\u7684\uff0c\u901a\u8fc7\u54ea\u4e2a\u7ebf\u7a0b\u7684Handler\u53d1\u9001\u6d88\u606f\uff0c\u6700\u7ec8\u6d88\u606f\u5904\u7406\u4e5f\u5c31\u5728\u54ea\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u3002 Android \u5f02\u6b65\u6d88\u606f\u5904\u7406\u673a\u5236 \u8ba9\u4f60\u6df1\u5165\u7406\u89e3 Looper\u3001Handler\u3001Message\u4e09\u8005\u5173\u7cfb","title":"\u7ebf\u7a0b\u95f4\u901a\u4fe1\u539f\u7406"},{"location":"pages/android/2-perf/none/","text":"","title":"None"},{"location":"pages/android/3-arch/none/","text":"","title":"None"},{"location":"pages/android/4-thirdpart/01-eventbus/","text":"EventBus \u7b80\u4ecb EventBus\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u7ec4\u4ef6\u901a\u4fe1\u6846\u67b6\uff0c\u901a\u8fc7\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f\u5b9e\u73b0\u4e86\u6a21\u5757\u95f4\u901a\u4fe1\uff0c\u89e3\u8026\u3002 EventBus\u7684\u7528\u6cd5 \u6ce8\u518c\u4e0e\u89e3\u6ce8\u518c //3.x\u7248\u672c\u7684\u6ce8\u518c EventBus . getDefault (). register ( this ); //2.x\u7248\u672c\u7684\u6ce8\u518c EventBus . getDefault (). register ( this ); EventBus . getDefault (). register ( this , 100 ); EventBus . getDefault (). registerSticky ( this , 100 ); EventBus . getDefault (). registerSticky ( this ); //\u89e3\u6ce8\u518c EventBus . getDefault (). unregister ( this ); \u54cd\u5e94\u4e8b\u4ef6 //3.x\u7248\u672c @Subscribe ( threadMode = ThreadMode . BACKGROUND , sticky = true , priority = 100 ) public void test ( String str ) { } //2.x\u7248\u672c public void onEvent ( String str ) { } public void onEventMainThread ( String str ) { } public void onEventBackgroundThread ( String str ) { } \u53d1\u9001\u4e8b\u4ef6 EventBus . getDefault (). postEvent ( \"event\" ); EventBus . getDefault (). postSticky ( \"event\" ); postEvent()\u662f\u666e\u901a\u7684\u7528\u6cd5\uff0c\u53ea\u6709\u8ba2\u9605\u4e86\u8be5\u4e8b\u4ef6\u7684Subscriber\u624d\u80fd\u63a5\u53d7\u5230\u4e8b\u4ef6\u3002 postSticky()\u53eb\u9ecf\u6027\u4e8b\u4ef6\uff0c\u5373\u4f7f\u53d1\u9001\u4e8b\u4ef6\u65f6\u6ca1\u6709\u6ce8\u518c\uff0c\u5728\u6ce8\u518c\u540e\u4e5f\u540c\u6837\u80fd\u6536\u5230\u4e8b\u4ef6\u3002 EventBus\u7684\u539f\u7406 EventBus.getDefault()\u901a\u8fc7\u5355\u4f8b\u6a21\u5f0f\u83b7\u53d6EventBus\u7684\u5bf9\u8c61\uff1b register()\uff0c2.x\u7684\u7248\u672c\u4e2d\uff0c\u901a\u8fc7\u53cd\u5c04\uff0c\u627e\u5230onEventXxx\u65b9\u6cd5\uff0c\u5c06\u7c7b\u548c\u65b9\u6cd5\u4fe1\u606f\u7f13\u5b58\u8d77\u6765\u3002\u57283.0\u7248\u672c\u4e2d\u9664\u4e86\u901a\u8fc7\u53cd\u5c04\uff0c\u901a\u8fc7\u6ce8\u89e3\uff0c\u5728\u7f16\u8bd1\u671f\u751f\u6210\u8ba2\u9605\u8005\u4fe1\u606f\uff0c\u4fdd\u5b58\u8d77\u6765\u3002 post(Object)\uff0c\u83b7\u53d6\u5230PostingThreadState\u5bf9\u8c61\uff08ThreadLocal\uff09\uff0c\u786e\u5b9a\u53d1\u9001\u7684\u7ebf\u7a0b\uff0c\u5c06\u4e8b\u4ef6\u52a0\u5165\u961f\u5217\uff08list\uff09\uff0c\u53d1\u9001\u51fa\u53bb\u3002\u53d1\u9001\u65f6\u6839\u636e\u4e8b\u4ef6\u7684\u7c7b\u578b\uff0c\u662f\u5728\u4e3b\u7ebf\u7a0b\u6216\u8005\u662f\u540e\u53f0\u7ebf\u7a0b\uff0c\u901a\u8fc7\u4e0d\u540cHandlerPoster\uff0c\u53d1\u9001\u5230\u4e0d\u540c\u7684\u7ebf\u7a0b\u3002 EventBus 3.0 \u6e90\u7801\u5206\u6790","title":"EventBus"},{"location":"pages/android/4-thirdpart/01-eventbus/#eventbus","text":"","title":"EventBus"},{"location":"pages/android/4-thirdpart/01-eventbus/#_1","text":"EventBus\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u7ec4\u4ef6\u901a\u4fe1\u6846\u67b6\uff0c\u901a\u8fc7\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f\u5b9e\u73b0\u4e86\u6a21\u5757\u95f4\u901a\u4fe1\uff0c\u89e3\u8026\u3002","title":"\u7b80\u4ecb"},{"location":"pages/android/4-thirdpart/01-eventbus/#eventbus_1","text":"\u6ce8\u518c\u4e0e\u89e3\u6ce8\u518c //3.x\u7248\u672c\u7684\u6ce8\u518c EventBus . getDefault (). register ( this ); //2.x\u7248\u672c\u7684\u6ce8\u518c EventBus . getDefault (). register ( this ); EventBus . getDefault (). register ( this , 100 ); EventBus . getDefault (). registerSticky ( this , 100 ); EventBus . getDefault (). registerSticky ( this ); //\u89e3\u6ce8\u518c EventBus . getDefault (). unregister ( this ); \u54cd\u5e94\u4e8b\u4ef6 //3.x\u7248\u672c @Subscribe ( threadMode = ThreadMode . BACKGROUND , sticky = true , priority = 100 ) public void test ( String str ) { } //2.x\u7248\u672c public void onEvent ( String str ) { } public void onEventMainThread ( String str ) { } public void onEventBackgroundThread ( String str ) { } \u53d1\u9001\u4e8b\u4ef6 EventBus . getDefault (). postEvent ( \"event\" ); EventBus . getDefault (). postSticky ( \"event\" ); postEvent()\u662f\u666e\u901a\u7684\u7528\u6cd5\uff0c\u53ea\u6709\u8ba2\u9605\u4e86\u8be5\u4e8b\u4ef6\u7684Subscriber\u624d\u80fd\u63a5\u53d7\u5230\u4e8b\u4ef6\u3002 postSticky()\u53eb\u9ecf\u6027\u4e8b\u4ef6\uff0c\u5373\u4f7f\u53d1\u9001\u4e8b\u4ef6\u65f6\u6ca1\u6709\u6ce8\u518c\uff0c\u5728\u6ce8\u518c\u540e\u4e5f\u540c\u6837\u80fd\u6536\u5230\u4e8b\u4ef6\u3002","title":"EventBus\u7684\u7528\u6cd5"},{"location":"pages/android/4-thirdpart/01-eventbus/#eventbus_2","text":"EventBus.getDefault()\u901a\u8fc7\u5355\u4f8b\u6a21\u5f0f\u83b7\u53d6EventBus\u7684\u5bf9\u8c61\uff1b register()\uff0c2.x\u7684\u7248\u672c\u4e2d\uff0c\u901a\u8fc7\u53cd\u5c04\uff0c\u627e\u5230onEventXxx\u65b9\u6cd5\uff0c\u5c06\u7c7b\u548c\u65b9\u6cd5\u4fe1\u606f\u7f13\u5b58\u8d77\u6765\u3002\u57283.0\u7248\u672c\u4e2d\u9664\u4e86\u901a\u8fc7\u53cd\u5c04\uff0c\u901a\u8fc7\u6ce8\u89e3\uff0c\u5728\u7f16\u8bd1\u671f\u751f\u6210\u8ba2\u9605\u8005\u4fe1\u606f\uff0c\u4fdd\u5b58\u8d77\u6765\u3002 post(Object)\uff0c\u83b7\u53d6\u5230PostingThreadState\u5bf9\u8c61\uff08ThreadLocal\uff09\uff0c\u786e\u5b9a\u53d1\u9001\u7684\u7ebf\u7a0b\uff0c\u5c06\u4e8b\u4ef6\u52a0\u5165\u961f\u5217\uff08list\uff09\uff0c\u53d1\u9001\u51fa\u53bb\u3002\u53d1\u9001\u65f6\u6839\u636e\u4e8b\u4ef6\u7684\u7c7b\u578b\uff0c\u662f\u5728\u4e3b\u7ebf\u7a0b\u6216\u8005\u662f\u540e\u53f0\u7ebf\u7a0b\uff0c\u901a\u8fc7\u4e0d\u540cHandlerPoster\uff0c\u53d1\u9001\u5230\u4e0d\u540c\u7684\u7ebf\u7a0b\u3002 EventBus 3.0 \u6e90\u7801\u5206\u6790","title":"EventBus\u7684\u539f\u7406"},{"location":"pages/android/4-thirdpart/02-butterknife/","text":"ButterKnife \u57fa\u4e8eButterKnife 8.5.1 ButterKnife\u7528\u6cd5 Field and method binding for Android views ButterKnife\u53ef\u7528\u7684\u5730\u65b9\u5f88\u591a\uff0cActivity\uff0cFragment\uff0cDialog\u751a\u81f3\u662f\u4efb\u610f\u7684Object\uff0c\u4e0d\u8fc7\u7528\u6cd5\u90fd\u5927\u540c\u5c0f\u5f02\u3002\u57fa\u672c\u7528\u6cd5\u90fd\u662f\u5bf9View\u52a0\u4e0a@BindView\u6ce8\u89e3\uff0c\u7136\u540e\u5728\u9002\u5f53\u7684\u5730\u65b9\u8c03\u7528ButterKnife.bind(target, source)\u65b9\u6cd5\u3002 \u539f\u7406\u89e3\u6790 \u8fd9\u91cc\u4ee5Fragment\u4e2d\u7684\u7528\u6cd5\u4e3a\u4f8b\uff0c\u4e0b\u9762\u7684\u662fButterKnife\u5b98\u7f51\u4e0a\u7684\u4f8b\u5b50\u3002 public class FancyFragment extends Fragment { @BindView ( R . id . button1 ) Button button1 ; @BindView ( R . id . button2 ) Button button2 ; @Override public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { View view = inflater . inflate ( R . layout . fancy_fragment , container , false ); ButterKnife . bind ( this , view ); // TODO Use fields... return view ; } } \u4e00\u6b65\u4e00\u6b65\u6765\u5206\u6790\u6e90\u7801\u3002 \u9996\u5148\u4eceButterKnife.bind(this, view)\u770b\uff0c\u6233\u8fdb\u6e90\u7801\uff1a @NonNull @UiThread public static Unbinder bind ( @NonNull Object target , @NonNull View source ) { return createBinding ( target , source ); } \u8fd9\u91cc\u8c03\u7528\u4e86createBinding\u65b9\u6cd5, \u8fd4\u56de\u4e00\u4e2aUnbinder\u5bf9\u8c61\u3002 \u7ee7\u7eed\u5f80\u4e0b\u770b\uff0ccreateBinding\u65b9\u6cd5\u662f\u600e\u4e48\u521b\u5efaUnbinder\u5bf9\u8c61\u7684\uff1a private static Unbinder createBinding ( @NonNull Object target , @NonNull View source ) { Class <?> targetClass = target . getClass (); if ( debug ) Log . d ( TAG , \"Looking up binding for \" + targetClass . getName ()); Constructor <? extends Unbinder > constructor = findBindingConstructorForClass ( targetClass ); if ( constructor == null ) { return Unbinder . EMPTY ; } //... try { return constructor . newInstance ( target , source ); } //\u7701\u7565\u5f02\u5e38\u5904\u7406\u7684\u4ee3\u7801 } \u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u662f\u627e\u5230\u901a\u8fc7targetClass\u627e\u5230\u4e00\u4e2aUnbinder\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5e76\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u4ea7\u751f\u4e00\u4e2aUnbinder\u5bf9\u8c61\uff0c\u5177\u4f53\u5230\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0ctargetClass\u5c31\u662f\u6211\u4eec\u7684FancyFragment\u3002 \u518d\u7ee7\u7eed\u770b\u600e\u4e48\u627e\u6784\u9020\u65b9\u6cd5\u7684\uff0c\u70b9\u5f00findBindingConstructorForClass\u65b9\u6cd5\uff1a @Nullable @CheckResult @UiThread private static Constructor <? extends Unbinder > findBindingConstructorForClass ( Class <?> cls ) { //BINDINGS\u662f\u4e00\u4e2aHashMap<class, Constructor> Constructor <? extends Unbinder > bindingCtor = BINDINGS . get ( cls ); if ( bindingCtor != null ) { if ( debug ) Log . d ( TAG , \"HIT: Cached in binding map.\" ); return bindingCtor ; } String clsName = cls . getName (); //\u5ffd\u7565\u8c03android\u548cjava\u5305\u4e0b\u7684\u7c7b if ( clsName . startsWith ( \"android.\" ) || clsName . startsWith ( \"java.\" )) { if ( debug ) Log . d ( TAG , \"MISS: Reached framework class. Abandoning search.\" ); return null ; } try { //\u65b0\u5efa\u4e00\u4e2aViewBinding\u7c7b Class <?> bindingClass = Class . forName ( clsName + \"_ViewBinding\" ); //noinspection unchecked bindingCtor = ( Constructor <? extends Unbinder > ) bindingClass . getConstructor ( cls , View . class ); if ( debug ) Log . d ( TAG , \"HIT: Loaded binding class and constructor.\" ); } catch ( ClassNotFoundException e ) { if ( debug ) Log . d ( TAG , \"Not found. Trying superclass \" + cls . getSuperclass (). getName ()); bindingCtor = findBindingConstructorForClass ( cls . getSuperclass ()); } catch ( NoSuchMethodException e ) { throw new RuntimeException ( \"Unable to find binding constructor for \" + clsName , e ); } BINDINGS . put ( cls , bindingCtor ); return bindingCtor ; } \u8fd9\u91cc\u4ee3\u7801\u4e5f\u5f88\u7b80\u5355\uff0c\u5148\u4ece\u4e00\u4e2aHashMap\u4e5f\u5c31\u662fBINDINGS\u4e2d\u627e\uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd\uff0c\u5c31\u901a\u8fc7\u53cd\u5c04\u7684\u65b9\u6cd5\u65b0\u5efa\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7c7b\u7136\u540e\u53d6\u5176\u6784\u9020\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u7c7b\u7684\u7c7b\u540d\u662fclsName_ViewBinding\uff0c\u5177\u4f53\u5230\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5c31\u662f\u521b\u5efa\u4e86\u4e00\u4e2aFancyFragment_ViewBinding\u7684\u5bf9\u8c61\u3002\u4e4b\u540e\uff0c\u5c06\u8fd9\u4e2a\u5bf9\u8c61\u7684\u6784\u9020\u65b9\u6cd5\u5b58\u5165HashMap\u4e2d\u3002 \u90a3\u4e48\u8fd9\u4e2aBINDINGS\u662f\u4ec0\u4e48\u5462\uff1f\u7ffb\u6e90\u7801\u4e5f\u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u662f\u4e00\u4e2a\u9759\u6001\u7684HashMap\uff0c\u4ee5class\u4e3akey\uff0cvalue\u662f\u6784\u9020\u65b9\u6cd5\uff0c\u5728\u8fd9\u91cc\uff0c\u5176\u5b9e\u5b83\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u7f13\u5b58\uff0c\u53ea\u8981ButterKnife.bind(...)\u65b9\u6cd5\u8c03\u7528\u8fc7\u4e00\u6b21\uff0c\u4e0b\u6b21\u5c31\u53ef\u4ee5\u76f4\u63a5\u627e\u5230\u76f8\u5173\u7684_ViewBinding\u7684\u6784\u9020\u65b9\u6cd5\u3002 \u770b\u5230\u8fd9\u91cc\uff0c\u7a0d\u5fae\u6709\u4e00\u70b9\u70b9\u7591\u95ee\uff0c\u8fd9\u91cc \u4e3a\u4ec0\u4e48\u53ea\u7f13\u5b58\u6784\u9020\u65b9\u6cd5\uff0c\u518d\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316_ViewBinding\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u628a_ViewBinding\u5bf9\u8c61\u7f13\u5b58\u8d77\u6765\u5462\uff1f \u4e0b\u9762\u4f1a\u89e3\u7b54\u3002 \u5177\u4f53\u5230\u6211\u4eec\u6700\u5f00\u59cbFragment\u4e2dButterKnife\u4f7f\u7528\u7684\u4f8b\u5b50\uff0c\u5230\u8fd9\u91cc\u53ef\u4ee5\u6574\u7406\u4e00\u4e0b\u601d\u8def\u3002\u5728FancyFragment\u7684onCreateView(...)\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u8c03\u7528\u4e86ButterKnife.bind(this, view)\u65b9\u6cd5\uff0c\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u4e4b\u540e\uff0c\u6700\u7ec8\u662f\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316\u4e86\u4e00\u4e2a\u7c7b\uff0c\u5373FancyFragment_ViewBinding\u3002\u8fd9\u4e2a\u7c7b\u662f\u4ec0\u4e48\u5462\uff1f\u80af\u5b9a\u4e0d\u80fd\u5b9e\u4f8b\u5316\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u7c7b\uff0c\u7f16\u8bd1\u5b8c\u6210\u4e4b\u540e\uff0c\u5728\u9879\u76ee\u4e2d\u641c\u7d22\u4e00\u4e0b\u8fd9\u4e2a\u7c7b\uff0c\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u7c7b\u5728build\u6587\u4ef6\u5939\u4e0b\uff0c\u662f\u5728\u7f16\u8bd1\u671f\u81ea\u52a8\u751f\u6210\u7684\uff0c\u770b\u4e00\u4e0b\u8fd9\u4e2a\u7c7b\u5b9e\u73b0\uff1a public class FancyFragment_ViewBinding implements Unbinder { private FancyFragment target ; @UiThread public FancyFragment_ViewBinding ( FancyFragment target , View source ) { this . target = target ; target . button1 = Utils . findRequiredViewAsType ( source , R . id . button1 , \"field 'button1'\" , Button . class ); target . button2 = Utils . findRequiredViewAsType ( source , R . id . button2 , \"field 'button2'\" , Button . class ); } @Override @CallSuper public void unbind () { ChannelAudioFragment target = this . target ; if ( target == null ) throw new IllegalStateException ( \"Bindings already cleared.\" ); this . target = null ; target . button1 = null ; target . button2 = null ; } } \u770b\u5230\u8fd9\u91cc3\u4e2d\u7684\u95ee\u9898\u4e5f\u5c31\u5f88\u5f88\u597d\u89e3\u91ca\u4e86\uff0cViewBinding\u5bf9\u8c61\u4e2d\u4fdd\u5b58\u4e86targetClass\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662fFancyFragment_ViewBinding\u4e2d\u4fdd\u5b58\u4e86FancyFragment\u5bf9\u8c61\uff0c\u5982\u679c\u7f13\u5b58\u4e86targetClass\u5bf9\u8c61\uff0c\u5c31\u4f1a\u4f7f\u5f97FancyFragment\u88ab\u653e\u5728\u4e86\u9759\u6001\u7684HashMap\u4e2d\uff0c\u4e00\u76f4\u5f97\u4e0d\u5230\u91ca\u653e\uff0c\u6700\u7ec8\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u8fd9\u91cc\u4ee3\u7801\u4e5f\u5f88\u660e\u786e\uff0cUtils.findRequiredViewAsType(...)\u5c31\u662f\u8c03\u7528view.findViewById(id)\u65b9\u6cd5\uff0c\u7136\u540e\u901a\u8fc7\u53cd\u5c04\u8fdb\u884c\u4e00\u4e0b\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u8fd9\u6837\u5c31\u627e\u5230\u4e86id\u5bf9\u5e94\u7684view\uff0c\u7136\u540e\u590d\u5236\u7ed9targetClass\u4e2d\u6ce8\u89e3\u7684\u5c5e\u6027\u3002\u6574\u4e2a\u6d41\u7a0b\u4e5f\u5c31\u7701\u53bb\u4e86\u6211\u4eec\u624b\u5199findViewById(id)\u65b9\u6cd5\u7684\u8fc7\u7a0b\u3002 \u8fd9\u4e2aFancyFragment_ViewBinding\u7c7b\u662f\u600e\u4e48\u751f\u6210\u7684\u5462\uff1f\u6beb\u65e0\u7591\u95ee\u80af\u5b9a\u662f\u6839\u636e\u6ce8\u89e3\u751f\u6210\u7684\u4e86\uff0c\u5177\u4f53\u600e\u4e48\u751f\u6210\uff0c\u4ee5\u540e\u6709\u65f6\u95f4\u5728\u770b\u6e90\u7801\u3002 3. \u603b\u7ed3 \u7ecf\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6574\u4e2aButterKnife\u7684\u539f\u7406\u4e5f\u5c31\u6e05\u6670\u4e86\u3002\u7f16\u8bd1\u65f6\uff0c\u5bf9\u6709\u6ce8\u89e3\u7684target\u7c7b\u751f\u6210_ViewBinding\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u7684\u5c5e\u6027\u4e2d\u4fdd\u5b58\u4e86target\u5bf9\u8c61\uff0c\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u901a\u8fc7\u8c03\u7528findViewById\u627e\u5230View\uff0c\u5e76\u7ed9target\u7c7b\u6709\u6ce8\u89e3\u7684View\u8d4b\u503c\u3002 \u7ed1\u5b9a\u7684\u65f6\u5019\uff0c\u8c03\u7528ButterKnife.bind(target, source)\uff0c\u901a\u8fc7target\u7684\u7c7b\u627e\u5230\u7f13\u5b58\u7684target\u5bf9\u5e94\u7684_ViewBinding\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5e76\u5b9e\u4f8b\u5316\u5b83\uff0c\u6ca1\u627e\u5230\u7684\u5316\uff0c\u76f4\u63a5\u901a\u8fc7\u7c7b\u540d\u6765\u5b9e\u4f8b\u5316\uff0c\u7136\u540e\u7f13\u5b58\u3002\u5728\u5b9e\u4f8b\u5316_ViewBinding\u7c7b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c31\u76f4\u63a5\u8c03\u7528\u4e86findViewById\u65b9\u6cd5\u3002 \u4ee5\u4e0a\u662fBindView\u7684\u8fc7\u7a0b\uff0c\u5f53\u7136\uff0cButterKnife\u5176\u5b83\u7684\u7ed1\u5b9a\u65b9\u6cd5\uff0c\u6bd4\u5982\u7ed1\u5b9a\u70b9\u51fb\u4e8b\u4ef6\uff0c\u4e5f\u662f\u540c\u6837\u7684\u539f\u7406\u3002","title":"ButterKnife"},{"location":"pages/android/4-thirdpart/02-butterknife/#butterknife","text":"\u57fa\u4e8eButterKnife 8.5.1","title":"ButterKnife"},{"location":"pages/android/4-thirdpart/02-butterknife/#butterknife_1","text":"Field and method binding for Android views ButterKnife\u53ef\u7528\u7684\u5730\u65b9\u5f88\u591a\uff0cActivity\uff0cFragment\uff0cDialog\u751a\u81f3\u662f\u4efb\u610f\u7684Object\uff0c\u4e0d\u8fc7\u7528\u6cd5\u90fd\u5927\u540c\u5c0f\u5f02\u3002\u57fa\u672c\u7528\u6cd5\u90fd\u662f\u5bf9View\u52a0\u4e0a@BindView\u6ce8\u89e3\uff0c\u7136\u540e\u5728\u9002\u5f53\u7684\u5730\u65b9\u8c03\u7528ButterKnife.bind(target, source)\u65b9\u6cd5\u3002","title":"ButterKnife\u7528\u6cd5"},{"location":"pages/android/4-thirdpart/02-butterknife/#_1","text":"\u8fd9\u91cc\u4ee5Fragment\u4e2d\u7684\u7528\u6cd5\u4e3a\u4f8b\uff0c\u4e0b\u9762\u7684\u662fButterKnife\u5b98\u7f51\u4e0a\u7684\u4f8b\u5b50\u3002 public class FancyFragment extends Fragment { @BindView ( R . id . button1 ) Button button1 ; @BindView ( R . id . button2 ) Button button2 ; @Override public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { View view = inflater . inflate ( R . layout . fancy_fragment , container , false ); ButterKnife . bind ( this , view ); // TODO Use fields... return view ; } } \u4e00\u6b65\u4e00\u6b65\u6765\u5206\u6790\u6e90\u7801\u3002 \u9996\u5148\u4eceButterKnife.bind(this, view)\u770b\uff0c\u6233\u8fdb\u6e90\u7801\uff1a @NonNull @UiThread public static Unbinder bind ( @NonNull Object target , @NonNull View source ) { return createBinding ( target , source ); } \u8fd9\u91cc\u8c03\u7528\u4e86createBinding\u65b9\u6cd5, \u8fd4\u56de\u4e00\u4e2aUnbinder\u5bf9\u8c61\u3002 \u7ee7\u7eed\u5f80\u4e0b\u770b\uff0ccreateBinding\u65b9\u6cd5\u662f\u600e\u4e48\u521b\u5efaUnbinder\u5bf9\u8c61\u7684\uff1a private static Unbinder createBinding ( @NonNull Object target , @NonNull View source ) { Class <?> targetClass = target . getClass (); if ( debug ) Log . d ( TAG , \"Looking up binding for \" + targetClass . getName ()); Constructor <? extends Unbinder > constructor = findBindingConstructorForClass ( targetClass ); if ( constructor == null ) { return Unbinder . EMPTY ; } //... try { return constructor . newInstance ( target , source ); } //\u7701\u7565\u5f02\u5e38\u5904\u7406\u7684\u4ee3\u7801 } \u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u662f\u627e\u5230\u901a\u8fc7targetClass\u627e\u5230\u4e00\u4e2aUnbinder\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5e76\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u4ea7\u751f\u4e00\u4e2aUnbinder\u5bf9\u8c61\uff0c\u5177\u4f53\u5230\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0ctargetClass\u5c31\u662f\u6211\u4eec\u7684FancyFragment\u3002 \u518d\u7ee7\u7eed\u770b\u600e\u4e48\u627e\u6784\u9020\u65b9\u6cd5\u7684\uff0c\u70b9\u5f00findBindingConstructorForClass\u65b9\u6cd5\uff1a @Nullable @CheckResult @UiThread private static Constructor <? extends Unbinder > findBindingConstructorForClass ( Class <?> cls ) { //BINDINGS\u662f\u4e00\u4e2aHashMap<class, Constructor> Constructor <? extends Unbinder > bindingCtor = BINDINGS . get ( cls ); if ( bindingCtor != null ) { if ( debug ) Log . d ( TAG , \"HIT: Cached in binding map.\" ); return bindingCtor ; } String clsName = cls . getName (); //\u5ffd\u7565\u8c03android\u548cjava\u5305\u4e0b\u7684\u7c7b if ( clsName . startsWith ( \"android.\" ) || clsName . startsWith ( \"java.\" )) { if ( debug ) Log . d ( TAG , \"MISS: Reached framework class. Abandoning search.\" ); return null ; } try { //\u65b0\u5efa\u4e00\u4e2aViewBinding\u7c7b Class <?> bindingClass = Class . forName ( clsName + \"_ViewBinding\" ); //noinspection unchecked bindingCtor = ( Constructor <? extends Unbinder > ) bindingClass . getConstructor ( cls , View . class ); if ( debug ) Log . d ( TAG , \"HIT: Loaded binding class and constructor.\" ); } catch ( ClassNotFoundException e ) { if ( debug ) Log . d ( TAG , \"Not found. Trying superclass \" + cls . getSuperclass (). getName ()); bindingCtor = findBindingConstructorForClass ( cls . getSuperclass ()); } catch ( NoSuchMethodException e ) { throw new RuntimeException ( \"Unable to find binding constructor for \" + clsName , e ); } BINDINGS . put ( cls , bindingCtor ); return bindingCtor ; } \u8fd9\u91cc\u4ee3\u7801\u4e5f\u5f88\u7b80\u5355\uff0c\u5148\u4ece\u4e00\u4e2aHashMap\u4e5f\u5c31\u662fBINDINGS\u4e2d\u627e\uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd\uff0c\u5c31\u901a\u8fc7\u53cd\u5c04\u7684\u65b9\u6cd5\u65b0\u5efa\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7c7b\u7136\u540e\u53d6\u5176\u6784\u9020\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u7c7b\u7684\u7c7b\u540d\u662fclsName_ViewBinding\uff0c\u5177\u4f53\u5230\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5c31\u662f\u521b\u5efa\u4e86\u4e00\u4e2aFancyFragment_ViewBinding\u7684\u5bf9\u8c61\u3002\u4e4b\u540e\uff0c\u5c06\u8fd9\u4e2a\u5bf9\u8c61\u7684\u6784\u9020\u65b9\u6cd5\u5b58\u5165HashMap\u4e2d\u3002 \u90a3\u4e48\u8fd9\u4e2aBINDINGS\u662f\u4ec0\u4e48\u5462\uff1f\u7ffb\u6e90\u7801\u4e5f\u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u662f\u4e00\u4e2a\u9759\u6001\u7684HashMap\uff0c\u4ee5class\u4e3akey\uff0cvalue\u662f\u6784\u9020\u65b9\u6cd5\uff0c\u5728\u8fd9\u91cc\uff0c\u5176\u5b9e\u5b83\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u7f13\u5b58\uff0c\u53ea\u8981ButterKnife.bind(...)\u65b9\u6cd5\u8c03\u7528\u8fc7\u4e00\u6b21\uff0c\u4e0b\u6b21\u5c31\u53ef\u4ee5\u76f4\u63a5\u627e\u5230\u76f8\u5173\u7684_ViewBinding\u7684\u6784\u9020\u65b9\u6cd5\u3002 \u770b\u5230\u8fd9\u91cc\uff0c\u7a0d\u5fae\u6709\u4e00\u70b9\u70b9\u7591\u95ee\uff0c\u8fd9\u91cc \u4e3a\u4ec0\u4e48\u53ea\u7f13\u5b58\u6784\u9020\u65b9\u6cd5\uff0c\u518d\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316_ViewBinding\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u628a_ViewBinding\u5bf9\u8c61\u7f13\u5b58\u8d77\u6765\u5462\uff1f \u4e0b\u9762\u4f1a\u89e3\u7b54\u3002 \u5177\u4f53\u5230\u6211\u4eec\u6700\u5f00\u59cbFragment\u4e2dButterKnife\u4f7f\u7528\u7684\u4f8b\u5b50\uff0c\u5230\u8fd9\u91cc\u53ef\u4ee5\u6574\u7406\u4e00\u4e0b\u601d\u8def\u3002\u5728FancyFragment\u7684onCreateView(...)\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u8c03\u7528\u4e86ButterKnife.bind(this, view)\u65b9\u6cd5\uff0c\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u4e4b\u540e\uff0c\u6700\u7ec8\u662f\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316\u4e86\u4e00\u4e2a\u7c7b\uff0c\u5373FancyFragment_ViewBinding\u3002\u8fd9\u4e2a\u7c7b\u662f\u4ec0\u4e48\u5462\uff1f\u80af\u5b9a\u4e0d\u80fd\u5b9e\u4f8b\u5316\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u7c7b\uff0c\u7f16\u8bd1\u5b8c\u6210\u4e4b\u540e\uff0c\u5728\u9879\u76ee\u4e2d\u641c\u7d22\u4e00\u4e0b\u8fd9\u4e2a\u7c7b\uff0c\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u7c7b\u5728build\u6587\u4ef6\u5939\u4e0b\uff0c\u662f\u5728\u7f16\u8bd1\u671f\u81ea\u52a8\u751f\u6210\u7684\uff0c\u770b\u4e00\u4e0b\u8fd9\u4e2a\u7c7b\u5b9e\u73b0\uff1a public class FancyFragment_ViewBinding implements Unbinder { private FancyFragment target ; @UiThread public FancyFragment_ViewBinding ( FancyFragment target , View source ) { this . target = target ; target . button1 = Utils . findRequiredViewAsType ( source , R . id . button1 , \"field 'button1'\" , Button . class ); target . button2 = Utils . findRequiredViewAsType ( source , R . id . button2 , \"field 'button2'\" , Button . class ); } @Override @CallSuper public void unbind () { ChannelAudioFragment target = this . target ; if ( target == null ) throw new IllegalStateException ( \"Bindings already cleared.\" ); this . target = null ; target . button1 = null ; target . button2 = null ; } } \u770b\u5230\u8fd9\u91cc3\u4e2d\u7684\u95ee\u9898\u4e5f\u5c31\u5f88\u5f88\u597d\u89e3\u91ca\u4e86\uff0cViewBinding\u5bf9\u8c61\u4e2d\u4fdd\u5b58\u4e86targetClass\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662fFancyFragment_ViewBinding\u4e2d\u4fdd\u5b58\u4e86FancyFragment\u5bf9\u8c61\uff0c\u5982\u679c\u7f13\u5b58\u4e86targetClass\u5bf9\u8c61\uff0c\u5c31\u4f1a\u4f7f\u5f97FancyFragment\u88ab\u653e\u5728\u4e86\u9759\u6001\u7684HashMap\u4e2d\uff0c\u4e00\u76f4\u5f97\u4e0d\u5230\u91ca\u653e\uff0c\u6700\u7ec8\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u8fd9\u91cc\u4ee3\u7801\u4e5f\u5f88\u660e\u786e\uff0cUtils.findRequiredViewAsType(...)\u5c31\u662f\u8c03\u7528view.findViewById(id)\u65b9\u6cd5\uff0c\u7136\u540e\u901a\u8fc7\u53cd\u5c04\u8fdb\u884c\u4e00\u4e0b\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u8fd9\u6837\u5c31\u627e\u5230\u4e86id\u5bf9\u5e94\u7684view\uff0c\u7136\u540e\u590d\u5236\u7ed9targetClass\u4e2d\u6ce8\u89e3\u7684\u5c5e\u6027\u3002\u6574\u4e2a\u6d41\u7a0b\u4e5f\u5c31\u7701\u53bb\u4e86\u6211\u4eec\u624b\u5199findViewById(id)\u65b9\u6cd5\u7684\u8fc7\u7a0b\u3002 \u8fd9\u4e2aFancyFragment_ViewBinding\u7c7b\u662f\u600e\u4e48\u751f\u6210\u7684\u5462\uff1f\u6beb\u65e0\u7591\u95ee\u80af\u5b9a\u662f\u6839\u636e\u6ce8\u89e3\u751f\u6210\u7684\u4e86\uff0c\u5177\u4f53\u600e\u4e48\u751f\u6210\uff0c\u4ee5\u540e\u6709\u65f6\u95f4\u5728\u770b\u6e90\u7801\u3002","title":"\u539f\u7406\u89e3\u6790"},{"location":"pages/android/4-thirdpart/02-butterknife/#3","text":"\u7ecf\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6574\u4e2aButterKnife\u7684\u539f\u7406\u4e5f\u5c31\u6e05\u6670\u4e86\u3002\u7f16\u8bd1\u65f6\uff0c\u5bf9\u6709\u6ce8\u89e3\u7684target\u7c7b\u751f\u6210_ViewBinding\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u7684\u5c5e\u6027\u4e2d\u4fdd\u5b58\u4e86target\u5bf9\u8c61\uff0c\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u901a\u8fc7\u8c03\u7528findViewById\u627e\u5230View\uff0c\u5e76\u7ed9target\u7c7b\u6709\u6ce8\u89e3\u7684View\u8d4b\u503c\u3002 \u7ed1\u5b9a\u7684\u65f6\u5019\uff0c\u8c03\u7528ButterKnife.bind(target, source)\uff0c\u901a\u8fc7target\u7684\u7c7b\u627e\u5230\u7f13\u5b58\u7684target\u5bf9\u5e94\u7684_ViewBinding\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5e76\u5b9e\u4f8b\u5316\u5b83\uff0c\u6ca1\u627e\u5230\u7684\u5316\uff0c\u76f4\u63a5\u901a\u8fc7\u7c7b\u540d\u6765\u5b9e\u4f8b\u5316\uff0c\u7136\u540e\u7f13\u5b58\u3002\u5728\u5b9e\u4f8b\u5316_ViewBinding\u7c7b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c31\u76f4\u63a5\u8c03\u7528\u4e86findViewById\u65b9\u6cd5\u3002 \u4ee5\u4e0a\u662fBindView\u7684\u8fc7\u7a0b\uff0c\u5f53\u7136\uff0cButterKnife\u5176\u5b83\u7684\u7ed1\u5b9a\u65b9\u6cd5\uff0c\u6bd4\u5982\u7ed1\u5b9a\u70b9\u51fb\u4e8b\u4ef6\uff0c\u4e5f\u662f\u540c\u6837\u7684\u539f\u7406\u3002","title":"3. \u603b\u7ed3"},{"location":"pages/android/5-framework/00-android-source-code/","text":"\u6e90\u7801\u9605\u8bfb\u8ba1\u5212 \u83b7\u53d6\u6e90\u7801 \u53ef\u4ee5\u76f4\u63a5\u4eceSDK\u91cc\u63d0\u4f9b\u7684android.jar\u4e2d\u8bfb\uff0c\u5728Android Studio\u4e2d\u770b\uff0c\u4f46\u662f\u5176\u4e2d\u9690\u85cf\u7684\u65b9\u6cd5\u548c\u7c7b\u662f\u65e0\u6cd5\u8df3\u8f6c\u548c\u67e5\u770b\u7684\uff0c\u770b\u8d77\u6765\u4e0d\u662f\u5f88\u65b9\u4fbf\uff0c\u7c97\u770b\u53ef\u4ee5\uff0c\u5982\u679c\u60f3\u8981\u7ec6\u770b\uff0c\u8fd8\u662f\u9700\u8981\u628a\u6e90\u7801\u4e0b\u8f7d\u4e0b\u6765\uff0chttps://source.android.com/source/index.html\uff0c\u4e3b\u8981\u770b https://android.googlesource.com/platform/frameworks/base\u90e8\u5206 Google\u63d0\u4f9b\u7684\u6e90\u7801\u6bd4\u8f83\u5927\uff0c\u4e0b\u8f7d\u8d77\u6765\u4f1a\u6bd4\u8f83\u6162\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6e05\u534e\u7684\u955c\u50cf\uff0chttps://mirror.tuna.tsinghua.edu.cn/help/AOSP/ \u9605\u8bfb\u7684\u6df1\u5ea6 \u4ece\u5e73\u65f6\u5e94\u7528\u5f00\u53d1\u7684\u7ecf\u9a8c\u6765\u770b\uff0c\u8bfb\u5230Framework\u5c42\u5c31\u591f\u4e86\uff0c\u4eceHAL\u5c42\u518d\u5f80\u4e0b\u5c31\u5f88\u5c11\u7528\u5230\u4e86\u3002 \u9605\u8bfb\u7684\u5efa\u8bae \u5199\u7b14\u8bb0\uff0c\u52a0\u6df1\u5370\u8c61 \u591a\u603b\u7ed3\uff0c\u591a\u753b\u56fe \u9605\u8bfb\u7b14\u8bb0\u907f\u514d\u5927\u7247\u7684\u7c98\u8d34\u4ee3\u7801\uff0c\u907f\u514d\u5927\u7247\u6587\u5b57\u89e3\u91ca \u907f\u514d\u8fc7\u5ea6\u5173\u6ce8\u7ec6\u8282 \u5bf9\u6574\u4f53\u6d41\u7a0b\u8981\u6709\u5927\u81f4\u6982\u5ff5 \u5e26\u7740\u95ee\u9898\u548c\u76ee\u7684\u8bfb \u9605\u8bfb\u987a\u5e8f 1\u3001\u5e94\u7528\u542f\u52a8\u6d41\u7a0b 2\u3001Activity\u7684\u542f\u52a8\u6d41\u7a0b\u4e0e\u751f\u547d\u5468\u671f\u7ba1\u7406 3\u3001Window\u7684\u673a\u5236 4\u3001View\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e0e\u4e8b\u4ef6\u4f53\u7cfb 5\u3001UI\u5237\u65b0\u673a\u5236 6\u3001Fragment 7\u3001Context 8\u3001IPC\u4e0e\u6d88\u606f\u673a\u5236 9\u3001PMS\u5de5\u4f5c\u6d41\u7a0b 10\u3001IMS\u673a\u5236 12\u3001Activity\u6e90\u7801 13\u3001Service\u542f\u52a8\u4e0e\u7ed1\u5b9a 14\u3001BroadcastReceiver\u53d1\u9001\u4e0e\u63a5\u6536 15\u3001ContentProvider\u542f\u52a8\u6d41\u7a0b 16\u3001ListView\u4e0eRecyclerView 17\u3001Android\u865a\u62df\u673a","title":"\u6e90\u7801\u9605\u8bfb\u8ba1\u5212"},{"location":"pages/android/5-framework/00-android-source-code/#_1","text":"","title":"\u6e90\u7801\u9605\u8bfb\u8ba1\u5212"},{"location":"pages/android/5-framework/00-android-source-code/#_2","text":"\u53ef\u4ee5\u76f4\u63a5\u4eceSDK\u91cc\u63d0\u4f9b\u7684android.jar\u4e2d\u8bfb\uff0c\u5728Android Studio\u4e2d\u770b\uff0c\u4f46\u662f\u5176\u4e2d\u9690\u85cf\u7684\u65b9\u6cd5\u548c\u7c7b\u662f\u65e0\u6cd5\u8df3\u8f6c\u548c\u67e5\u770b\u7684\uff0c\u770b\u8d77\u6765\u4e0d\u662f\u5f88\u65b9\u4fbf\uff0c\u7c97\u770b\u53ef\u4ee5\uff0c\u5982\u679c\u60f3\u8981\u7ec6\u770b\uff0c\u8fd8\u662f\u9700\u8981\u628a\u6e90\u7801\u4e0b\u8f7d\u4e0b\u6765\uff0chttps://source.android.com/source/index.html\uff0c\u4e3b\u8981\u770b https://android.googlesource.com/platform/frameworks/base\u90e8\u5206 Google\u63d0\u4f9b\u7684\u6e90\u7801\u6bd4\u8f83\u5927\uff0c\u4e0b\u8f7d\u8d77\u6765\u4f1a\u6bd4\u8f83\u6162\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6e05\u534e\u7684\u955c\u50cf\uff0chttps://mirror.tuna.tsinghua.edu.cn/help/AOSP/","title":"\u83b7\u53d6\u6e90\u7801"},{"location":"pages/android/5-framework/00-android-source-code/#_3","text":"\u4ece\u5e73\u65f6\u5e94\u7528\u5f00\u53d1\u7684\u7ecf\u9a8c\u6765\u770b\uff0c\u8bfb\u5230Framework\u5c42\u5c31\u591f\u4e86\uff0c\u4eceHAL\u5c42\u518d\u5f80\u4e0b\u5c31\u5f88\u5c11\u7528\u5230\u4e86\u3002","title":"\u9605\u8bfb\u7684\u6df1\u5ea6"},{"location":"pages/android/5-framework/00-android-source-code/#_4","text":"\u5199\u7b14\u8bb0\uff0c\u52a0\u6df1\u5370\u8c61 \u591a\u603b\u7ed3\uff0c\u591a\u753b\u56fe \u9605\u8bfb\u7b14\u8bb0\u907f\u514d\u5927\u7247\u7684\u7c98\u8d34\u4ee3\u7801\uff0c\u907f\u514d\u5927\u7247\u6587\u5b57\u89e3\u91ca \u907f\u514d\u8fc7\u5ea6\u5173\u6ce8\u7ec6\u8282 \u5bf9\u6574\u4f53\u6d41\u7a0b\u8981\u6709\u5927\u81f4\u6982\u5ff5 \u5e26\u7740\u95ee\u9898\u548c\u76ee\u7684\u8bfb","title":"\u9605\u8bfb\u7684\u5efa\u8bae"},{"location":"pages/android/5-framework/00-android-source-code/#_5","text":"1\u3001\u5e94\u7528\u542f\u52a8\u6d41\u7a0b 2\u3001Activity\u7684\u542f\u52a8\u6d41\u7a0b\u4e0e\u751f\u547d\u5468\u671f\u7ba1\u7406 3\u3001Window\u7684\u673a\u5236 4\u3001View\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e0e\u4e8b\u4ef6\u4f53\u7cfb 5\u3001UI\u5237\u65b0\u673a\u5236 6\u3001Fragment 7\u3001Context 8\u3001IPC\u4e0e\u6d88\u606f\u673a\u5236 9\u3001PMS\u5de5\u4f5c\u6d41\u7a0b 10\u3001IMS\u673a\u5236 12\u3001Activity\u6e90\u7801 13\u3001Service\u542f\u52a8\u4e0e\u7ed1\u5b9a 14\u3001BroadcastReceiver\u53d1\u9001\u4e0e\u63a5\u6536 15\u3001ContentProvider\u542f\u52a8\u6d41\u7a0b 16\u3001ListView\u4e0eRecyclerView 17\u3001Android\u865a\u62df\u673a","title":"\u9605\u8bfb\u987a\u5e8f"},{"location":"pages/android/5-framework/01-system-boot/","text":"\u542f\u52a8\u6d41\u7a0b\u56fe \u542f\u52a8\u6d41\u7a0b Bootloader\u542f\u52a8\uff0c\u542f\u52a8\u5185\u6838\uff0c\u505a\u4e00\u4e9b\u521d\u59cb\u5316\u5de5\u4f5c\uff1b Init\u8fdb\u7a0b\u542f\u52a8\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u7528\u6237\u8fdb\u7a0b\u3002 Init\u8fdb\u7a0b\u4e2d\u4f1a\u89e3\u6790rc\u6587\u4ef6\uff0c\u521d\u59cb\u5316\u5c5e\u6027\u670d\u52a1\uff0c\u542f\u52a8zygote\u548cServiceManager Init\u8fdb\u7a0bfork\u51faZygote\u8fdb\u7a0b \u6700\u521d\u8fd9\u4e2a\u8fdb\u7a0b\u53ebapp_process\uff0c\u4e4b\u540e\u6539\u540d\u53ebzygote\uff1b \u542f\u52a8AndroidRuntime\uff0c\u8fd9\u662fAppRuntime\u7684\u5b50\u7c7b \u542f\u52a8Java\u865a\u62df\u673a\uff0c\u8bbe\u7f6e\u542f\u52a8\u7c7b\u4e3aZygoteInit\uff0c\u8bbe\u7f6ejvm\u7684\u542f\u52a8\u53c2\u6570\uff0c\u65e9\u671f\u7684Jvm\u6700\u5927\u5806\u5185\u5b58\u4e3a64MB \u6ce8\u518cJNI\u51fd\u6570 \u8fd0\u884cZygoteInit\u7c7b\uff0c\u5f00\u59cb\u8fdb\u5165Java\u865a\u62df\u673a\u4e2d Java\u4e2d\uff0cZygote\u4e3b\u8981\u5e72\u4e86\u4ee5\u4e0b\u51e0\u4ef6\u4e8b \u5f00\u59cbsocket\u8fde\u63a5\uff0c\u7b49\u5f85\u5904\u7406\u6d88\u606f \u9884\u52a0\u8f7d\u7c7b\u548c\u8d44\u6e90\uff0c\u8fd9\u4e2a\u9636\u6bb5\u7279\u522b\u8017\u65f6 fork\u51fasystem_server\u8fdb\u7a0b\uff0c\u5728system_server\u8fdb\u7a0b\u4e2d\uff0c\u6e05\u7406\u6389socket\u7b49\u8d44\u6e90 \u8fd0\u884crunSelectLoop\uff0c\u7b49\u5f85\u5904\u7406\u8bf7\u6c42","title":"\u7cfb\u7edf\u542f\u52a8\u6d41\u7a0b"},{"location":"pages/android/5-framework/01-system-boot/#_1","text":"","title":"\u542f\u52a8\u6d41\u7a0b\u56fe"},{"location":"pages/android/5-framework/01-system-boot/#_2","text":"Bootloader\u542f\u52a8\uff0c\u542f\u52a8\u5185\u6838\uff0c\u505a\u4e00\u4e9b\u521d\u59cb\u5316\u5de5\u4f5c\uff1b Init\u8fdb\u7a0b\u542f\u52a8\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u7528\u6237\u8fdb\u7a0b\u3002 Init\u8fdb\u7a0b\u4e2d\u4f1a\u89e3\u6790rc\u6587\u4ef6\uff0c\u521d\u59cb\u5316\u5c5e\u6027\u670d\u52a1\uff0c\u542f\u52a8zygote\u548cServiceManager Init\u8fdb\u7a0bfork\u51faZygote\u8fdb\u7a0b \u6700\u521d\u8fd9\u4e2a\u8fdb\u7a0b\u53ebapp_process\uff0c\u4e4b\u540e\u6539\u540d\u53ebzygote\uff1b \u542f\u52a8AndroidRuntime\uff0c\u8fd9\u662fAppRuntime\u7684\u5b50\u7c7b \u542f\u52a8Java\u865a\u62df\u673a\uff0c\u8bbe\u7f6e\u542f\u52a8\u7c7b\u4e3aZygoteInit\uff0c\u8bbe\u7f6ejvm\u7684\u542f\u52a8\u53c2\u6570\uff0c\u65e9\u671f\u7684Jvm\u6700\u5927\u5806\u5185\u5b58\u4e3a64MB \u6ce8\u518cJNI\u51fd\u6570 \u8fd0\u884cZygoteInit\u7c7b\uff0c\u5f00\u59cb\u8fdb\u5165Java\u865a\u62df\u673a\u4e2d Java\u4e2d\uff0cZygote\u4e3b\u8981\u5e72\u4e86\u4ee5\u4e0b\u51e0\u4ef6\u4e8b \u5f00\u59cbsocket\u8fde\u63a5\uff0c\u7b49\u5f85\u5904\u7406\u6d88\u606f \u9884\u52a0\u8f7d\u7c7b\u548c\u8d44\u6e90\uff0c\u8fd9\u4e2a\u9636\u6bb5\u7279\u522b\u8017\u65f6 fork\u51fasystem_server\u8fdb\u7a0b\uff0c\u5728system_server\u8fdb\u7a0b\u4e2d\uff0c\u6e05\u7406\u6389socket\u7b49\u8d44\u6e90 \u8fd0\u884crunSelectLoop\uff0c\u7b49\u5f85\u5904\u7406\u8bf7\u6c42","title":"\u542f\u52a8\u6d41\u7a0b"},{"location":"pages/android/5-framework/02-activity-source-code/","text":"Activity\u7684\u542f\u52a8\u6d41\u7a0b","title":"Activity\u7684\u542f\u52a8\u6d41\u7a0b"},{"location":"pages/android/5-framework/02-activity-source-code/#activity","text":"","title":"Activity\u7684\u542f\u52a8\u6d41\u7a0b"},{"location":"pages/android/6-tools/00-tools/","text":"Android\u6253\u5305 \u6253\u5305\u6d41\u7a0b \u7f16\u8bd1\u5de5\u5177 freeline laoutcast BUCK instant-run https://developer.aliyun.com/article/59122","title":"Android\u6253\u5305"},{"location":"pages/android/6-tools/00-tools/#android","text":"","title":"Android\u6253\u5305"},{"location":"pages/android/6-tools/00-tools/#_1","text":"","title":"\u6253\u5305\u6d41\u7a0b"},{"location":"pages/android/6-tools/00-tools/#_2","text":"","title":"\u7f16\u8bd1\u5de5\u5177"},{"location":"pages/android/6-tools/00-tools/#freeline","text":"","title":"freeline"},{"location":"pages/android/6-tools/00-tools/#laoutcast","text":"","title":"laoutcast"},{"location":"pages/android/6-tools/00-tools/#buck","text":"","title":"BUCK"},{"location":"pages/android/6-tools/00-tools/#instant-run","text":"https://developer.aliyun.com/article/59122","title":"instant-run"},{"location":"pages/android/6-tools/01-apk-build/","text":"apk\u7684\u6253\u5305\u6d41\u7a0b \u603b\u4f53\u6d41\u7a0b \u4e3b\u8981\u6b65\u9aa4 \u53c2\u8003 \u6398\u91d1. Android Apk \u7f16\u8bd1\u6253\u5305\u6d41\u7a0b\uff0c\u4e86\u89e3\u4e00\u4e0b~ Android\u6253\u5305\u6d41\u7a0b","title":"\u6253\u5305\u6d41\u7a0b"},{"location":"pages/android/6-tools/01-apk-build/#apk","text":"","title":"apk\u7684\u6253\u5305\u6d41\u7a0b"},{"location":"pages/android/6-tools/01-apk-build/#_1","text":"","title":"\u603b\u4f53\u6d41\u7a0b"},{"location":"pages/android/6-tools/01-apk-build/#_2","text":"","title":"\u4e3b\u8981\u6b65\u9aa4"},{"location":"pages/android/6-tools/01-apk-build/#_3","text":"\u6398\u91d1. Android Apk \u7f16\u8bd1\u6253\u5305\u6d41\u7a0b\uff0c\u4e86\u89e3\u4e00\u4e0b~ Android\u6253\u5305\u6d41\u7a0b","title":"\u53c2\u8003"},{"location":"pages/android/6-tools/02-apk-install/","text":"Android \u5404\u7248\u672c\u7684\u5b89\u88c5\u901f\u5ea6 5.0\u4e4b\u524d\uff0cAndroid\u4f7f\u7528\u7684\u662fDalvik\u865a\u62df\u673a\uff0c\u4ee3\u7801\u6267\u884c\u65f6\u4f7f\u7528JIT\u7f16\u8bd1(Just in Time)\uff0c\u5373\u5728\u8fd0\u884c\u65f6\u5b9e\u65f6\u5c06\u5b57\u8282\u7801\u7f16\u8bd1\u6210\u64cd\u4f5c\u7cfb\u7edf\u53ef\u6267\u884c\u7684\u673a\u5668\u7801\uff0c\u56e0\u6b64\u8868\u73b0\u4e3a\u8fd0\u884c\u65f6\u6162\u3002\u7531\u4e8e\u6ca1\u6709\u63d0\u524d\u7f16\u8bd1\uff0c\u5b89\u88c5\u65f6\u6ca1\u6709\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u5b89\u88c5\u901f\u5ea6\u5f88\u5feb\u3002 5.0\u5f00\u59cb\uff0cAndroid\u4f7f\u7528ART\u865a\u62df\u5668\u4ee3\u66ff\u4e86Dalvik\uff0c\u4e3a\u4e86\u4f18\u5316\u8fd0\u884c\u65f6\u901f\u5ea6\uff0cART\u4f7f\u7528\u4e86AOT\u7684\u7f16\u8bd1\u65b9\u5f0f(Ahead of Time)\uff0c\u5728\u5b89\u88c5\u65f6\u5bf9\u5b89\u88c5\u5305\u7684\u5b57\u8282\u7801\u8fdb\u884c\u7f16\u8bd1\uff0c\u751f\u6210\u64cd\u4f5c\u7cfb\u7edf\u53ef\u6267\u884c\u7684\u673a\u5668\u7801\uff0c\u56e0\u6b64\u8fd0\u884c\u65f6\u65e0\u9700\u7b49\u5f85\u7f16\u8bd1\uff0c\u53ef\u4ee5\u76f4\u63a5\u6267\u884c\uff0c\u8fd0\u884c\u901f\u5ea6\u5927\u5927\u63d0\u5347\u3002\u540c\u65f6\u5e26\u6765\u7684\u5f0a\u75c5\u662f\u5b89\u88c5\u6162\uff0c\u7531\u4e8e\u9700\u8981\u989d\u5916\u751f\u6210\u673a\u5668\u7801\uff0c\u5b89\u88c5\u540e\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u4e5f\u66f4\u5927\uff0c\u6709\u6570\u636e\u7edf\u8ba1\uff0cART\u4e0a\u5b89\u88c5\u7684\u5e94\u7528\u6bd4Dalvik\u5360\u7528\u7684\u5b58\u50a8\u5927\u4e8610%\u3002 7.0\u540e\uff0c\u4e3a\u4e86\u89e3\u51b3ART\u865a\u62df\u673aapk\u5b89\u88c5\u6162\u7684\u95ee\u9898\uff0cGoogle\u53c8\u505a\u4e86\u4e00\u4e9b\u7b56\u7565\u4f18\u5316\u3002\u5728\u5b89\u88c5\u65f6\u4e0d\u4f1a\u7f16\u8bd1\u5168\u91cf\u7684apk\uff0c\u4ec5\u7f16\u8bd1\u5fc5\u8981\u7684\u90e8\u5206\uff0c\u5269\u4f59\u7684\u90e8\u5206\u5728\u8bbe\u5907\u95f2\u65f6\u8fdb\u884c\u7f16\u8bd1\uff0c\u5982\u679c\u8fd0\u884c\u65f6\u53d1\u73b0\u4ee3\u7801\u6ca1\u6709\u88ab\u7f16\u8bd1\uff0c\u518d\u5b9e\u65f6\u7f16\u8bd1\uff0c\u8fd9\u6837\u5c31\u540c\u65f6\u4f18\u5316\u4e86\u5b89\u88c5\u901f\u5ea6\uff0c\u4e5f\u4f7f\u5f97\u8fd0\u884c\u65f6\u8fd0\u884c\u5f88\u5feb\u30027.0\u4e0a\u4f7f\u7528\u7b56\u7565\u5b9e\u9645\u662fJIT\u548cAOT\u7684\u6df7\u5408\u6a21\u5f0f\u3002","title":"apk\u7684\u5b89\u88c5"},{"location":"pages/android/6-tools/02-apk-install/#android","text":"5.0\u4e4b\u524d\uff0cAndroid\u4f7f\u7528\u7684\u662fDalvik\u865a\u62df\u673a\uff0c\u4ee3\u7801\u6267\u884c\u65f6\u4f7f\u7528JIT\u7f16\u8bd1(Just in Time)\uff0c\u5373\u5728\u8fd0\u884c\u65f6\u5b9e\u65f6\u5c06\u5b57\u8282\u7801\u7f16\u8bd1\u6210\u64cd\u4f5c\u7cfb\u7edf\u53ef\u6267\u884c\u7684\u673a\u5668\u7801\uff0c\u56e0\u6b64\u8868\u73b0\u4e3a\u8fd0\u884c\u65f6\u6162\u3002\u7531\u4e8e\u6ca1\u6709\u63d0\u524d\u7f16\u8bd1\uff0c\u5b89\u88c5\u65f6\u6ca1\u6709\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u5b89\u88c5\u901f\u5ea6\u5f88\u5feb\u3002 5.0\u5f00\u59cb\uff0cAndroid\u4f7f\u7528ART\u865a\u62df\u5668\u4ee3\u66ff\u4e86Dalvik\uff0c\u4e3a\u4e86\u4f18\u5316\u8fd0\u884c\u65f6\u901f\u5ea6\uff0cART\u4f7f\u7528\u4e86AOT\u7684\u7f16\u8bd1\u65b9\u5f0f(Ahead of Time)\uff0c\u5728\u5b89\u88c5\u65f6\u5bf9\u5b89\u88c5\u5305\u7684\u5b57\u8282\u7801\u8fdb\u884c\u7f16\u8bd1\uff0c\u751f\u6210\u64cd\u4f5c\u7cfb\u7edf\u53ef\u6267\u884c\u7684\u673a\u5668\u7801\uff0c\u56e0\u6b64\u8fd0\u884c\u65f6\u65e0\u9700\u7b49\u5f85\u7f16\u8bd1\uff0c\u53ef\u4ee5\u76f4\u63a5\u6267\u884c\uff0c\u8fd0\u884c\u901f\u5ea6\u5927\u5927\u63d0\u5347\u3002\u540c\u65f6\u5e26\u6765\u7684\u5f0a\u75c5\u662f\u5b89\u88c5\u6162\uff0c\u7531\u4e8e\u9700\u8981\u989d\u5916\u751f\u6210\u673a\u5668\u7801\uff0c\u5b89\u88c5\u540e\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u4e5f\u66f4\u5927\uff0c\u6709\u6570\u636e\u7edf\u8ba1\uff0cART\u4e0a\u5b89\u88c5\u7684\u5e94\u7528\u6bd4Dalvik\u5360\u7528\u7684\u5b58\u50a8\u5927\u4e8610%\u3002 7.0\u540e\uff0c\u4e3a\u4e86\u89e3\u51b3ART\u865a\u62df\u673aapk\u5b89\u88c5\u6162\u7684\u95ee\u9898\uff0cGoogle\u53c8\u505a\u4e86\u4e00\u4e9b\u7b56\u7565\u4f18\u5316\u3002\u5728\u5b89\u88c5\u65f6\u4e0d\u4f1a\u7f16\u8bd1\u5168\u91cf\u7684apk\uff0c\u4ec5\u7f16\u8bd1\u5fc5\u8981\u7684\u90e8\u5206\uff0c\u5269\u4f59\u7684\u90e8\u5206\u5728\u8bbe\u5907\u95f2\u65f6\u8fdb\u884c\u7f16\u8bd1\uff0c\u5982\u679c\u8fd0\u884c\u65f6\u53d1\u73b0\u4ee3\u7801\u6ca1\u6709\u88ab\u7f16\u8bd1\uff0c\u518d\u5b9e\u65f6\u7f16\u8bd1\uff0c\u8fd9\u6837\u5c31\u540c\u65f6\u4f18\u5316\u4e86\u5b89\u88c5\u901f\u5ea6\uff0c\u4e5f\u4f7f\u5f97\u8fd0\u884c\u65f6\u8fd0\u884c\u5f88\u5feb\u30027.0\u4e0a\u4f7f\u7528\u7b56\u7565\u5b9e\u9645\u662fJIT\u548cAOT\u7684\u6df7\u5408\u6a21\u5f0f\u3002","title":"Android \u5404\u7248\u672c\u7684\u5b89\u88c5\u901f\u5ea6"},{"location":"pages/cross-platform/none/","text":"\u8de8\u5e73\u53f0","title":"\u656c\u8bf7\u671f\u5f85"},{"location":"pages/cs/algorithm/none/","text":"\u7b97\u6cd5","title":"\u656c\u8bf7\u671f\u5f85"},{"location":"pages/cs/cs-basic/none/","text":"\u8ba1\u7b97\u673a\u57fa\u7840","title":"\u656c\u8bf7\u671f\u5f85"},{"location":"pages/cs/internet/HTTP/","text":"HTTP\u534f\u8bae\u8be6\u89e3 HTTP\u7684\u53d1\u5c55\u5386\u53f2 HTTP/0.9 \u901a\u8fc7TCP/IP\uff08\u6216\u8005\u7c7b\u4f3c\u7684\u9762\u5411\u8fde\u63a5\u7684\u670d\u52a1\uff09\u4e0e\u670d\u52a1\u5668\u548c\u7aef\u53e3\uff08\u53ef\u9009\uff0c\u9ed8\u8ba480\uff09\u5efa\u7acb\u8fde\u63a5\uff1b \u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u884cASCII\u6587\u672c\uff0c\u5305\u62ecGET\u3001\u6587\u6863\u5730\u5740\uff08\u65e0\u7a7a\u683c\uff09\u3001\u56de\u8f66\u7b26\uff08\u53ef\u9009\uff09\u548c\u6362\u884c\u7b26\uff1b \u670d\u52a1\u7aef\u4f7f\u7528HTML\u683c\u5f0f\u7684\u6d88\u606f\u54cd\u5e94\uff0c\u8be5\u6d88\u606f\u88ab\u5b9a\u4e49\u4e3a\u201cASCII\u5b57\u7b26\u7684\u5b57\u8282\u6d41\u201d\uff1b \u901a\u8fc7\u670d\u52a1\u5668\u5173\u95ed\u8fde\u63a5\u6765\u7ec8\u6b62\u6d88\u606f\uff1b \u9519\u8bef\u54cd\u5e94\u4ee5\u53ef\u8bfb\u7684\u6587\u672c\u663e\u793a\uff0c\u4f7f\u7528HTML\u8bed\u6cd5\uff0c\u9664\u4e86\u6587\u672c\u5185\u5bb9\uff0c\u65e0\u6cd5\u533a\u5206\u9519\u8bef\u54cd\u5e94\u548c\u6b63\u786e\u54cd\u5e94\uff1b \u8bf7\u6c42\u65f6\u5e42\u7b49\u7684\uff1b \u670d\u52a1\u5668\u4e0d\u9700\u8981\u5728\u65ad\u5f00\u8fde\u63a5\u4e4b\u540e\u5b58\u50a8\u4efb\u4f55\u8bf7\u6c42\u7684\u4fe1\u606f\uff1b HTTP/1.0 \u66f4\u591a\u8bf7\u6c42\u65b9\u6cd5\u3002\u9664\u4e86HTTP 0.9\u4e2d\u7684GET\u65b9\u6cd5\uff0c\u65b0\u589e\u4e86HEAD\u548cPOST\u65b9\u6cd5\uff1b \u4e3a\u6240\u6709\u7684\u6d88\u606f\u589e\u52a0\u4e86\u7248\u672c\u53f7\u5b57\u6bb5\u3002\u8be5\u5b57\u6bb5\u662f\u53ef\u9009\u7684\uff0c\u4e3a\u4e86\u5411\u540e\u517c\u5bb9\uff0c\u9ed8\u8ba4\u4f7f\u7528HTTP/0.9\uff1b HTTP\u9996\u90e8\uff0c\u5373\u8bf7\u6c42\u5934\u3002\u53ef\u4ee5\u4e0e\u8bf7\u6c42\u548c\u54cd\u5e94\u4e00\u8d77\u53d1\u9001\uff0c\u4ee5\u63d0\u4f9b\u6b63\u5728\u6267\u884c\u7684\u8bf7\u6c42\u6216\u53d1\u9001\u54cd\u5e94\u76f8\u5173\u7684\u66f4\u591a\u4fe1\u606f\uff1b \u4e00\u4e2a\u4e09\u4f4d\u6574\u6570\u7684\u54cd\u5e94\u72b6\u6001\u7801\u3002 HTTP/1.0 \u4e2d\u7684\u54cd\u5e94\u7801\uff1a \u5206\u7c7b \u503c \u63cf\u8ff0 \u8be6\u60c5 1xx\uff08\u4fe1\u606f\uff09 N/A N/A HTTP/1.0\u4e2d\u6ca1\u5b9a\u4e491xx\u76f8\u5173\u7684\u72b6\u6001\u7801\uff0c\u4f46\u662f\u5b9a\u4e49\u4e86\u6b64\u5206\u7c7b 2xx\uff08\u6210\u529f\uff09 200 201 202 204 OK Created Acepted No content \u8bf7\u6c42\u6210\u529f \u6b64\u72b6\u6001\u7801\u5e94\u5f53\u7531POST\u8bf7\u6c42\u8fd4\u56de \u8bf7\u6c42\u6b63\u5728\u5904\u7406\u4e2d\uff0c\u8fd8\u672a\u5904\u7406\u5b8c \u5df2\u63a5\u6536\u8bf7\u6c42\uff0c\u6b63\u5728\u5904\u7406\u4e2d\uff0c\u4f46\u54cd\u5e94\u65e0\u6d88\u606f\u4f53 3xx\uff08\u91cd\u5b9a\u5411\uff09 300 301 302 304 Multiple choices Moved permanently Moved temporarily Not Modified \u8d44\u6e90\u5728\u591a\u5904\u53ef\u7528\uff0c\u54cd\u5e94\u4e2d\u63d0\u4f9b\u4e86\u7684\u66f4\u591a\u4fe1\u606f \u54cd\u5e94Header\u4e2dLocation\u63d0\u4f9b\u8d44\u6e90\u65b0\u5730\u5740 \u54cd\u5e94Header\u4e2dLocation\u63d0\u4f9b\u8d44\u6e90\u65b0\u5730\u5740 \u6761\u4ef6\u54cd\u5e94\uff0c\u65e0\u9700\u53d1\u9001\u6b63\u6587 4xx\uff08\u5ba2\u6237\u7aef\u9519\u8bef\uff09 400 401 403 404 Bad request Unauthorized Forbidden Not Found \u670d\u52a1\u7aef\u65e0\u6cd5\u7406\u89e3\u8bf7\u6c42\u6216\u8bf7\u6c42\u53c2\u6570\u6709\u8bef \u8bf7\u6c42\u672a\u88ab\u6388\u6743\u8bbf\u95ee \u901a\u8fc7\u6388\u6743\uff0c\u4f46\u662f\u6ca1\u6709\u8bbf\u95ee\u8d44\u6e90\u7684\u6743\u9650 \u8d44\u6e90\u627e\u4e0d\u5230 5xx\uff08\u670d\u52a1\u7aef\u9519\u8bef\uff09 500 501 502 503 Internal server error Not implemented Bad gateway Service unavailable \u670d\u52a1\u7aef\u5185\u90e8\u9519\u8bef\uff0c\u8bf7\u6c42\u65e0\u6cd5\u5b8c\u6210 \u670d\u52a1\u7aef\u4e0d\u8bc6\u522b\u8bf7\u6c42\uff08\u5982\u672a\u5b9e\u73b0\u7684HTTP\u65b9\u6cd5\uff09 \u7f51\u5173\u6216\u4ee3\u7406\u670d\u52a1\u6536\u5230\u4e0a\u6e38\u670d\u52a1\u9519\u8bef \u7531\u4e8e\u8d1f\u8f7d\u8fc7\u9ad8\u6216\u8005\u7ef4\u62a4\uff0c\u670d\u52a1\u7aef\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42 HTTP/1.1 \u5f3a\u5236\u589e\u52a0Host\u9996\u90e8 \u6301\u4e45\u8fde\u63a5\uff08Keep-Alive\uff09 \u65b0\u7684\u8bf7\u6c42\u65b9\u6cd5\uff0c\u5982PUT\u3001OPTIONS\u3001CONNECT\u3001TRACE\u3001DELETE \u66f4\u4e30\u5bcc\u7684\u7f13\u51b2\u65b9\u6cd5\uff0c\u6bd4\u5982Cache-Control\u548cHTTP/1.0\u4e2d\u7684Expires\u9009\u9879\u66f4\u591a HTTP cookies\uff0c\u5141\u8bb8HTTP\u7ef4\u62a4\u72b6\u6001 \u5f15\u5165\u5b57\u7b26\u96c6\uff0c\u5373Header\u4e2dCharset\u5b57\u6bb5 \u652f\u6301\u4ee3\u7406 \u652f\u6301\u6743\u9650\u9a8c\u8bc1 \u65b0\u7684\u72b6\u6001\u7801 \u5c3e\u968f\u9996\u90e8 HTTPS HTTPS\u5bf9HTTP\u7684\u6d88\u606f\u6dfb\u52a0\u4e86\u4e09\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff1a \u52a0\u5bc6 \u2013\u2013\u2013\u2013 \u4f20\u8f93\u8fc7\u7a0b\u4e2d\u7b2c\u4e09\u65b9\u65e0\u6cd5\u8bfb\u53d6\u4fe1\u606f \u5b8c\u6574\u6027\u6821\u9a8c \u2013\u2013\u2013\u2013 \u6d88\u606f\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u672a\u88ab\u66f4\u6539\uff0c\u56e0\u4e3a\u6574\u4e2a\u6d88\u606f\u5df2\u7ecf\u8fc7\u6570\u5b57\u7b7e\u540d\uff0c\u5e76\u4e14\u8be5\u7b7e\u540d\u5728\u89e3\u5bc6\u4e4b\u524d\u5df2\u901a\u8fc7\u52a0\u5bc6\u9a8c\u8bc1 \u8eab\u4efd\u9a8c\u8bc1 \u2013\u2013\u2013\u2013 \u670d\u52a1\u5668\u4e0d\u662f\u4f2a\u88c5\u7684 SSL\u3001TLS\u3001HTTPS\u548cHTTP HTTPS\u4f7f\u7528SSL\u6216\u8005TLS\u6765\u52a0\u5bc6\u3002SSLv1\u53ea\u5728Netscape\u5185\u90e8\u53d1\u5e03\uff0c1995\u5e74\u53d1\u5e03\u4e86SSLv2\uff0c1996\u5e74\u53d1\u5e03\u4e86\u66f4\u5b89\u5168\u7684SSLv3\u3002\u7531\u4e8eSSL\u7531Netscape\u62e5\u6709\uff0c\u56e0\u6b64\u5b83\u4e0d\u662f\u4e92\u8054\u7f51\u6807\u51c6\uff0c\u4f46\u7531\u4e8eSSLv3\u88ab\u666e\u904d\u4f7f\u7528\uff0c\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\u5176\u90fd\u662f\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6\u3002\u4e4b\u540eSSL\u88ab\u6807\u51c6\u5316\u4e3aTLS\u3002\u57282014\u5e74\uff0cSSLv3\u4e2d\u53d1\u73b0\u4e86\u91cd\u5927\u5b89\u5168\u6f0f\u6d1e\uff0c\u56e0\u6b64\u88ab\u8981\u6c42\u505c\u6b62\u4f7f\u7528\uff0c\u6d4f\u89c8\u5668\u4e5f\u505c\u6b62\u4e86\u5bf9\u5176\u652f\u6301\u3002 TLSv1.0\u548cSSL\u7c7b\u4f3c\uff0c\u4f46\u662f\u5b83\u4eec\u4e0d\u517c\u5bb9\u3002TLS1.1\u548cTLS1.2\u5206\u522b\u57282006\u5e74\u548c2008\u5e74\u63a8\u51fa\u3002TLSv3\u57282018\u5e74\u88ab\u6279\u51c6\u4e3a\u6807\u51c6\u3002 HTTPS\u8eab\u4efd\u9a8c\u8bc1\u6d41\u7a0b \u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u53d1\u9001\u4e00\u4e2a\u6d88\u606f \u670d\u52a1\u7aef\u8fd4\u56de\u4e00\u4e2a\u6570\u5b57\u8bc1\u4e66\uff08\u5305\u542b\u9881\u5e03\u8bc1\u4e66\u7684\u673a\u6784CA\uff0c\u8bc1\u4e66\u6709\u6548\u671f\uff0c\u516c\u94a5\uff0c\u8bc1\u4e66\u6240\u6709\u8005\uff0c \u7b7e\u540d\u7b49\u4fe1\u606f\uff09 \u5ba2\u6237\u7aef\u8bfb\u53d6\u8bc1\u4e66\u7684\u6240\u6709\u8005\uff0c\u6709\u6548\u671f\uff0c\u7b7e\u540d\u7b49\u8fdb\u884c\u9a8c\u8bc1 \u5ba2\u6237\u7aef\u83b7\u53d6\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5185\u7f6e\u7684\u53d7\u4fe1\u4efb\u7684\u8bc1\u4e66\u673a\u6784\uff08CA\uff09\uff0c\u4e0e\u6536\u5230\u7684\u8bc1\u4e66\u5bf9\u6bd4\uff0c\u6821\u9a8c\u8bc1\u4e66\u771f\u5b9e\u6027 \u627e\u4e0d\u5230\u8bc1\u4e66\u62a5\u9519\uff0c\u7ed9\u51fa\u4e0d\u5b89\u5168\u63d0\u793a \u627e\u5230\u8bc1\u4e66\uff0c\u7528\u672c\u5730CA\u7684\u516c\u94a5\u5bf9\u6536\u5230\u7684\u8bc1\u4e66\u7684\u7b7e\u540d\u89e3\u5bc6 \u5ba2\u6237\u7aef\u7528\u76f8\u540c\u7684hash\u7b97\u6cd5\u8ba1\u7b97\u6536\u5230\u8bc1\u4e66\u7684hash\uff0c\u4e0e\u6536\u5230\u7684\u8bc1\u4e66\u4e2d\u7684hash\u5bf9\u6bd4","title":"HTTP\u534f\u8bae\u8be6\u89e3"},{"location":"pages/cs/internet/HTTP/#http","text":"","title":"HTTP\u534f\u8bae\u8be6\u89e3"},{"location":"pages/cs/internet/HTTP/#http_1","text":"","title":"HTTP\u7684\u53d1\u5c55\u5386\u53f2"},{"location":"pages/cs/internet/HTTP/#http09","text":"\u901a\u8fc7TCP/IP\uff08\u6216\u8005\u7c7b\u4f3c\u7684\u9762\u5411\u8fde\u63a5\u7684\u670d\u52a1\uff09\u4e0e\u670d\u52a1\u5668\u548c\u7aef\u53e3\uff08\u53ef\u9009\uff0c\u9ed8\u8ba480\uff09\u5efa\u7acb\u8fde\u63a5\uff1b \u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u884cASCII\u6587\u672c\uff0c\u5305\u62ecGET\u3001\u6587\u6863\u5730\u5740\uff08\u65e0\u7a7a\u683c\uff09\u3001\u56de\u8f66\u7b26\uff08\u53ef\u9009\uff09\u548c\u6362\u884c\u7b26\uff1b \u670d\u52a1\u7aef\u4f7f\u7528HTML\u683c\u5f0f\u7684\u6d88\u606f\u54cd\u5e94\uff0c\u8be5\u6d88\u606f\u88ab\u5b9a\u4e49\u4e3a\u201cASCII\u5b57\u7b26\u7684\u5b57\u8282\u6d41\u201d\uff1b \u901a\u8fc7\u670d\u52a1\u5668\u5173\u95ed\u8fde\u63a5\u6765\u7ec8\u6b62\u6d88\u606f\uff1b \u9519\u8bef\u54cd\u5e94\u4ee5\u53ef\u8bfb\u7684\u6587\u672c\u663e\u793a\uff0c\u4f7f\u7528HTML\u8bed\u6cd5\uff0c\u9664\u4e86\u6587\u672c\u5185\u5bb9\uff0c\u65e0\u6cd5\u533a\u5206\u9519\u8bef\u54cd\u5e94\u548c\u6b63\u786e\u54cd\u5e94\uff1b \u8bf7\u6c42\u65f6\u5e42\u7b49\u7684\uff1b \u670d\u52a1\u5668\u4e0d\u9700\u8981\u5728\u65ad\u5f00\u8fde\u63a5\u4e4b\u540e\u5b58\u50a8\u4efb\u4f55\u8bf7\u6c42\u7684\u4fe1\u606f\uff1b","title":"HTTP/0.9"},{"location":"pages/cs/internet/HTTP/#http10","text":"\u66f4\u591a\u8bf7\u6c42\u65b9\u6cd5\u3002\u9664\u4e86HTTP 0.9\u4e2d\u7684GET\u65b9\u6cd5\uff0c\u65b0\u589e\u4e86HEAD\u548cPOST\u65b9\u6cd5\uff1b \u4e3a\u6240\u6709\u7684\u6d88\u606f\u589e\u52a0\u4e86\u7248\u672c\u53f7\u5b57\u6bb5\u3002\u8be5\u5b57\u6bb5\u662f\u53ef\u9009\u7684\uff0c\u4e3a\u4e86\u5411\u540e\u517c\u5bb9\uff0c\u9ed8\u8ba4\u4f7f\u7528HTTP/0.9\uff1b HTTP\u9996\u90e8\uff0c\u5373\u8bf7\u6c42\u5934\u3002\u53ef\u4ee5\u4e0e\u8bf7\u6c42\u548c\u54cd\u5e94\u4e00\u8d77\u53d1\u9001\uff0c\u4ee5\u63d0\u4f9b\u6b63\u5728\u6267\u884c\u7684\u8bf7\u6c42\u6216\u53d1\u9001\u54cd\u5e94\u76f8\u5173\u7684\u66f4\u591a\u4fe1\u606f\uff1b \u4e00\u4e2a\u4e09\u4f4d\u6574\u6570\u7684\u54cd\u5e94\u72b6\u6001\u7801\u3002 HTTP/1.0 \u4e2d\u7684\u54cd\u5e94\u7801\uff1a \u5206\u7c7b \u503c \u63cf\u8ff0 \u8be6\u60c5 1xx\uff08\u4fe1\u606f\uff09 N/A N/A HTTP/1.0\u4e2d\u6ca1\u5b9a\u4e491xx\u76f8\u5173\u7684\u72b6\u6001\u7801\uff0c\u4f46\u662f\u5b9a\u4e49\u4e86\u6b64\u5206\u7c7b 2xx\uff08\u6210\u529f\uff09 200 201 202 204 OK Created Acepted No content \u8bf7\u6c42\u6210\u529f \u6b64\u72b6\u6001\u7801\u5e94\u5f53\u7531POST\u8bf7\u6c42\u8fd4\u56de \u8bf7\u6c42\u6b63\u5728\u5904\u7406\u4e2d\uff0c\u8fd8\u672a\u5904\u7406\u5b8c \u5df2\u63a5\u6536\u8bf7\u6c42\uff0c\u6b63\u5728\u5904\u7406\u4e2d\uff0c\u4f46\u54cd\u5e94\u65e0\u6d88\u606f\u4f53 3xx\uff08\u91cd\u5b9a\u5411\uff09 300 301 302 304 Multiple choices Moved permanently Moved temporarily Not Modified \u8d44\u6e90\u5728\u591a\u5904\u53ef\u7528\uff0c\u54cd\u5e94\u4e2d\u63d0\u4f9b\u4e86\u7684\u66f4\u591a\u4fe1\u606f \u54cd\u5e94Header\u4e2dLocation\u63d0\u4f9b\u8d44\u6e90\u65b0\u5730\u5740 \u54cd\u5e94Header\u4e2dLocation\u63d0\u4f9b\u8d44\u6e90\u65b0\u5730\u5740 \u6761\u4ef6\u54cd\u5e94\uff0c\u65e0\u9700\u53d1\u9001\u6b63\u6587 4xx\uff08\u5ba2\u6237\u7aef\u9519\u8bef\uff09 400 401 403 404 Bad request Unauthorized Forbidden Not Found \u670d\u52a1\u7aef\u65e0\u6cd5\u7406\u89e3\u8bf7\u6c42\u6216\u8bf7\u6c42\u53c2\u6570\u6709\u8bef \u8bf7\u6c42\u672a\u88ab\u6388\u6743\u8bbf\u95ee \u901a\u8fc7\u6388\u6743\uff0c\u4f46\u662f\u6ca1\u6709\u8bbf\u95ee\u8d44\u6e90\u7684\u6743\u9650 \u8d44\u6e90\u627e\u4e0d\u5230 5xx\uff08\u670d\u52a1\u7aef\u9519\u8bef\uff09 500 501 502 503 Internal server error Not implemented Bad gateway Service unavailable \u670d\u52a1\u7aef\u5185\u90e8\u9519\u8bef\uff0c\u8bf7\u6c42\u65e0\u6cd5\u5b8c\u6210 \u670d\u52a1\u7aef\u4e0d\u8bc6\u522b\u8bf7\u6c42\uff08\u5982\u672a\u5b9e\u73b0\u7684HTTP\u65b9\u6cd5\uff09 \u7f51\u5173\u6216\u4ee3\u7406\u670d\u52a1\u6536\u5230\u4e0a\u6e38\u670d\u52a1\u9519\u8bef \u7531\u4e8e\u8d1f\u8f7d\u8fc7\u9ad8\u6216\u8005\u7ef4\u62a4\uff0c\u670d\u52a1\u7aef\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42","title":"HTTP/1.0"},{"location":"pages/cs/internet/HTTP/#http11","text":"\u5f3a\u5236\u589e\u52a0Host\u9996\u90e8 \u6301\u4e45\u8fde\u63a5\uff08Keep-Alive\uff09 \u65b0\u7684\u8bf7\u6c42\u65b9\u6cd5\uff0c\u5982PUT\u3001OPTIONS\u3001CONNECT\u3001TRACE\u3001DELETE \u66f4\u4e30\u5bcc\u7684\u7f13\u51b2\u65b9\u6cd5\uff0c\u6bd4\u5982Cache-Control\u548cHTTP/1.0\u4e2d\u7684Expires\u9009\u9879\u66f4\u591a HTTP cookies\uff0c\u5141\u8bb8HTTP\u7ef4\u62a4\u72b6\u6001 \u5f15\u5165\u5b57\u7b26\u96c6\uff0c\u5373Header\u4e2dCharset\u5b57\u6bb5 \u652f\u6301\u4ee3\u7406 \u652f\u6301\u6743\u9650\u9a8c\u8bc1 \u65b0\u7684\u72b6\u6001\u7801 \u5c3e\u968f\u9996\u90e8","title":"HTTP/1.1"},{"location":"pages/cs/internet/HTTP/#https","text":"HTTPS\u5bf9HTTP\u7684\u6d88\u606f\u6dfb\u52a0\u4e86\u4e09\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff1a \u52a0\u5bc6 \u2013\u2013\u2013\u2013 \u4f20\u8f93\u8fc7\u7a0b\u4e2d\u7b2c\u4e09\u65b9\u65e0\u6cd5\u8bfb\u53d6\u4fe1\u606f \u5b8c\u6574\u6027\u6821\u9a8c \u2013\u2013\u2013\u2013 \u6d88\u606f\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u672a\u88ab\u66f4\u6539\uff0c\u56e0\u4e3a\u6574\u4e2a\u6d88\u606f\u5df2\u7ecf\u8fc7\u6570\u5b57\u7b7e\u540d\uff0c\u5e76\u4e14\u8be5\u7b7e\u540d\u5728\u89e3\u5bc6\u4e4b\u524d\u5df2\u901a\u8fc7\u52a0\u5bc6\u9a8c\u8bc1 \u8eab\u4efd\u9a8c\u8bc1 \u2013\u2013\u2013\u2013 \u670d\u52a1\u5668\u4e0d\u662f\u4f2a\u88c5\u7684","title":"HTTPS"},{"location":"pages/cs/internet/HTTP/#ssltlshttpshttp","text":"HTTPS\u4f7f\u7528SSL\u6216\u8005TLS\u6765\u52a0\u5bc6\u3002SSLv1\u53ea\u5728Netscape\u5185\u90e8\u53d1\u5e03\uff0c1995\u5e74\u53d1\u5e03\u4e86SSLv2\uff0c1996\u5e74\u53d1\u5e03\u4e86\u66f4\u5b89\u5168\u7684SSLv3\u3002\u7531\u4e8eSSL\u7531Netscape\u62e5\u6709\uff0c\u56e0\u6b64\u5b83\u4e0d\u662f\u4e92\u8054\u7f51\u6807\u51c6\uff0c\u4f46\u7531\u4e8eSSLv3\u88ab\u666e\u904d\u4f7f\u7528\uff0c\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\u5176\u90fd\u662f\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6\u3002\u4e4b\u540eSSL\u88ab\u6807\u51c6\u5316\u4e3aTLS\u3002\u57282014\u5e74\uff0cSSLv3\u4e2d\u53d1\u73b0\u4e86\u91cd\u5927\u5b89\u5168\u6f0f\u6d1e\uff0c\u56e0\u6b64\u88ab\u8981\u6c42\u505c\u6b62\u4f7f\u7528\uff0c\u6d4f\u89c8\u5668\u4e5f\u505c\u6b62\u4e86\u5bf9\u5176\u652f\u6301\u3002 TLSv1.0\u548cSSL\u7c7b\u4f3c\uff0c\u4f46\u662f\u5b83\u4eec\u4e0d\u517c\u5bb9\u3002TLS1.1\u548cTLS1.2\u5206\u522b\u57282006\u5e74\u548c2008\u5e74\u63a8\u51fa\u3002TLSv3\u57282018\u5e74\u88ab\u6279\u51c6\u4e3a\u6807\u51c6\u3002","title":"SSL\u3001TLS\u3001HTTPS\u548cHTTP"},{"location":"pages/cs/internet/HTTP/#https_1","text":"\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u53d1\u9001\u4e00\u4e2a\u6d88\u606f \u670d\u52a1\u7aef\u8fd4\u56de\u4e00\u4e2a\u6570\u5b57\u8bc1\u4e66\uff08\u5305\u542b\u9881\u5e03\u8bc1\u4e66\u7684\u673a\u6784CA\uff0c\u8bc1\u4e66\u6709\u6548\u671f\uff0c\u516c\u94a5\uff0c\u8bc1\u4e66\u6240\u6709\u8005\uff0c \u7b7e\u540d\u7b49\u4fe1\u606f\uff09 \u5ba2\u6237\u7aef\u8bfb\u53d6\u8bc1\u4e66\u7684\u6240\u6709\u8005\uff0c\u6709\u6548\u671f\uff0c\u7b7e\u540d\u7b49\u8fdb\u884c\u9a8c\u8bc1 \u5ba2\u6237\u7aef\u83b7\u53d6\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5185\u7f6e\u7684\u53d7\u4fe1\u4efb\u7684\u8bc1\u4e66\u673a\u6784\uff08CA\uff09\uff0c\u4e0e\u6536\u5230\u7684\u8bc1\u4e66\u5bf9\u6bd4\uff0c\u6821\u9a8c\u8bc1\u4e66\u771f\u5b9e\u6027 \u627e\u4e0d\u5230\u8bc1\u4e66\u62a5\u9519\uff0c\u7ed9\u51fa\u4e0d\u5b89\u5168\u63d0\u793a \u627e\u5230\u8bc1\u4e66\uff0c\u7528\u672c\u5730CA\u7684\u516c\u94a5\u5bf9\u6536\u5230\u7684\u8bc1\u4e66\u7684\u7b7e\u540d\u89e3\u5bc6 \u5ba2\u6237\u7aef\u7528\u76f8\u540c\u7684hash\u7b97\u6cd5\u8ba1\u7b97\u6536\u5230\u8bc1\u4e66\u7684hash\uff0c\u4e0e\u6536\u5230\u7684\u8bc1\u4e66\u4e2d\u7684hash\u5bf9\u6bd4","title":"HTTPS\u8eab\u4efd\u9a8c\u8bc1\u6d41\u7a0b"},{"location":"pages/cs/os/none/","text":"\u64cd\u4f5c\u7cfb\u7edf","title":"\u656c\u8bf7\u671f\u5f85"},{"location":"pages/home/about/","text":"\u5173\u4e8e","title":"\u5173\u4e8e"},{"location":"pages/home/about/#_1","text":"","title":"\u5173\u4e8e"},{"location":"pages/home/ref/","text":"\u5b66\u4e60\u8d44\u6599 Android\u5f00\u53d1\u8005\u5b98\u7f51-\u4e2d\u56fd\u7248 Android\u5f00\u53d1\u8005\u5b98\u7f51 The Java\u2122 Tutorials w3cschools Java w3school Java\u4e2d\u6587 ReactiveX Kotlin \u8bed\u8a00\u4e2d\u6587\u7ad9 Kotlin\u5b98\u7f51 Flutter - Beautiful native apps in record time Flutter\u4e2d\u6587\u7f51 React Native \u00b7 A framework for building native apps using React","title":"\u5b66\u4e60\u8d44\u6599"},{"location":"pages/home/ref/#_1","text":"Android\u5f00\u53d1\u8005\u5b98\u7f51-\u4e2d\u56fd\u7248 Android\u5f00\u53d1\u8005\u5b98\u7f51 The Java\u2122 Tutorials w3cschools Java w3school Java\u4e2d\u6587 ReactiveX Kotlin \u8bed\u8a00\u4e2d\u6587\u7ad9 Kotlin\u5b98\u7f51 Flutter - Beautiful native apps in record time Flutter\u4e2d\u6587\u7f51 React Native \u00b7 A framework for building native apps using React","title":"\u5b66\u4e60\u8d44\u6599"},{"location":"pages/java/1-basic/00-OO/","text":"\u9762\u5411\u5bf9\u8c61 \u9762\u5411\u5bf9\u8c61\u4e09\u5927\u7279\u5f81 \u5c01\u88c5 \u628a\u7279\u5b9a\u7684\u5ba2\u89c2\u4e8b\u7269\u5c01\u88c5\u6210\u7279\u5b9a\u7684\u7c7b\uff0c\u628a\u81ea\u5df1\u6570\u636e\u53ea\u8ba9\u53ef\u4fe1\u7684\u7c7b\u6216\u8005\u5bf9\u8c61\u8bbf\u95ee\uff0c\u4e0d\u53ef\u4fe1\u7684\u4fe1\u606f\u8fdb\u884c\u9690\u85cf\u3002 \u7ee7\u627f \u8ba9\u67d0\u4e2a\u7c7b\u578b\u7684\u5bf9\u8c61\u62e5\u6709\u5176\u4ed6\u5bf9\u8c61\u7684\u5c5e\u6027\u6216\u65b9\u6cd5\u3002 \u591a\u6001 \u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u7684\u76f8\u540c\u65b9\u6cd5\u5728\u4e0d\u540c\u7684\u60c5\u5f62\u4e0b\u5177\u6709\u4e0d\u540c\u7684\u8868\u73b0\u5f62\u5f0f\u3002 \u4e94\u5927\u57fa\u672c\u539f\u5219 \u5355\u4e00\u804c\u8d23\u539f\u5219SRP(Single Responsibility Principle) \u5f00\u653e\u5c01\u95ed\u539f\u5219OCP(Open\uff0dClose Principle) \u91cc\u6c0f\u66ff\u6362\u539f\u5219(the Liskov Substitution Principle LSP) \u63a5\u53e3\u5206\u79bb\u539f\u5219(the Interface Segregation Principle ISP) \u4f9d\u8d56\u5012\u7f6e\u539f\u5219(the Dependency Inversion Principle DIP) \u53c2\u8003 \u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u5f81\u548c\u4e94\u5927\u57fa\u672c\u539f\u5219","title":"\u9762\u5411\u5bf9\u8c61"},{"location":"pages/java/1-basic/00-OO/#_1","text":"","title":"\u9762\u5411\u5bf9\u8c61"},{"location":"pages/java/1-basic/00-OO/#_2","text":"\u5c01\u88c5 \u628a\u7279\u5b9a\u7684\u5ba2\u89c2\u4e8b\u7269\u5c01\u88c5\u6210\u7279\u5b9a\u7684\u7c7b\uff0c\u628a\u81ea\u5df1\u6570\u636e\u53ea\u8ba9\u53ef\u4fe1\u7684\u7c7b\u6216\u8005\u5bf9\u8c61\u8bbf\u95ee\uff0c\u4e0d\u53ef\u4fe1\u7684\u4fe1\u606f\u8fdb\u884c\u9690\u85cf\u3002 \u7ee7\u627f \u8ba9\u67d0\u4e2a\u7c7b\u578b\u7684\u5bf9\u8c61\u62e5\u6709\u5176\u4ed6\u5bf9\u8c61\u7684\u5c5e\u6027\u6216\u65b9\u6cd5\u3002 \u591a\u6001 \u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u7684\u76f8\u540c\u65b9\u6cd5\u5728\u4e0d\u540c\u7684\u60c5\u5f62\u4e0b\u5177\u6709\u4e0d\u540c\u7684\u8868\u73b0\u5f62\u5f0f\u3002","title":"\u9762\u5411\u5bf9\u8c61\u4e09\u5927\u7279\u5f81"},{"location":"pages/java/1-basic/00-OO/#_3","text":"\u5355\u4e00\u804c\u8d23\u539f\u5219SRP(Single Responsibility Principle) \u5f00\u653e\u5c01\u95ed\u539f\u5219OCP(Open\uff0dClose Principle) \u91cc\u6c0f\u66ff\u6362\u539f\u5219(the Liskov Substitution Principle LSP) \u63a5\u53e3\u5206\u79bb\u539f\u5219(the Interface Segregation Principle ISP) \u4f9d\u8d56\u5012\u7f6e\u539f\u5219(the Dependency Inversion Principle DIP) \u53c2\u8003 \u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u5f81\u548c\u4e94\u5927\u57fa\u672c\u539f\u5219","title":"\u4e94\u5927\u57fa\u672c\u539f\u5219"},{"location":"pages/java/1-basic/01-primitive-data-types/","text":"\u57fa\u672c\u6570\u636e\u7c7b\u578b Java\u662f\u4e00\u79cd\u9759\u6001\u7f16\u7a0b\u8bed\u8a00\uff0c\u6240\u6709\u7684\u53d8\u91cf\u90fd\u5fc5\u987b\u663e\u5f0f\u7684\u58f0\u660e\u7c7b\u578b\u3002Java\u4e2d\u57fa\u7840\u7684\u6570\u636e\u7c7b\u578b\u4e00\u5171\u67098\u79cd\uff0c\u5206\u522b\u662fboolean\u3001char\u3001byte\u3001short\u3001int\u3001long\u3001float\u548cdouble. \u57fa\u672c\u7279\u6027 \u7c7b\u578b \u957f\u5ea6(\u5b57\u8282) \u53d6\u503c\u8303\u56f4 \u9ed8\u8ba4\u503c boolean 1 true\\false false char 2 '\\u0000'~'\\uffff' '\\u0000' byte 1 -128~127 0 short 2 -32768~32767 0 int 4 -2 31 ~2 31-1 0 long 8 -2 63 ~2 63-1 0 float 8 -3.4E+38 ~ 3.4E+38 0.0f double 8 -1.7E-308\uff5e1.7E+308 0.0d \u5e03\u5c14\u7c7b\u578b boolean\u7c7b\u578b\u53ea\u6709true\u548cfalse\u4e24\u4e2a\u503c\u3002 \u5b57\u7b26\u7c7b\u578b char\u7c7b\u578b\u7531\u4e8e\u662f2\u4e2a\u5b57\u8282\uff0c\u53ef\u4ee5\u8868\u793a\u5230'\\uffff'\u7684\u5b57\u7b26\uff0c\u66f4\u957f\u7684\u5b57\u7b26\u5c31\u9700\u8981\u7528String\u7c7b\u8868\u793a\u4e86\uff0cOracle\u5b98\u7f51\u4e0a\u628aString\u4e5f\u8ba4\u4e3a\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u4e00\u79cd\u4e86\u3002 \u6570\u5b57\u7c7b\u578b \u51e0\u79cd\u6570\u5b57\u7c7b\u578b\u4e2d\uff0c4\u79cd\u6570\u5b57\u7c7b\u578b\u8868\u793a\u7684\u6570\u90fd\u662f\u7cbe\u786e\u7684\uff0c\u4f46\u662f\u6839\u636e\u5176\u6240\u5360\u7684\u53d8\u91cf\u7c7b\u578b\uff0c\u8868\u793a\u7684\u6574\u6570\u8303\u56f4\u662f\u6709\u9650\u7684\uff0c\u5982\u679c\u60f3\u8981\u8868\u793a\u66f4\u5927\u7684\u6570\u5b57\uff0c\u9700\u8981\u4f7f\u7528BigInteger\u7c7b\u6765\u8868\u793a\u3002 float\u548cdouble\u9075\u5faaIEEE/754\u7684\u6807\u51c6\u6765\u8868\u793a\u6570\u5b57\uff0c\u4f46\u662f\u4ed6\u4eec\u8868\u793a\u7684\u6570\u5b57\u90fd\u662f\u4e0d\u7cbe\u786e\u7684\uff0c\u539f\u56e0\u662ffloat\u548cdouble\u7c7b\u578b\u53d8\u91cf\u5728\u5b58\u50a8\u65f6\u4f7f\u7528\u4e8c\u8fdb\u5236\u7684\u79d1\u5b66\u8ba1\u6570\u6cd5\u6765\u8868\u793a\uff0c\u8868\u793a\u6210\u00b11.f*2 e \uff0c\u5c0f\u6570\u90e8\u5206\u7684\u4f4d\u6570\u6709\u9650\uff08float\u5c0f\u6570\u90e8\u520623\u4f4d\uff0c\u6307\u6570\u90e8\u52068\u4f4d\uff0cdouble\u5c0f\u6570\u90e8\u520653\u4f4d\uff0c\u6307\u6570\u90e8\u520611\u4f4d\uff09\uff0c\u5bf9\u4e8e\u5c0f\u6570\u9664\u4e0d\u5c3d\u7684\u60c5\u51b5\uff0c\u53ea\u80fd\u4e22\u5f03\u3002 \u5982\u679c\u60f3\u8981\u7cbe\u786e\u8868\u793a\u6d6e\u70b9\u6570\uff0c\u5e94\u8be5\u7528BigDecimal\u7c7b\u3002 \u5bf9\u4e8e\u8fd98\u79cd\u57fa\u672c\u7c7b\u578b\uff0cJava\u4e2d\u8fd8\u6709\u5bf9\u5e94\u76848\u4e2a\u5305\u88c5\u7c7b\u578b\u3002 \u8bed\u6cd5\u4e0e\u8bed\u4e49 \u53d8\u91cf\u58f0\u660e char \u58f0\u660echar\u7c7b\u578b\u53d8\u91cf\u65f6\uff0c\u53d8\u91cf\u9700\u8981\u7528\u5355\u5f15\u53f7\u62ec\u8d77\u6765\uff0c\u5982 char c = 'J' \uff0c\u5f15\u53f7\u4e2d\u53ef\u4ee5\u662funicode\u7f16\u7801\u57280~0xffff\u4e2d\u7684\u4efb\u610f\u5b57\u7b26\uff0c\u8d85\u8fc7\u8303\u56f4\u5219\u4f1a\u7f16\u8bd1\u62a5\u9519\uff0c\u56e0\u6b64\uff0c\u7c7b\u4f3c char c = '\u6211' \u662f\u6ca1\u95ee\u9898\u7684\u3002 \u58f0\u660echar\u7c7b\u578b\u53d8\u91cf\u65f6\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5c06\u6570\u5b57\u7c7b\u578b\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u6b64\u65f6\u5b57\u7b26\u8868\u793a\u7684\u662fASCII\u7801\u5bf9\u5e94\u7684\u5b57\u7b26\uff0c\u5982 char c = 65 \u548c char c = 'A' \u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u5982\u679c\u6570\u5b57\u7684\u8303\u56f4\u8d85\u8fc7\u4e862\u4e2a\u5b57\u8282\uff0c\u5219\u4e5f\u4f1a\u7f16\u8bd1\u5931\u8d25\u3002 \u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u65f6\uff0c\u6574\u6570\u7c7b\u578b\u4e5f\u53ef\u4ee5\u5f3a\u8f6c\u6210char\uff0c\u540c\u6837\u4e5f\u662fASCII\u7801\u5bf9\u5e94\u7684\u5b57\u7b26\u3002 byte\u3001short\u3001int\u548clong byte\u548cshort\u7c7b\u578b\u53d8\u91cf\u58f0\u660e\u548cint\u4e00\u6837\uff0c\u4e0d\u9700\u8981\u663e\u793a\u6307\u5b9a\u6570\u5b57\u7684\u7c7b\u578b\uff0c\u4f46\u662f\u503c\u5fc5\u987b\u5728\u53ef\u8868\u793a\u7684\u8303\u56f4\u5185\uff0c\u8d39\u6cfd\u4f1a\u7f16\u8bd1\u51fa\u9519\uff0c\u5982byte\u53ea\u80fd\u5728-128~127\u4e4b\u95f4\u3002 long\u7c7b\u578b\u58f0\u660e\u53d8\u91cf\u65f6\uff0c\u9700\u8981\u5728\u6570\u5b57\u672b\u5c3e\u52a0\u4e0al\u6216L\uff0c\u5982 long num = 11L \u3002\u7531\u4e8el\u548c1\u5728\u4e00\u4e9b\u5b57\u4f53\u4e0a\uff0c\u663e\u793a\u7684\u975e\u5e38\u76f8\u50cf\uff0c\u4e00\u822c\u7528L\u3002 long\u7c7b\u578b\u58f0\u660e\u65f6\uff0c\u53ef\u4ee5\u4e0d\u5e26\u540e\u7f00\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd9\u79cd\u5199\u6cd5\u662f\u5c06int\u7c7b\u578b\u5f3a\u8f6c\u6210long\uff0c\u7531\u4e8elong\u7c7b\u578b\u6240\u5360\u5b57\u8282\u66f4\u957f\uff0c\u5f3a\u8f6c\u65f6\u9ad8\u4f4d\u88650\uff0c\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u6709\u635f\u5931\uff0c\u4f46\u662f\u4e00\u822c\u5efa\u8baelong\u7c7b\u578b\u8fd8\u662f\u8981\u52a0\u540e\u7f00\u663e\u5f0f\u58f0\u660e\u3002 float\u548cdouble float\u7684\u53d8\u91cf\u58f0\u660e\u9700\u8981\u663e\u5f0f\u7684\u52a0f\u6216F\u540e\u7f00\uff0cdouble\u9700\u8981\u52a0d\u6216\u8005D\uff0c\u4e0d\u52a0\u5219\u9ed8\u8ba4\u662f\u7528doble\u6765\u8868\u793a\u7684\uff0c\u5982 float f = 1f \u3001 double d = 2d \u3002\u58f0\u660efloat\u53d8\u91cf\u65f6\uff0c\u5f3a\u70c8\u5efa\u8bae\u52a0\u4e0a\u540e\u7f00\uff0c\u4e0d\u52a0\u662f\u4f1a\u5c06\u4e00\u4e2adouble\u7c7b\u578b\u7684\u6570\u5b57\u5f3a\u8f6c\u6210float\uff0c\u7f16\u8bd1\u65f6\u4f1a\u6709\u8b66\u544a\uff0c\u4f46\u4e0d\u4f1a\u51fa\u9519\u3002 float\u548cdouble\u8fd8\u53ef\u4ee5\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u7684\u5f62\u5f0f\u58f0\u660e\uff0c\u5982 double f = 1.1e3 \uff0c\u8868\u793a\u7684\u662f1.1*2 3 \uff0c\u53738.8\u3002 \u6d6e\u70b9\u6570\u5982\u679c\u6574\u6570\u90e8\u5206\u4e3a0\uff0c\u58f0\u660e\u65f6\u53ef\u4e0d\u5199\u6574\u6570\u90e8\u5206\uff0c\u5982 float f = .34f \uff1b\u5c0f\u6570\u90e8\u5206\u5982\u679c\u662f0\uff0c\u5c0f\u6570\u4e5f\u53ef\u4ee5\u4e0d\u5199\uff0c\u5982 float g = 1.f \u3002 \u6d6e\u70b9\u6570\u7684\u6bd4\u8f83 \u6d6e\u70b9\u6570\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u4e5f\u4f1a\u4e22\u5931\u7cbe\u5ea6\uff0c\u5982\u4e0b\u9762\u7684\u4ee3\u7801\uff0c0.1\u7d2f\u52a011\u6b21\u548c0.1\u76f4\u63a5\u4e5811\uff0c\u4ea7\u751f\u7684\u6d6e\u70b9\u6570\u5c31\u4e0d\u4e00\u6837\u3002 public void float () { double f1 = .0 ; for ( int i = 0 ; i < 11 ; i ++ ) { f1 += .1 ; } double f2 = .1 * 11 ; System . out . println ( \"f1 = \" + f1 ); // f1 = 1.0999999999999999 System . out . println ( \"f2 = \" + f2 ); // f2 = 1.1 } \u7531\u4e8e\u6d6e\u70b9\u6570\u8868\u793a\u7684\u4e0d\u7cbe\u786e\u6027\uff0c\u4e00\u822c\u6bd4\u8f83\u6d6e\u70b9\u6570\u63a8\u8350\u4e24\u79cd\u65b9\u5f0f \u8ba1\u7b97\u5dee\u503c\u548c\u9608\u503c\u5bf9\u6bd4 public boolean equals ( double f1 , double f2 ) { final double THRESHOLD = .0001 ; return Math . abs ( f1 - f2 ) < THRESHOLD ; } \u4f7f\u7528BigDecimal \u4f7f\u7528BigDecimal\u6765\u6bd4\u8f83\u65f6\uff0c\u5fc5\u987b\u4f7f\u7528compareTo\u5bf9\u6bd4\uff0c\u4e0d\u80fd\u7528equals\uff0c\u56e0\u4e3aequals\u4f1a\u5148\u6bd4\u8f83\u7cbe\u5ea6\uff0c\u518d\u6bd4\u8f83\u503c\u3002 public void equals () { BigDecimal a = new BigDecimal ( \"2.00\" ); BigDecimal b = new BigDecimal ( \"2.0\" ); System . out . println ( a . equals ( b )); // false System . out . println ( a . compareTo ( b ) == 0 ); // true } \u8fdb\u5236\u8868\u793a \u5bf9\u4e8ebyte\u3001short\u3001int\u548clong\u7c7b\u578b\uff0c\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u3001\u5341\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236\u6765\u58f0\u660e\u53d8\u91cf\u3002 \u4e8c\u8fdb\u5236 0b\u524d\u7f00\u6765\u8868\u793a\u53d8\u91cf\u65f6\u4e8c\u8fdb\u5236\u7684\uff0c\u4e8c\u8fdb\u5236\u4e2d\u53ea\u80fd\u67090\u548c1\uff0c\u5176\u4ed6\u6570\u5b57\u4f1a\u7f16\u8bd1\u62a5\u9519\u62a5\u9519\u3002 \u516b\u8fdb\u5236 \u524d\u7f000\u8868\u793a\u6570\u5b57\u662f\u516b\u8fdb\u5236\u7684\uff0c\u5982 int i = 010 \u8868\u793a\u7684\u662f\u5341\u8fdb\u5236\u76848\uff0c\u540c\u68378\u8fdb\u5236\u4e2d\u53ea\u80fd\u6709\u6570\u5b570~7\uff0c8\u8fdb\u5236\u4e00\u822c\u8f83\u5c11\u7528\uff0c\u58f0\u660e\u516b\u8fdb\u5236\u7684\u6570\u5b57\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u7ed9\u6709\u8b66\u544a\uff0c\u8981\u6c42\u4f7f\u752810\u8fdb\u5236\u8868\u793a\u3002 \u5341\u8fdb\u5236 \u5341\u8fdb\u5236\u662f\u9ed8\u8ba4\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u4ec0\u4e48\u524d\u7f00\u90fd\u4e0d\u9700\u8981\u52a0\u3002 \u5341\u516d\u8fdb\u5236 \u901a\u8fc7\u524d\u7f000x\u8868\u793a\uff0c\u6570\u5b57\u4e2d\u53ef\u4ee5\u67090~9\uff0cA~F\uff0c\u8868\u793a0~15\u7684\u503c\uff0c\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 \u4e0b\u5212\u7ebf\u5206\u5272\u7b26 \u5f53\u6570\u5b57\u592a\u957f\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u5212\u7ebf\u6765\u5206\u5272\u6570\u5b57\uff0c\u5206\u5272\u7b26\u53ea\u80fd\u653e\u5728\u6570\u5b57\u7684\u4e2d\u95f4\uff0c\u4e0d\u80fd\u653e\u5728\u9996\u5c3e\uff0c\u6d6e\u70b9\u6570\u7684\u5c0f\u6570\u90e8\u5206\u4e5f\u53ef\u4ee5\u7528\u5206\u9694\u7b26\uff0c\u4e5f\u662f\u53ea\u80fd\u653e\u5728\u5c0f\u6570\u90e8\u5206\u7684\u6570\u5b57\u4e2d\u95f4\uff0c\u4f8b\u5982: int a = 8_000 ; byte b = 0b1111_1111 long num = 0xFFFF_0AEE ; float f = 1_2_3.987_654f ; \u53c2\u8003 1\u3001 The Java\u2122 Tutorials Variables 2\u3001 Correct way to compare floats or doubles in Java","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"pages/java/1-basic/01-primitive-data-types/#_1","text":"Java\u662f\u4e00\u79cd\u9759\u6001\u7f16\u7a0b\u8bed\u8a00\uff0c\u6240\u6709\u7684\u53d8\u91cf\u90fd\u5fc5\u987b\u663e\u5f0f\u7684\u58f0\u660e\u7c7b\u578b\u3002Java\u4e2d\u57fa\u7840\u7684\u6570\u636e\u7c7b\u578b\u4e00\u5171\u67098\u79cd\uff0c\u5206\u522b\u662fboolean\u3001char\u3001byte\u3001short\u3001int\u3001long\u3001float\u548cdouble.","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"pages/java/1-basic/01-primitive-data-types/#_2","text":"\u7c7b\u578b \u957f\u5ea6(\u5b57\u8282) \u53d6\u503c\u8303\u56f4 \u9ed8\u8ba4\u503c boolean 1 true\\false false char 2 '\\u0000'~'\\uffff' '\\u0000' byte 1 -128~127 0 short 2 -32768~32767 0 int 4 -2 31 ~2 31-1 0 long 8 -2 63 ~2 63-1 0 float 8 -3.4E+38 ~ 3.4E+38 0.0f double 8 -1.7E-308\uff5e1.7E+308 0.0d \u5e03\u5c14\u7c7b\u578b boolean\u7c7b\u578b\u53ea\u6709true\u548cfalse\u4e24\u4e2a\u503c\u3002 \u5b57\u7b26\u7c7b\u578b char\u7c7b\u578b\u7531\u4e8e\u662f2\u4e2a\u5b57\u8282\uff0c\u53ef\u4ee5\u8868\u793a\u5230'\\uffff'\u7684\u5b57\u7b26\uff0c\u66f4\u957f\u7684\u5b57\u7b26\u5c31\u9700\u8981\u7528String\u7c7b\u8868\u793a\u4e86\uff0cOracle\u5b98\u7f51\u4e0a\u628aString\u4e5f\u8ba4\u4e3a\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u4e00\u79cd\u4e86\u3002 \u6570\u5b57\u7c7b\u578b \u51e0\u79cd\u6570\u5b57\u7c7b\u578b\u4e2d\uff0c4\u79cd\u6570\u5b57\u7c7b\u578b\u8868\u793a\u7684\u6570\u90fd\u662f\u7cbe\u786e\u7684\uff0c\u4f46\u662f\u6839\u636e\u5176\u6240\u5360\u7684\u53d8\u91cf\u7c7b\u578b\uff0c\u8868\u793a\u7684\u6574\u6570\u8303\u56f4\u662f\u6709\u9650\u7684\uff0c\u5982\u679c\u60f3\u8981\u8868\u793a\u66f4\u5927\u7684\u6570\u5b57\uff0c\u9700\u8981\u4f7f\u7528BigInteger\u7c7b\u6765\u8868\u793a\u3002 float\u548cdouble\u9075\u5faaIEEE/754\u7684\u6807\u51c6\u6765\u8868\u793a\u6570\u5b57\uff0c\u4f46\u662f\u4ed6\u4eec\u8868\u793a\u7684\u6570\u5b57\u90fd\u662f\u4e0d\u7cbe\u786e\u7684\uff0c\u539f\u56e0\u662ffloat\u548cdouble\u7c7b\u578b\u53d8\u91cf\u5728\u5b58\u50a8\u65f6\u4f7f\u7528\u4e8c\u8fdb\u5236\u7684\u79d1\u5b66\u8ba1\u6570\u6cd5\u6765\u8868\u793a\uff0c\u8868\u793a\u6210\u00b11.f*2 e \uff0c\u5c0f\u6570\u90e8\u5206\u7684\u4f4d\u6570\u6709\u9650\uff08float\u5c0f\u6570\u90e8\u520623\u4f4d\uff0c\u6307\u6570\u90e8\u52068\u4f4d\uff0cdouble\u5c0f\u6570\u90e8\u520653\u4f4d\uff0c\u6307\u6570\u90e8\u520611\u4f4d\uff09\uff0c\u5bf9\u4e8e\u5c0f\u6570\u9664\u4e0d\u5c3d\u7684\u60c5\u51b5\uff0c\u53ea\u80fd\u4e22\u5f03\u3002 \u5982\u679c\u60f3\u8981\u7cbe\u786e\u8868\u793a\u6d6e\u70b9\u6570\uff0c\u5e94\u8be5\u7528BigDecimal\u7c7b\u3002 \u5bf9\u4e8e\u8fd98\u79cd\u57fa\u672c\u7c7b\u578b\uff0cJava\u4e2d\u8fd8\u6709\u5bf9\u5e94\u76848\u4e2a\u5305\u88c5\u7c7b\u578b\u3002","title":"\u57fa\u672c\u7279\u6027"},{"location":"pages/java/1-basic/01-primitive-data-types/#_3","text":"","title":"\u8bed\u6cd5\u4e0e\u8bed\u4e49"},{"location":"pages/java/1-basic/01-primitive-data-types/#_4","text":"char \u58f0\u660echar\u7c7b\u578b\u53d8\u91cf\u65f6\uff0c\u53d8\u91cf\u9700\u8981\u7528\u5355\u5f15\u53f7\u62ec\u8d77\u6765\uff0c\u5982 char c = 'J' \uff0c\u5f15\u53f7\u4e2d\u53ef\u4ee5\u662funicode\u7f16\u7801\u57280~0xffff\u4e2d\u7684\u4efb\u610f\u5b57\u7b26\uff0c\u8d85\u8fc7\u8303\u56f4\u5219\u4f1a\u7f16\u8bd1\u62a5\u9519\uff0c\u56e0\u6b64\uff0c\u7c7b\u4f3c char c = '\u6211' \u662f\u6ca1\u95ee\u9898\u7684\u3002 \u58f0\u660echar\u7c7b\u578b\u53d8\u91cf\u65f6\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5c06\u6570\u5b57\u7c7b\u578b\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u6b64\u65f6\u5b57\u7b26\u8868\u793a\u7684\u662fASCII\u7801\u5bf9\u5e94\u7684\u5b57\u7b26\uff0c\u5982 char c = 65 \u548c char c = 'A' \u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u5982\u679c\u6570\u5b57\u7684\u8303\u56f4\u8d85\u8fc7\u4e862\u4e2a\u5b57\u8282\uff0c\u5219\u4e5f\u4f1a\u7f16\u8bd1\u5931\u8d25\u3002 \u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u65f6\uff0c\u6574\u6570\u7c7b\u578b\u4e5f\u53ef\u4ee5\u5f3a\u8f6c\u6210char\uff0c\u540c\u6837\u4e5f\u662fASCII\u7801\u5bf9\u5e94\u7684\u5b57\u7b26\u3002 byte\u3001short\u3001int\u548clong byte\u548cshort\u7c7b\u578b\u53d8\u91cf\u58f0\u660e\u548cint\u4e00\u6837\uff0c\u4e0d\u9700\u8981\u663e\u793a\u6307\u5b9a\u6570\u5b57\u7684\u7c7b\u578b\uff0c\u4f46\u662f\u503c\u5fc5\u987b\u5728\u53ef\u8868\u793a\u7684\u8303\u56f4\u5185\uff0c\u8d39\u6cfd\u4f1a\u7f16\u8bd1\u51fa\u9519\uff0c\u5982byte\u53ea\u80fd\u5728-128~127\u4e4b\u95f4\u3002 long\u7c7b\u578b\u58f0\u660e\u53d8\u91cf\u65f6\uff0c\u9700\u8981\u5728\u6570\u5b57\u672b\u5c3e\u52a0\u4e0al\u6216L\uff0c\u5982 long num = 11L \u3002\u7531\u4e8el\u548c1\u5728\u4e00\u4e9b\u5b57\u4f53\u4e0a\uff0c\u663e\u793a\u7684\u975e\u5e38\u76f8\u50cf\uff0c\u4e00\u822c\u7528L\u3002 long\u7c7b\u578b\u58f0\u660e\u65f6\uff0c\u53ef\u4ee5\u4e0d\u5e26\u540e\u7f00\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd9\u79cd\u5199\u6cd5\u662f\u5c06int\u7c7b\u578b\u5f3a\u8f6c\u6210long\uff0c\u7531\u4e8elong\u7c7b\u578b\u6240\u5360\u5b57\u8282\u66f4\u957f\uff0c\u5f3a\u8f6c\u65f6\u9ad8\u4f4d\u88650\uff0c\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u6709\u635f\u5931\uff0c\u4f46\u662f\u4e00\u822c\u5efa\u8baelong\u7c7b\u578b\u8fd8\u662f\u8981\u52a0\u540e\u7f00\u663e\u5f0f\u58f0\u660e\u3002 float\u548cdouble float\u7684\u53d8\u91cf\u58f0\u660e\u9700\u8981\u663e\u5f0f\u7684\u52a0f\u6216F\u540e\u7f00\uff0cdouble\u9700\u8981\u52a0d\u6216\u8005D\uff0c\u4e0d\u52a0\u5219\u9ed8\u8ba4\u662f\u7528doble\u6765\u8868\u793a\u7684\uff0c\u5982 float f = 1f \u3001 double d = 2d \u3002\u58f0\u660efloat\u53d8\u91cf\u65f6\uff0c\u5f3a\u70c8\u5efa\u8bae\u52a0\u4e0a\u540e\u7f00\uff0c\u4e0d\u52a0\u662f\u4f1a\u5c06\u4e00\u4e2adouble\u7c7b\u578b\u7684\u6570\u5b57\u5f3a\u8f6c\u6210float\uff0c\u7f16\u8bd1\u65f6\u4f1a\u6709\u8b66\u544a\uff0c\u4f46\u4e0d\u4f1a\u51fa\u9519\u3002 float\u548cdouble\u8fd8\u53ef\u4ee5\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u7684\u5f62\u5f0f\u58f0\u660e\uff0c\u5982 double f = 1.1e3 \uff0c\u8868\u793a\u7684\u662f1.1*2 3 \uff0c\u53738.8\u3002 \u6d6e\u70b9\u6570\u5982\u679c\u6574\u6570\u90e8\u5206\u4e3a0\uff0c\u58f0\u660e\u65f6\u53ef\u4e0d\u5199\u6574\u6570\u90e8\u5206\uff0c\u5982 float f = .34f \uff1b\u5c0f\u6570\u90e8\u5206\u5982\u679c\u662f0\uff0c\u5c0f\u6570\u4e5f\u53ef\u4ee5\u4e0d\u5199\uff0c\u5982 float g = 1.f \u3002","title":"\u53d8\u91cf\u58f0\u660e"},{"location":"pages/java/1-basic/01-primitive-data-types/#_5","text":"\u6d6e\u70b9\u6570\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u4e5f\u4f1a\u4e22\u5931\u7cbe\u5ea6\uff0c\u5982\u4e0b\u9762\u7684\u4ee3\u7801\uff0c0.1\u7d2f\u52a011\u6b21\u548c0.1\u76f4\u63a5\u4e5811\uff0c\u4ea7\u751f\u7684\u6d6e\u70b9\u6570\u5c31\u4e0d\u4e00\u6837\u3002 public void float () { double f1 = .0 ; for ( int i = 0 ; i < 11 ; i ++ ) { f1 += .1 ; } double f2 = .1 * 11 ; System . out . println ( \"f1 = \" + f1 ); // f1 = 1.0999999999999999 System . out . println ( \"f2 = \" + f2 ); // f2 = 1.1 } \u7531\u4e8e\u6d6e\u70b9\u6570\u8868\u793a\u7684\u4e0d\u7cbe\u786e\u6027\uff0c\u4e00\u822c\u6bd4\u8f83\u6d6e\u70b9\u6570\u63a8\u8350\u4e24\u79cd\u65b9\u5f0f \u8ba1\u7b97\u5dee\u503c\u548c\u9608\u503c\u5bf9\u6bd4 public boolean equals ( double f1 , double f2 ) { final double THRESHOLD = .0001 ; return Math . abs ( f1 - f2 ) < THRESHOLD ; } \u4f7f\u7528BigDecimal \u4f7f\u7528BigDecimal\u6765\u6bd4\u8f83\u65f6\uff0c\u5fc5\u987b\u4f7f\u7528compareTo\u5bf9\u6bd4\uff0c\u4e0d\u80fd\u7528equals\uff0c\u56e0\u4e3aequals\u4f1a\u5148\u6bd4\u8f83\u7cbe\u5ea6\uff0c\u518d\u6bd4\u8f83\u503c\u3002 public void equals () { BigDecimal a = new BigDecimal ( \"2.00\" ); BigDecimal b = new BigDecimal ( \"2.0\" ); System . out . println ( a . equals ( b )); // false System . out . println ( a . compareTo ( b ) == 0 ); // true }","title":"\u6d6e\u70b9\u6570\u7684\u6bd4\u8f83"},{"location":"pages/java/1-basic/01-primitive-data-types/#_6","text":"\u5bf9\u4e8ebyte\u3001short\u3001int\u548clong\u7c7b\u578b\uff0c\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u3001\u5341\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236\u6765\u58f0\u660e\u53d8\u91cf\u3002 \u4e8c\u8fdb\u5236 0b\u524d\u7f00\u6765\u8868\u793a\u53d8\u91cf\u65f6\u4e8c\u8fdb\u5236\u7684\uff0c\u4e8c\u8fdb\u5236\u4e2d\u53ea\u80fd\u67090\u548c1\uff0c\u5176\u4ed6\u6570\u5b57\u4f1a\u7f16\u8bd1\u62a5\u9519\u62a5\u9519\u3002 \u516b\u8fdb\u5236 \u524d\u7f000\u8868\u793a\u6570\u5b57\u662f\u516b\u8fdb\u5236\u7684\uff0c\u5982 int i = 010 \u8868\u793a\u7684\u662f\u5341\u8fdb\u5236\u76848\uff0c\u540c\u68378\u8fdb\u5236\u4e2d\u53ea\u80fd\u6709\u6570\u5b570~7\uff0c8\u8fdb\u5236\u4e00\u822c\u8f83\u5c11\u7528\uff0c\u58f0\u660e\u516b\u8fdb\u5236\u7684\u6570\u5b57\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u7ed9\u6709\u8b66\u544a\uff0c\u8981\u6c42\u4f7f\u752810\u8fdb\u5236\u8868\u793a\u3002 \u5341\u8fdb\u5236 \u5341\u8fdb\u5236\u662f\u9ed8\u8ba4\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u4ec0\u4e48\u524d\u7f00\u90fd\u4e0d\u9700\u8981\u52a0\u3002 \u5341\u516d\u8fdb\u5236 \u901a\u8fc7\u524d\u7f000x\u8868\u793a\uff0c\u6570\u5b57\u4e2d\u53ef\u4ee5\u67090~9\uff0cA~F\uff0c\u8868\u793a0~15\u7684\u503c\uff0c\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002","title":"\u8fdb\u5236\u8868\u793a"},{"location":"pages/java/1-basic/01-primitive-data-types/#_7","text":"\u5f53\u6570\u5b57\u592a\u957f\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u5212\u7ebf\u6765\u5206\u5272\u6570\u5b57\uff0c\u5206\u5272\u7b26\u53ea\u80fd\u653e\u5728\u6570\u5b57\u7684\u4e2d\u95f4\uff0c\u4e0d\u80fd\u653e\u5728\u9996\u5c3e\uff0c\u6d6e\u70b9\u6570\u7684\u5c0f\u6570\u90e8\u5206\u4e5f\u53ef\u4ee5\u7528\u5206\u9694\u7b26\uff0c\u4e5f\u662f\u53ea\u80fd\u653e\u5728\u5c0f\u6570\u90e8\u5206\u7684\u6570\u5b57\u4e2d\u95f4\uff0c\u4f8b\u5982: int a = 8_000 ; byte b = 0b1111_1111 long num = 0xFFFF_0AEE ; float f = 1_2_3.987_654f ; \u53c2\u8003 1\u3001 The Java\u2122 Tutorials Variables 2\u3001 Correct way to compare floats or doubles in Java","title":"\u4e0b\u5212\u7ebf\u5206\u5272\u7b26"},{"location":"pages/java/1-basic/02-refrefence-data-types/","text":"\u5f15\u7528\u6570\u636e\u7c7b\u578b Java\u4e2d\u9664\u4e868\u79cd\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5176\u4ed6\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\u90fd\u662f\u5f15\u7528\u6570\u636e\u7c7b\u578b\u3002 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b\u7684\u533a\u522b \u5b58\u50a8 \u57fa\u672c\u7c7b\u578b\u7684\u53d8\u91cf\u5b58\u50a8\u7684\u662f\u503c\uff0c\u5f15\u7528\u6570\u636e\u7c7b\u578b\u7684\u53d8\u91cf\u4e2d\u5219\u5b58\u7684\u662f\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u7c7b\u4f3c\u4e8eC\u4e2d\u7684\u6307\u9488\u3002 \u5bf9\u4e8e\u65b9\u6cd5\u4e2d\u7684\u4f7f\u7528\uff0c\u57fa\u672c\u7c7b\u578b\u4e00\u822c\u6765\u8bf4\u662f\u5b58\u50a8\u5728\u6808\u4e2d\uff0c\u800c\u5f15\u7528\u7c7b\u578b\u5219\u5b58\u50a8\u5728\u5806\u7a7a\u95f4\u4e2d\u3002 \u4f20\u503c\u65b9\u5f0f \u57fa\u672c\u7c7b\u578b\u53d8\u91cf\u5728\u4f20\u9012\u65f6\u4f20\u9012\u7684\u662f\u503c\uff0c\u800c\u5f15\u7528\u7c7b\u578b\u4f20\u9012\u7684\u662f\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u56e0\u6b64\u5bf9\u4e8eJava\u4e2d\u7684\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5982\u679c\u53c2\u6570\u662f\u57fa\u672c\u7c7b\u578b\u53d8\u91cf\uff0c\u5728\u65b9\u6cd5\u6808\u4e2d\u4f1a\u65b0\u5efa\u4e00\u4e2a\u53d8\u91cf\uff0c\u5e76\u5c06\u53c2\u6570\u4e2d\u7684\u503c\u8d4b\u503c\u7ed9\u8fd9\u4e2a\u53d8\u91cf\uff0c\u5982\u679c\u53c2\u6570\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u5219\u5728\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684\u8fd8\u662f\u539f\u672c\u7684\u5bf9\u8c61\uff0c\u4fee\u6539\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u4fee\u6539\u7684\u4e5f\u662f\u539f\u5bf9\u8c61\u7684\u5c5e\u6027\u3002 \u7c7b\u578b\u6bd4\u8f83 Java\u4e2d\u6bd4\u8f83\u6709==\u548cequals\u4e24\u79cd\u3002 \u5bf9\u4e8e\u5305\u88c5\u7c7b\u578b\uff0c==\u662f\u7528\u6765\u6bd4\u8f83\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\u7684\uff0c\u5f53\u4e24\u4e2a\u5f15\u7528\u7c7b\u578b\u7684\u53d8\u91cf\u6307\u5411\u5185\u5b58\u4e2d\u540c\u4e00\u4e2a\u533a\u57df\u65f6\uff0c==\u76f8\u7b49\uff0c\u4e24\u4e2a\u5bf9\u8c61\u76f8\u7b49\u3002\u57fa\u672c\u7c7b\u578b==\u662f\u6bd4\u8f83\u503c\u76f8\u7b49\u7684\u3002 equals\u662fObject\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6bd4\u8f83\u7684\u662f\u5bf9\u8c61\u7684\u503c\uff0c\u5982\u679c\u5bf9\u8c61\u6ca1\u6709\u91cd\u5199equals\uff0c\u9ed8\u8ba4\u5b9e\u73b0\u7528\u7684\u4e5f\u662f==\u3002\u57fa\u672c\u7c7b\u578b\u7531\u4e8e\u4e0d\u7ee7\u627fObject\u5bf9\u8c61\uff0c\u4e00\u822c\u4e0d\u7528equals\u6bd4\u8f83\u3002 \u5e38\u89c1\u7684\u5f15\u7528\u6570\u636e\u7c7b\u578b \u57fa\u672c\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u578b Java\u4e2d8\u79cd\u6570\u636e\u7c7b\u578b\u5bf9\u5e94\u4e868\u79cd\u5305\u88c5\u7c7b\u578b\uff0c\u5305\u88c5\u7c7b\u578b\u548c\u57fa\u672c\u7c7b\u578b\u53ef\u4ee5\u81ea\u52a8\u62c6\u7bb1\u548c\u88c5\u7bb1\uff0c\u5f53\u9700\u8981\u7528\u5230\u9762\u5411\u5bf9\u8c61\u7684\u7279\u6027\u65f6\uff0c\u5c31\u53ef\u4ee5\u7528\u5305\u88c5\u7c7b\u578b\uff0c\u5f53\u7528\u5230\u7b80\u5355\u7684\u6570\u636e\u5c5e\u6027\u65f6\uff0c\u5c31\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\u3002 \u5305\u88c5\u7c7b\u7684\u7279\u6027 \u81ea\u52a8\u62c6\u88c5\u7bb1 \u5305\u88c5\u7c7b\u578b\u548c\u57fa\u672c\u7c7b\u578b\u53ef\u4ee5\u4e92\u76f8\u8d4b\u503c\uff0c\u79f0\u4e3a\u81ea\u52a8\u88c5\u7bb1\u548c\u62c6\u7bb1\uff0c\u9700\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u5305\u88c5\u7c7b\u578b\u503c\u4e3anull\u65f6\uff0c\u81ea\u52a8\u62c6\u7bb1\u4f1a\u53d1\u751f\u7a7a\u6307\u9488\u3002 \u5e38\u91cf\u7f13\u5b58\u6c60 \u57fa\u672c\u7c7b\u578b \u5305\u88c5\u7c7b\u578b \u7f13\u5b58\u6c60 boolean Boolean true/false char Character -128~127 byte Byte -128~127 short Short -128~127 int Integer -128~127 long long -128~127 float Float -- double Double -- \u901a\u8fc7valueOf\u65b9\u6cd5\u6216\u8005\u57fa\u672c\u7c7b\u578b\u88c5\u7bb1\u4ea7\u751f\u7684\u5305\u88c5\u7c7b\u578b\u5bf9\u8c61\u4f1a\u4f18\u5148\u4ece\u7f13\u5b58\u6c60\u4e2d\u53d6\uff0c\u5982\u679c\u76f4\u63a5\u662f\u901a\u8fc7new\u5bf9\u8c61\uff0c\u4ea7\u751f\u7684\u5219\u662f\u65b0\u5bf9\u8c61\uff0c\u4e0d\u4f1a\u4ece\u7f13\u5b58\u6c60\u53d6\u3002 \u5728\u542f\u52a8JVM\u65f6\uff0c\u901a\u8fc7\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u4e5f\u53ef\u4ee5\u66f4\u6539\u9ed8\u8ba4\u7684\u7f13\u5b58\u6c60\u7684\u5927\u5c0f\uff0c\u5982\u8bbe\u7f6eInteger\u7684\u7f13\u5b58\u6c60\u53ef\u4ee5\u901a\u8fc7\uff0c\"java.lang.Integer.IntegerCache.high\"\u548c\"java.lang.Integer.IntegerCache.low\"\uff0c \u6570\u503c\u6bd4\u8f83 \u5305\u88c5\u7c7b\u578b\u7684\u503c\u6bd4\u8f83\u67092\u4e2a\u65b9\u6cd5\uff0c\u4e00\u4e2a\u662f\u6210\u5458\u65b9\u6cd5compareTo(Number num)\uff0c\u53e6\u4e00\u4e2a\u662f\u9759\u6001\u65b9\u6cd5compare(Number m, Number n)\uff0ccompareTo\u6700\u7ec8\u5176\u5b9e\u4e5f\u662f\u8c03\u7528\u7684compare\u3002 \u5bf9\u4e8e\u6574\u578b\uff0c\u6bd4\u8f83\u7684\u76f4\u63a5\u662f\u503c\uff0c\u5bf9\u4e8e\u6d6e\u70b9\u7c7b\u578b\uff0c\u9664\u4e86\u6bd4\u8f83\u503c\uff0c\u8fd8\u4f1a\u6bd4\u8f83\u6bcf\u4e2abit\u4f4d\u4e0a\u7684\u503c\uff0c\u539f\u56e0\u662f\u6d6e\u70b9\u6570\u7684\u5b58\u50a8\u65b9\u5f0f\u4e2d\u5b58\u57280.0\u548c-0.0\u7684\u95ee\u9898\uff0c\u4ed6\u4eec\u7684\u503c\u867d\u7136\u76f8\u540c\uff0c\u4f46\u662f\u7b26\u53f7\u4f4d\u4e0d\u540c\uff0c\u5728\u5305\u88c5\u7c7b\u578b\u4e2d\uff0c\u4ed6\u4eec\u662f2\u4e2a\u503c\u3002 Double a = Double . valueOf ( - 0.0d ); Double b = Double . valueOf ( 0.0d ); double c = - 0.0 ; double d = 0.0 ; System . out . println ( a == b ); //false System . out . println ( c == d ); //true \u6d6e\u70b9\u6570\u7c7b\u578b\u4e2d\uff0c\u8fd8\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u503c\uff0cNaN\uff0c\u8868\u793aNot a Num\uff0c\u5728\u5b9a\u4e49\u4e2d\uff0cFloat.NaN = 0.0f / 0.0f\uff0c\u4f46\u4ed6\u7684bit\u4f4d\u4e0a\u5b58\u7684\u503c\u548cFloat.intBitsToFloat(0x7fc00000)}\u4e00\u6837\uff0c\u4f46\u662fNaN\u4e0d\u548c\u4efb\u4f55\u6570\u5b57\u76f8\u7b49\uff0c\u5305\u62ec\u5176\u81ea\u5df1\u3002 String String\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5f15\u7528\u7c7b\u578b\uff0c\u5b83\u5177\u6709\u548c\u57fa\u672c\u7c7b\u578b\u76f8\u4f3c\u7684\u6027\u8d28\uff0c\u56e0\u4e3a\u5e38\u91cf\u6c60\u7684\u5b58\u5728\uff0c\u901a\u8fc7\u53cc\u5f15\u53f7\u7684\u65b9\u5f0f\u521b\u5efa\u7684\u5b57\u7b26\u4e32\uff0c\u5728\u4f20\u503c\u8fc7\u7a0b\u4e2d\uff0c\u5b9e\u9645\u4f20\u7684\u662f\u540c\u4e00\u4e2a\u5f15\u7528\u3002 Object Object\u7c7b\u662fJava\u4e2d\u6240\u6709\u7c7b\u7684\u57fa\u7c7b\uff0c\u4e00\u5171\u6709\u5982\u4e0b\u7684\u4e00\u4e9b\u65b9\u6cd5\uff0c\u5176\u4e2d\u9664\u4e86equals\u3001toString\u3001finalize\u5916\uff0c\u5176\u4ed6\u65b9\u6cd5\u5168\u662fnative\u65b9\u6cd5\u3002 getClass\uff0c\u83b7\u53d6\u5bf9\u8c61\u8fd0\u884c\u65f6\u7684Class\u7c7b\u578b hashCode\uff0c\u8fd4\u56de\u5bf9\u8c61hashCode\uff0c\u9ed8\u8ba4\u662f\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740 equals\uff0c\u6bd4\u8f83\u5bf9\u8c61\u662f\u5426\u60f3\u7b49\uff0c\u9ed8\u8ba4\u7528==\u6bd4\uff0c\u5b9e\u9645\u5f88\u591a\u7c7b\u90fd\u4f1a\u91cd\u5199 clone\uff0c\u901a\u8fc7\u62f7\u8d1d\u5185\u5b58\u6570\u636e\u7684\u65b9\u5f0f\u5feb\u901f\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\uff0c\u8c03\u7528clone\u65b9\u6cd5\uff0c\u7c7b\u5fc5\u987b\u5b9e\u73b0clonable\u63a5\u53e3 toString\uff0c\u5bf9\u8c61\u8f6c\u6362\u6210String\uff0c\u9ed8\u8ba4\u662fclassname@hashCode notify\uff0c\u5524\u8d77\u4e00\u4e2a\u6b63\u5728\u7b49\u5f85\u8fd9\u4e2a\u5bf9\u8c61\u9501\u7684\u7ebf\u7a0b notifyAll\uff0c\u5524\u8d77\u6240\u6709\u6b63\u5728\u7b49\u5f85\u8fd9\u4e2a\u5bf9\u8c61\u9501\u7684\u7ebf\u7a0b wait\uff0cwait\u65b9\u6cd5\u67093\u4e2a\uff0c\u6700\u7ec8\u90fd\u8c03\u7528\u7684\u662f\u6709\u65f6\u95f4\u53c2\u6570\u7684\uff0c\u4f5c\u7528\u662f\u8ba9\u5f53\u524d\u7ebf\u7a0b\u7b49\u5f85\uff0c\u76f4\u5230\u8c03\u7528\u4e86notify()\u6216\u8005notifyAll()\u624d\u5524\u9192 finalize\uff0c\u5f53\u5783\u573e\u56de\u6536\u5668\u53d1\u73b0\u5bf9\u8c61\u6ca1\u6709\u5f15\u7528\uff0c\u89e6\u53d1GC\u56de\u6536\u5bf9\u8c61\u65f6\u4f1a\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f46\u662f\u5728Java 9\u4e4b\u540e\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5e9f\u5f03\u4e86\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\uff0c\u56e0\u4e3a\u4f7f\u7528\u4e0d\u5f53\u7ecf\u5e38\u4f1a\u9020\u6210\u8d44\u6e90\u6cc4\u6f0f\uff0c\u5b95\u673a\u7b49\u95ee\u9898\u3002 hashCode\u7ea6\u5b9a Java\u7a0b\u5e8f\u6267\u884c\u4e00\u6b21\u8fc7\u7a0b\u4e2d\uff0c\u591a\u6b21\u8c03\u7528\u540c\u4e00\u4e2a\u5bf9\u8c61\u7684hashCode()\u65b9\u6cd5\uff0c\u5fc5\u987b\u8fd4\u56de\u540c\u4e00\u4e2aint\u503c\uff1b \u5f53\u4e24\u4e2a\u5bf9\u8c61\u4f7f\u7528equals(Object)\u65b9\u6cd5\u6bd4\u8f83\u76f8\u7b49\u65f6\uff0c\u4e24\u4e2a\u5bf9\u8c61\u7684hashCode\u8fd4\u56de\u503c\u4e5f\u5fc5\u987b\u76f8\u7b49\uff1b \u5f53\u4e24\u4e2a\u5bf9\u8c61\u4f7f\u7528equals(Object)\u65b9\u6cd5\u6bd4\u8f83\u4e0d\u7b49\u65f6\uff0c\u5bf9hashCode\u65b9\u6cd5\u4e0d\u505a\u8981\u6c42\u3002 \u53c2\u8003 Java\u4e2d\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b\u7684\u533a\u522b","title":"\u5f15\u7528\u6570\u636e\u7c7b\u578b"},{"location":"pages/java/1-basic/02-refrefence-data-types/#_1","text":"Java\u4e2d\u9664\u4e868\u79cd\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5176\u4ed6\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\u90fd\u662f\u5f15\u7528\u6570\u636e\u7c7b\u578b\u3002","title":"\u5f15\u7528\u6570\u636e\u7c7b\u578b"},{"location":"pages/java/1-basic/02-refrefence-data-types/#_2","text":"\u5b58\u50a8 \u57fa\u672c\u7c7b\u578b\u7684\u53d8\u91cf\u5b58\u50a8\u7684\u662f\u503c\uff0c\u5f15\u7528\u6570\u636e\u7c7b\u578b\u7684\u53d8\u91cf\u4e2d\u5219\u5b58\u7684\u662f\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u7c7b\u4f3c\u4e8eC\u4e2d\u7684\u6307\u9488\u3002 \u5bf9\u4e8e\u65b9\u6cd5\u4e2d\u7684\u4f7f\u7528\uff0c\u57fa\u672c\u7c7b\u578b\u4e00\u822c\u6765\u8bf4\u662f\u5b58\u50a8\u5728\u6808\u4e2d\uff0c\u800c\u5f15\u7528\u7c7b\u578b\u5219\u5b58\u50a8\u5728\u5806\u7a7a\u95f4\u4e2d\u3002 \u4f20\u503c\u65b9\u5f0f \u57fa\u672c\u7c7b\u578b\u53d8\u91cf\u5728\u4f20\u9012\u65f6\u4f20\u9012\u7684\u662f\u503c\uff0c\u800c\u5f15\u7528\u7c7b\u578b\u4f20\u9012\u7684\u662f\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u56e0\u6b64\u5bf9\u4e8eJava\u4e2d\u7684\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5982\u679c\u53c2\u6570\u662f\u57fa\u672c\u7c7b\u578b\u53d8\u91cf\uff0c\u5728\u65b9\u6cd5\u6808\u4e2d\u4f1a\u65b0\u5efa\u4e00\u4e2a\u53d8\u91cf\uff0c\u5e76\u5c06\u53c2\u6570\u4e2d\u7684\u503c\u8d4b\u503c\u7ed9\u8fd9\u4e2a\u53d8\u91cf\uff0c\u5982\u679c\u53c2\u6570\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u5219\u5728\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684\u8fd8\u662f\u539f\u672c\u7684\u5bf9\u8c61\uff0c\u4fee\u6539\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u4fee\u6539\u7684\u4e5f\u662f\u539f\u5bf9\u8c61\u7684\u5c5e\u6027\u3002","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b\u7684\u533a\u522b"},{"location":"pages/java/1-basic/02-refrefence-data-types/#_3","text":"Java\u4e2d\u6bd4\u8f83\u6709==\u548cequals\u4e24\u79cd\u3002 \u5bf9\u4e8e\u5305\u88c5\u7c7b\u578b\uff0c==\u662f\u7528\u6765\u6bd4\u8f83\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\u7684\uff0c\u5f53\u4e24\u4e2a\u5f15\u7528\u7c7b\u578b\u7684\u53d8\u91cf\u6307\u5411\u5185\u5b58\u4e2d\u540c\u4e00\u4e2a\u533a\u57df\u65f6\uff0c==\u76f8\u7b49\uff0c\u4e24\u4e2a\u5bf9\u8c61\u76f8\u7b49\u3002\u57fa\u672c\u7c7b\u578b==\u662f\u6bd4\u8f83\u503c\u76f8\u7b49\u7684\u3002 equals\u662fObject\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6bd4\u8f83\u7684\u662f\u5bf9\u8c61\u7684\u503c\uff0c\u5982\u679c\u5bf9\u8c61\u6ca1\u6709\u91cd\u5199equals\uff0c\u9ed8\u8ba4\u5b9e\u73b0\u7528\u7684\u4e5f\u662f==\u3002\u57fa\u672c\u7c7b\u578b\u7531\u4e8e\u4e0d\u7ee7\u627fObject\u5bf9\u8c61\uff0c\u4e00\u822c\u4e0d\u7528equals\u6bd4\u8f83\u3002","title":"\u7c7b\u578b\u6bd4\u8f83"},{"location":"pages/java/1-basic/02-refrefence-data-types/#_4","text":"","title":"\u5e38\u89c1\u7684\u5f15\u7528\u6570\u636e\u7c7b\u578b"},{"location":"pages/java/1-basic/02-refrefence-data-types/#_5","text":"Java\u4e2d8\u79cd\u6570\u636e\u7c7b\u578b\u5bf9\u5e94\u4e868\u79cd\u5305\u88c5\u7c7b\u578b\uff0c\u5305\u88c5\u7c7b\u578b\u548c\u57fa\u672c\u7c7b\u578b\u53ef\u4ee5\u81ea\u52a8\u62c6\u7bb1\u548c\u88c5\u7bb1\uff0c\u5f53\u9700\u8981\u7528\u5230\u9762\u5411\u5bf9\u8c61\u7684\u7279\u6027\u65f6\uff0c\u5c31\u53ef\u4ee5\u7528\u5305\u88c5\u7c7b\u578b\uff0c\u5f53\u7528\u5230\u7b80\u5355\u7684\u6570\u636e\u5c5e\u6027\u65f6\uff0c\u5c31\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\u3002 \u5305\u88c5\u7c7b\u7684\u7279\u6027 \u81ea\u52a8\u62c6\u88c5\u7bb1 \u5305\u88c5\u7c7b\u578b\u548c\u57fa\u672c\u7c7b\u578b\u53ef\u4ee5\u4e92\u76f8\u8d4b\u503c\uff0c\u79f0\u4e3a\u81ea\u52a8\u88c5\u7bb1\u548c\u62c6\u7bb1\uff0c\u9700\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u5305\u88c5\u7c7b\u578b\u503c\u4e3anull\u65f6\uff0c\u81ea\u52a8\u62c6\u7bb1\u4f1a\u53d1\u751f\u7a7a\u6307\u9488\u3002 \u5e38\u91cf\u7f13\u5b58\u6c60 \u57fa\u672c\u7c7b\u578b \u5305\u88c5\u7c7b\u578b \u7f13\u5b58\u6c60 boolean Boolean true/false char Character -128~127 byte Byte -128~127 short Short -128~127 int Integer -128~127 long long -128~127 float Float -- double Double -- \u901a\u8fc7valueOf\u65b9\u6cd5\u6216\u8005\u57fa\u672c\u7c7b\u578b\u88c5\u7bb1\u4ea7\u751f\u7684\u5305\u88c5\u7c7b\u578b\u5bf9\u8c61\u4f1a\u4f18\u5148\u4ece\u7f13\u5b58\u6c60\u4e2d\u53d6\uff0c\u5982\u679c\u76f4\u63a5\u662f\u901a\u8fc7new\u5bf9\u8c61\uff0c\u4ea7\u751f\u7684\u5219\u662f\u65b0\u5bf9\u8c61\uff0c\u4e0d\u4f1a\u4ece\u7f13\u5b58\u6c60\u53d6\u3002 \u5728\u542f\u52a8JVM\u65f6\uff0c\u901a\u8fc7\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u4e5f\u53ef\u4ee5\u66f4\u6539\u9ed8\u8ba4\u7684\u7f13\u5b58\u6c60\u7684\u5927\u5c0f\uff0c\u5982\u8bbe\u7f6eInteger\u7684\u7f13\u5b58\u6c60\u53ef\u4ee5\u901a\u8fc7\uff0c\"java.lang.Integer.IntegerCache.high\"\u548c\"java.lang.Integer.IntegerCache.low\"\uff0c \u6570\u503c\u6bd4\u8f83 \u5305\u88c5\u7c7b\u578b\u7684\u503c\u6bd4\u8f83\u67092\u4e2a\u65b9\u6cd5\uff0c\u4e00\u4e2a\u662f\u6210\u5458\u65b9\u6cd5compareTo(Number num)\uff0c\u53e6\u4e00\u4e2a\u662f\u9759\u6001\u65b9\u6cd5compare(Number m, Number n)\uff0ccompareTo\u6700\u7ec8\u5176\u5b9e\u4e5f\u662f\u8c03\u7528\u7684compare\u3002 \u5bf9\u4e8e\u6574\u578b\uff0c\u6bd4\u8f83\u7684\u76f4\u63a5\u662f\u503c\uff0c\u5bf9\u4e8e\u6d6e\u70b9\u7c7b\u578b\uff0c\u9664\u4e86\u6bd4\u8f83\u503c\uff0c\u8fd8\u4f1a\u6bd4\u8f83\u6bcf\u4e2abit\u4f4d\u4e0a\u7684\u503c\uff0c\u539f\u56e0\u662f\u6d6e\u70b9\u6570\u7684\u5b58\u50a8\u65b9\u5f0f\u4e2d\u5b58\u57280.0\u548c-0.0\u7684\u95ee\u9898\uff0c\u4ed6\u4eec\u7684\u503c\u867d\u7136\u76f8\u540c\uff0c\u4f46\u662f\u7b26\u53f7\u4f4d\u4e0d\u540c\uff0c\u5728\u5305\u88c5\u7c7b\u578b\u4e2d\uff0c\u4ed6\u4eec\u662f2\u4e2a\u503c\u3002 Double a = Double . valueOf ( - 0.0d ); Double b = Double . valueOf ( 0.0d ); double c = - 0.0 ; double d = 0.0 ; System . out . println ( a == b ); //false System . out . println ( c == d ); //true \u6d6e\u70b9\u6570\u7c7b\u578b\u4e2d\uff0c\u8fd8\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u503c\uff0cNaN\uff0c\u8868\u793aNot a Num\uff0c\u5728\u5b9a\u4e49\u4e2d\uff0cFloat.NaN = 0.0f / 0.0f\uff0c\u4f46\u4ed6\u7684bit\u4f4d\u4e0a\u5b58\u7684\u503c\u548cFloat.intBitsToFloat(0x7fc00000)}\u4e00\u6837\uff0c\u4f46\u662fNaN\u4e0d\u548c\u4efb\u4f55\u6570\u5b57\u76f8\u7b49\uff0c\u5305\u62ec\u5176\u81ea\u5df1\u3002","title":"\u57fa\u672c\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u578b"},{"location":"pages/java/1-basic/02-refrefence-data-types/#string","text":"String\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5f15\u7528\u7c7b\u578b\uff0c\u5b83\u5177\u6709\u548c\u57fa\u672c\u7c7b\u578b\u76f8\u4f3c\u7684\u6027\u8d28\uff0c\u56e0\u4e3a\u5e38\u91cf\u6c60\u7684\u5b58\u5728\uff0c\u901a\u8fc7\u53cc\u5f15\u53f7\u7684\u65b9\u5f0f\u521b\u5efa\u7684\u5b57\u7b26\u4e32\uff0c\u5728\u4f20\u503c\u8fc7\u7a0b\u4e2d\uff0c\u5b9e\u9645\u4f20\u7684\u662f\u540c\u4e00\u4e2a\u5f15\u7528\u3002","title":"String"},{"location":"pages/java/1-basic/02-refrefence-data-types/#object","text":"Object\u7c7b\u662fJava\u4e2d\u6240\u6709\u7c7b\u7684\u57fa\u7c7b\uff0c\u4e00\u5171\u6709\u5982\u4e0b\u7684\u4e00\u4e9b\u65b9\u6cd5\uff0c\u5176\u4e2d\u9664\u4e86equals\u3001toString\u3001finalize\u5916\uff0c\u5176\u4ed6\u65b9\u6cd5\u5168\u662fnative\u65b9\u6cd5\u3002 getClass\uff0c\u83b7\u53d6\u5bf9\u8c61\u8fd0\u884c\u65f6\u7684Class\u7c7b\u578b hashCode\uff0c\u8fd4\u56de\u5bf9\u8c61hashCode\uff0c\u9ed8\u8ba4\u662f\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740 equals\uff0c\u6bd4\u8f83\u5bf9\u8c61\u662f\u5426\u60f3\u7b49\uff0c\u9ed8\u8ba4\u7528==\u6bd4\uff0c\u5b9e\u9645\u5f88\u591a\u7c7b\u90fd\u4f1a\u91cd\u5199 clone\uff0c\u901a\u8fc7\u62f7\u8d1d\u5185\u5b58\u6570\u636e\u7684\u65b9\u5f0f\u5feb\u901f\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\uff0c\u8c03\u7528clone\u65b9\u6cd5\uff0c\u7c7b\u5fc5\u987b\u5b9e\u73b0clonable\u63a5\u53e3 toString\uff0c\u5bf9\u8c61\u8f6c\u6362\u6210String\uff0c\u9ed8\u8ba4\u662fclassname@hashCode notify\uff0c\u5524\u8d77\u4e00\u4e2a\u6b63\u5728\u7b49\u5f85\u8fd9\u4e2a\u5bf9\u8c61\u9501\u7684\u7ebf\u7a0b notifyAll\uff0c\u5524\u8d77\u6240\u6709\u6b63\u5728\u7b49\u5f85\u8fd9\u4e2a\u5bf9\u8c61\u9501\u7684\u7ebf\u7a0b wait\uff0cwait\u65b9\u6cd5\u67093\u4e2a\uff0c\u6700\u7ec8\u90fd\u8c03\u7528\u7684\u662f\u6709\u65f6\u95f4\u53c2\u6570\u7684\uff0c\u4f5c\u7528\u662f\u8ba9\u5f53\u524d\u7ebf\u7a0b\u7b49\u5f85\uff0c\u76f4\u5230\u8c03\u7528\u4e86notify()\u6216\u8005notifyAll()\u624d\u5524\u9192 finalize\uff0c\u5f53\u5783\u573e\u56de\u6536\u5668\u53d1\u73b0\u5bf9\u8c61\u6ca1\u6709\u5f15\u7528\uff0c\u89e6\u53d1GC\u56de\u6536\u5bf9\u8c61\u65f6\u4f1a\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f46\u662f\u5728Java 9\u4e4b\u540e\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5e9f\u5f03\u4e86\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\uff0c\u56e0\u4e3a\u4f7f\u7528\u4e0d\u5f53\u7ecf\u5e38\u4f1a\u9020\u6210\u8d44\u6e90\u6cc4\u6f0f\uff0c\u5b95\u673a\u7b49\u95ee\u9898\u3002 hashCode\u7ea6\u5b9a Java\u7a0b\u5e8f\u6267\u884c\u4e00\u6b21\u8fc7\u7a0b\u4e2d\uff0c\u591a\u6b21\u8c03\u7528\u540c\u4e00\u4e2a\u5bf9\u8c61\u7684hashCode()\u65b9\u6cd5\uff0c\u5fc5\u987b\u8fd4\u56de\u540c\u4e00\u4e2aint\u503c\uff1b \u5f53\u4e24\u4e2a\u5bf9\u8c61\u4f7f\u7528equals(Object)\u65b9\u6cd5\u6bd4\u8f83\u76f8\u7b49\u65f6\uff0c\u4e24\u4e2a\u5bf9\u8c61\u7684hashCode\u8fd4\u56de\u503c\u4e5f\u5fc5\u987b\u76f8\u7b49\uff1b \u5f53\u4e24\u4e2a\u5bf9\u8c61\u4f7f\u7528equals(Object)\u65b9\u6cd5\u6bd4\u8f83\u4e0d\u7b49\u65f6\uff0c\u5bf9hashCode\u65b9\u6cd5\u4e0d\u505a\u8981\u6c42\u3002 \u53c2\u8003 Java\u4e2d\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b\u7684\u533a\u522b","title":"Object"},{"location":"pages/java/1-basic/03-number-and-strings/","text":"\u6570\u5b57\u548c\u5b57\u7b26\u4e32 \u6570\u5b57 \u6570\u5b57\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb \u5927\u4f53\u4e0a\u5206\u4e3a3\u7c7b \u5305\u88c5\u7c7b\u578b Byte\u3001Short\u3001Integer\u3001Long\u3001FLoat\u3001Double\u8fd96\u4e2a\u7c7b\u5bf9\u5e94\u76f8\u5e94\u7684\u57fa\u672c\u7c7b\u578b\uff0c\u548c\u57fa\u672c\u7c7b\u578b\u53ef\u4ee5\u4e92\u76f8\u62c6\u7bb1\u548c\u88c5\u7bb1 \u5927\u6570 BigInteger\u548cBigDecimal\u662fjava.math\u5305\u4e2d\u7684\u7c7b\uff0c\u5176\u4f5c\u7528\u662f\u4e3a\u4e86\u7cbe\u786e\u8868\u793a\u6d6e\u70b9\u6570\uff0c\u4ee5\u53ca\u6574\u6570\u7684\u5927\u6570\u8ba1\u7b97 \u539f\u5b50\u64cd\u4f5c\u7c7b AutomaticInteger\u3001AutomaticLong\u3001Scripted64\u8fd9\u51e0\u4e2a\u7c7b\u662fjava.util.concurrent.atomic\u5305\u4e2d\u7684\u7c7b\uff0c\u7528\u6765\u5904\u7406\u539f\u5b50\u6027\u64cd\u4f5c\u7684\u3002 \u57fa\u672c\u7c7b\u578b\u7684\u81ea\u589e\u548c\u81ea\u51cf\u64cd\u4f5c\uff0c\u5b9e\u9645\u4e0a\u662f\u53ef\u4ee5\u62c6\u89e3\u6210n=n+1(\u6216n=n-1)\uff0c\u4e0d\u5177\u5907\u539f\u5b50\u6027\uff0c\u56e0\u6b64\u589e\u52a0\u4e86\u539f\u5b50\u7c7b\u6765\u505a\u539f\u5b50\u6027\u7684\u8ba1\u7b97\u3002 \u9664\u4e86\u56fe\u4e2d\u5217\u51fa\u7684\u51e0\u4e2a\uff0c\u8fd8\u6709AutomaticBoolean\u7b49\u539f\u5b50\u7c7b\uff0c\u53ea\u662f\u4e0d\u7ee7\u627fNumber\u3002 \u5b57\u7b26\u4e32 String* Java\u4e2dString\u662f\u4e00\u4e2afinal\u7c7b\u578b\u7684\u7c7b\uff0c\u5b98\u7f51\u6587\u6863\u4e0a\u8bf4\u5b83\u7b97\u662f\u57fa\u672c\u7c7b\u578b\uff0c\u4f46\u662f\u5b83\u662f\u4e00\u4e2a\u7c7b\u3002 \u65e9\u671f\u7684jdk\u7248\u672c\u4e2d\uff0cString\u5e95\u5c42\u662f\u901a\u8fc7char[]\u6765\u4fdd\u5b58\u5b57\u7b26\u7684\uff0c\u4ecejava 10\u5f00\u59cb\uff0c\u5e95\u5c42\u5df2\u7ecf\u66ff\u6362\u6210byte[]\u4e86\u3002 \u521b\u5efa\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u67092\u79cd\uff1a String s1 = \"abc\" ; String s2 = new String ( \"abs\" ); \u5e38\u91cf\u6c60 Java\u4e2d\u7684\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60(String Pool)\u662f\u5b58\u50a8\u5728\u5806\u4e2d\u7684\u4e2d\u7684\u5b57\u7b26\u4e32\u6c60\u3002 \u5982\u679c\u76f4\u63a5\u901a\u8fc7\"\"\u521b\u5efa\u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u4f1a\u5148\u4ece\u5e38\u91cf\u6c60\u4e2d\u627e\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u8fd4\u56de\u5176\u5f15\u7528\uff0c\u5426\u5219\u4f1a\u5148\u5728\u5e38\u91cf\u6c60\u4e2d\u521b\u5efa\u5bf9\u8c61\u3002\u901a\u8fc7new String()\u7684\u65b9\u5f0f\u521b\u5efa\u7684\u5b57\u7b26\u4e32\u5219\u4f1a\u5728\u5806\u4e2d\u521b\u5efa\u65b0\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61\u3002\u8c03\u7528intern()\u65b9\u6cd5\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u653e\u5165\u5230\u5e38\u91cf\u6c60\u4e2d\u3002 \u4f7f\u7528\u5e38\u91cf\u6c60\u7684\u597d\u5904\u662f\u590d\u7528\u4e86\u5bf9\u8c61\uff0c\u51cf\u5c11\u4e86\u5bf9\u8c61\u7684\u5185\u5b58\u5360\u7528\u3002 \u5b57\u7b26\u4e32\u7684\u64cd\u4f5c \u62fc\u63a5 1\u3001\u901a\u8fc7concat\u65b9\u6cd5\uff1b 2\u3001\u901a\u8fc7+\uff0c\u5982\u679c\u62fc\u63a5\u7684\u5b57\u7b26\u4e32\u90fd\u662f\u5df2\u77e5\u7684\u5e38\u91cf\uff0c\u7f16\u8bd1\u5668\u4f1a\u4f18\u5316\u6210\u5e38\u91cf\uff0c\u5426\u5219\u4f1a\u4f18\u5316\u6210StringBuilder\u62fc\u63a5\uff1b \u4e24\u79cd\u65b9\u6cd5\u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61\u3002 \u5206\u5272 -- slipt \u622a\u53d6 -- subString \u66ff\u6362 -- replace\u3001replaceAll\u3001replaceFirst \u67e5\u627e -- constains\u3001indexOf\u3001lastIndexOf\u3001starstWith\u3001endWith StringBuilder String\u3001StringBuilder\u3001StringBuffer\u90fd\u5b9e\u73b0\u4e86CharSequence\uff0c\u5176\u4e2dStringBuilder\u548cStringBuffer\u90fd\u662fAbstractStringBuilder\u7684\u5b50\u7c7b\u3002 AbstractStringBulder\u4e2d\u63d0\u4f9b\u4e86\u5f88\u591a\u62fc\u63a5\u7684append\u548cinser\u65b9\u6cd5\uff0c\u4e5f\u6709delte\u3001replace\u3001substring\u7b49\u65b9\u6cd5\uff0cAbstractStringBuilder\u53ea\u6709toString()\u65b9\u6cd5\u662f\u62bd\u8c61\u7684\u3002 StringBuilder\u7ee7\u627f\u4e86AbstractStringBulder\uff0c\u57fa\u672c\u90fd\u662f\u8c03\u7528\u7684super()\u65b9\u6cd5\u6765\u5b8c\u6210\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u3002 toString\u7684\u5b9e\u73b0\uff1a @Override public String toString () { // Create a copy, don't share the array return isLatin1 () ? StringLatin1 . newString ( value , 0 , count ) : StringUTF16 . newString ( value , 0 , count ); } StringBuffer StirngBuffer\u7684\u5b9e\u73b0\u65b9\u5f0f\u548cStringBuilder\u51e0\u4e4e\u4e00\u6a21\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u5176\u6240\u6709\u5bf9\u5b57\u7b26\u4e32\u64cd\u4f5c\u7684\u65b9\u6cd5\u90fd\u6709synchronized\u5173\u952e\u5b57\uff0c\u5982append\u3001replace\u3001substring\u3001insert\u3001toString\u7b49\u3002 \u56e0\u4e3a\u4f7f\u7528\u4e86synchronized\u5173\u952e\u5b57\uff0cStringBuffer\u62fc\u63a5\u5b57\u7b26\u4e32\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4f46\u540c\u65f6\u4e5f\u4f1a\u76f8\u5bf9\u6162\u4e00\u4e9b\u3002 \u53e6\u4e00\u4e2a\u4e0d\u540c\u662fStringBuff\u4e2dtoString()\u65b9\u6cd5\u4f1a\u7528\u5230\u4e00\u4e2astringCache\uff0ctoString()\u65f6\uff0c\u5148\u6839\u636e\u5b57\u7b26\u7684\u7f16\u7801\u65b9\u5f0f\u751f\u6210\u4e00\u4e2aStringCache\uff0c\u518d\u6839\u636estringCache\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u3002 @Override public synchronized String toString () { if ( toStringCache == null ) { return toStringCache = isLatin1 () ? StringLatin1 . newString ( value , 0 , count ) : StringUTF16 . newString ( value , 0 , count ); } return new String ( toStringCache ); } StringBuffer\u548cStringBuilder\u7684toString\u65b9\u6cd5\u90fd\u4f1a\u751f\u6210\u65b0\u7684\u5b57\u7b26\u4e32\u3002 \u4f7f\u7528\u573a\u666f String\u662f\u5e38\u91cf\u7c7b\uff0c\u6bcf\u6b21new\u5bf9\u8c61\u548c\u4f7f\u7528+\u62fc\u63a5\u5b57\u7b26\u4e32\u90fd\u4f1a\u751f\u4ea7\u65b0\u5bf9\u8c61\u3002\u9002\u7528\u4e8e\u5b57\u7b26\u4e32\u7684\u503c\u4e0d\u7ecf\u5e38\u53d8\u5316\u7684\u573a\u666f\u3002 StringBuilder\u548cStringBuffer\u662f\u666e\u901a\u5bf9\u8c61\uff0c\u503c\u662f\u901a\u8fc7char[]\u5b58\u50a8\u7684\uff0cappend\u8ffd\u52a0\u5bf9\u8c61\u901a\u8fc7\u5bf9\u5e95\u5c42char[]\u8ffd\u52a0\u5143\u7d20\uff0c\u4e0d\u4f1a\u989d\u5916\u4ea7\u751f\u65b0\u5bf9\u8c61\uff0c\u5185\u5b58\u548c\u6548\u7387\u6bd4String\u9ad8\u3002\u9002\u7528\u4e8e\u5bf9\u5b57\u7b26\u4e32\u7ecf\u5e38\u9700\u8981\u64cd\u4f5c\u53d8\u5316\u7684\u573a\u666f\u3002 StringBuilder\u662f\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u9002\u7528\u4e8e\u5355\u7ebf\u7a0b\u4e0b\u6709\u5927\u91cf\u5b57\u7b26\u4e32\u64cd\u4f5c\u7684\u573a\u666f\u3002 StringBuffer\u6709synchronized\u5173\u952e\u5b57\u4fee\u9970\uff0c\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u9002\u5408\u5e76\u53d1\u573a\u666f\u4e0b\u5927\u91cf\u5b57\u7b26\u4e32\u64cd\u4f5c\u7684\u573a\u666f\u3002 \u53c2\u8003 1\u3001 Oracle-\u6570\u5b57\u4e0e\u5b57\u7b26\u4e32 2\u3001 The Java\u00ae Language Specification 3.10.5. String Literals","title":"\u6570\u5b57\u548c\u5b57\u7b26\u4e32"},{"location":"pages/java/1-basic/03-number-and-strings/#_1","text":"","title":"\u6570\u5b57\u548c\u5b57\u7b26\u4e32"},{"location":"pages/java/1-basic/03-number-and-strings/#_2","text":"\u6570\u5b57\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb \u5927\u4f53\u4e0a\u5206\u4e3a3\u7c7b \u5305\u88c5\u7c7b\u578b Byte\u3001Short\u3001Integer\u3001Long\u3001FLoat\u3001Double\u8fd96\u4e2a\u7c7b\u5bf9\u5e94\u76f8\u5e94\u7684\u57fa\u672c\u7c7b\u578b\uff0c\u548c\u57fa\u672c\u7c7b\u578b\u53ef\u4ee5\u4e92\u76f8\u62c6\u7bb1\u548c\u88c5\u7bb1 \u5927\u6570 BigInteger\u548cBigDecimal\u662fjava.math\u5305\u4e2d\u7684\u7c7b\uff0c\u5176\u4f5c\u7528\u662f\u4e3a\u4e86\u7cbe\u786e\u8868\u793a\u6d6e\u70b9\u6570\uff0c\u4ee5\u53ca\u6574\u6570\u7684\u5927\u6570\u8ba1\u7b97 \u539f\u5b50\u64cd\u4f5c\u7c7b AutomaticInteger\u3001AutomaticLong\u3001Scripted64\u8fd9\u51e0\u4e2a\u7c7b\u662fjava.util.concurrent.atomic\u5305\u4e2d\u7684\u7c7b\uff0c\u7528\u6765\u5904\u7406\u539f\u5b50\u6027\u64cd\u4f5c\u7684\u3002 \u57fa\u672c\u7c7b\u578b\u7684\u81ea\u589e\u548c\u81ea\u51cf\u64cd\u4f5c\uff0c\u5b9e\u9645\u4e0a\u662f\u53ef\u4ee5\u62c6\u89e3\u6210n=n+1(\u6216n=n-1)\uff0c\u4e0d\u5177\u5907\u539f\u5b50\u6027\uff0c\u56e0\u6b64\u589e\u52a0\u4e86\u539f\u5b50\u7c7b\u6765\u505a\u539f\u5b50\u6027\u7684\u8ba1\u7b97\u3002 \u9664\u4e86\u56fe\u4e2d\u5217\u51fa\u7684\u51e0\u4e2a\uff0c\u8fd8\u6709AutomaticBoolean\u7b49\u539f\u5b50\u7c7b\uff0c\u53ea\u662f\u4e0d\u7ee7\u627fNumber\u3002","title":"\u6570\u5b57"},{"location":"pages/java/1-basic/03-number-and-strings/#_3","text":"","title":"\u5b57\u7b26\u4e32"},{"location":"pages/java/1-basic/03-number-and-strings/#string","text":"Java\u4e2dString\u662f\u4e00\u4e2afinal\u7c7b\u578b\u7684\u7c7b\uff0c\u5b98\u7f51\u6587\u6863\u4e0a\u8bf4\u5b83\u7b97\u662f\u57fa\u672c\u7c7b\u578b\uff0c\u4f46\u662f\u5b83\u662f\u4e00\u4e2a\u7c7b\u3002 \u65e9\u671f\u7684jdk\u7248\u672c\u4e2d\uff0cString\u5e95\u5c42\u662f\u901a\u8fc7char[]\u6765\u4fdd\u5b58\u5b57\u7b26\u7684\uff0c\u4ecejava 10\u5f00\u59cb\uff0c\u5e95\u5c42\u5df2\u7ecf\u66ff\u6362\u6210byte[]\u4e86\u3002 \u521b\u5efa\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u67092\u79cd\uff1a String s1 = \"abc\" ; String s2 = new String ( \"abs\" ); \u5e38\u91cf\u6c60 Java\u4e2d\u7684\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60(String Pool)\u662f\u5b58\u50a8\u5728\u5806\u4e2d\u7684\u4e2d\u7684\u5b57\u7b26\u4e32\u6c60\u3002 \u5982\u679c\u76f4\u63a5\u901a\u8fc7\"\"\u521b\u5efa\u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u4f1a\u5148\u4ece\u5e38\u91cf\u6c60\u4e2d\u627e\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u8fd4\u56de\u5176\u5f15\u7528\uff0c\u5426\u5219\u4f1a\u5148\u5728\u5e38\u91cf\u6c60\u4e2d\u521b\u5efa\u5bf9\u8c61\u3002\u901a\u8fc7new String()\u7684\u65b9\u5f0f\u521b\u5efa\u7684\u5b57\u7b26\u4e32\u5219\u4f1a\u5728\u5806\u4e2d\u521b\u5efa\u65b0\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61\u3002\u8c03\u7528intern()\u65b9\u6cd5\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u653e\u5165\u5230\u5e38\u91cf\u6c60\u4e2d\u3002 \u4f7f\u7528\u5e38\u91cf\u6c60\u7684\u597d\u5904\u662f\u590d\u7528\u4e86\u5bf9\u8c61\uff0c\u51cf\u5c11\u4e86\u5bf9\u8c61\u7684\u5185\u5b58\u5360\u7528\u3002 \u5b57\u7b26\u4e32\u7684\u64cd\u4f5c \u62fc\u63a5 1\u3001\u901a\u8fc7concat\u65b9\u6cd5\uff1b 2\u3001\u901a\u8fc7+\uff0c\u5982\u679c\u62fc\u63a5\u7684\u5b57\u7b26\u4e32\u90fd\u662f\u5df2\u77e5\u7684\u5e38\u91cf\uff0c\u7f16\u8bd1\u5668\u4f1a\u4f18\u5316\u6210\u5e38\u91cf\uff0c\u5426\u5219\u4f1a\u4f18\u5316\u6210StringBuilder\u62fc\u63a5\uff1b \u4e24\u79cd\u65b9\u6cd5\u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61\u3002 \u5206\u5272 -- slipt \u622a\u53d6 -- subString \u66ff\u6362 -- replace\u3001replaceAll\u3001replaceFirst \u67e5\u627e -- constains\u3001indexOf\u3001lastIndexOf\u3001starstWith\u3001endWith","title":"String*"},{"location":"pages/java/1-basic/03-number-and-strings/#stringbuilder","text":"String\u3001StringBuilder\u3001StringBuffer\u90fd\u5b9e\u73b0\u4e86CharSequence\uff0c\u5176\u4e2dStringBuilder\u548cStringBuffer\u90fd\u662fAbstractStringBuilder\u7684\u5b50\u7c7b\u3002 AbstractStringBulder\u4e2d\u63d0\u4f9b\u4e86\u5f88\u591a\u62fc\u63a5\u7684append\u548cinser\u65b9\u6cd5\uff0c\u4e5f\u6709delte\u3001replace\u3001substring\u7b49\u65b9\u6cd5\uff0cAbstractStringBuilder\u53ea\u6709toString()\u65b9\u6cd5\u662f\u62bd\u8c61\u7684\u3002 StringBuilder\u7ee7\u627f\u4e86AbstractStringBulder\uff0c\u57fa\u672c\u90fd\u662f\u8c03\u7528\u7684super()\u65b9\u6cd5\u6765\u5b8c\u6210\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u3002 toString\u7684\u5b9e\u73b0\uff1a @Override public String toString () { // Create a copy, don't share the array return isLatin1 () ? StringLatin1 . newString ( value , 0 , count ) : StringUTF16 . newString ( value , 0 , count ); }","title":"StringBuilder"},{"location":"pages/java/1-basic/03-number-and-strings/#stringbuffer","text":"StirngBuffer\u7684\u5b9e\u73b0\u65b9\u5f0f\u548cStringBuilder\u51e0\u4e4e\u4e00\u6a21\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u5176\u6240\u6709\u5bf9\u5b57\u7b26\u4e32\u64cd\u4f5c\u7684\u65b9\u6cd5\u90fd\u6709synchronized\u5173\u952e\u5b57\uff0c\u5982append\u3001replace\u3001substring\u3001insert\u3001toString\u7b49\u3002 \u56e0\u4e3a\u4f7f\u7528\u4e86synchronized\u5173\u952e\u5b57\uff0cStringBuffer\u62fc\u63a5\u5b57\u7b26\u4e32\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4f46\u540c\u65f6\u4e5f\u4f1a\u76f8\u5bf9\u6162\u4e00\u4e9b\u3002 \u53e6\u4e00\u4e2a\u4e0d\u540c\u662fStringBuff\u4e2dtoString()\u65b9\u6cd5\u4f1a\u7528\u5230\u4e00\u4e2astringCache\uff0ctoString()\u65f6\uff0c\u5148\u6839\u636e\u5b57\u7b26\u7684\u7f16\u7801\u65b9\u5f0f\u751f\u6210\u4e00\u4e2aStringCache\uff0c\u518d\u6839\u636estringCache\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u3002 @Override public synchronized String toString () { if ( toStringCache == null ) { return toStringCache = isLatin1 () ? StringLatin1 . newString ( value , 0 , count ) : StringUTF16 . newString ( value , 0 , count ); } return new String ( toStringCache ); } StringBuffer\u548cStringBuilder\u7684toString\u65b9\u6cd5\u90fd\u4f1a\u751f\u6210\u65b0\u7684\u5b57\u7b26\u4e32\u3002","title":"StringBuffer"},{"location":"pages/java/1-basic/03-number-and-strings/#_4","text":"String\u662f\u5e38\u91cf\u7c7b\uff0c\u6bcf\u6b21new\u5bf9\u8c61\u548c\u4f7f\u7528+\u62fc\u63a5\u5b57\u7b26\u4e32\u90fd\u4f1a\u751f\u4ea7\u65b0\u5bf9\u8c61\u3002\u9002\u7528\u4e8e\u5b57\u7b26\u4e32\u7684\u503c\u4e0d\u7ecf\u5e38\u53d8\u5316\u7684\u573a\u666f\u3002 StringBuilder\u548cStringBuffer\u662f\u666e\u901a\u5bf9\u8c61\uff0c\u503c\u662f\u901a\u8fc7char[]\u5b58\u50a8\u7684\uff0cappend\u8ffd\u52a0\u5bf9\u8c61\u901a\u8fc7\u5bf9\u5e95\u5c42char[]\u8ffd\u52a0\u5143\u7d20\uff0c\u4e0d\u4f1a\u989d\u5916\u4ea7\u751f\u65b0\u5bf9\u8c61\uff0c\u5185\u5b58\u548c\u6548\u7387\u6bd4String\u9ad8\u3002\u9002\u7528\u4e8e\u5bf9\u5b57\u7b26\u4e32\u7ecf\u5e38\u9700\u8981\u64cd\u4f5c\u53d8\u5316\u7684\u573a\u666f\u3002 StringBuilder\u662f\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u9002\u7528\u4e8e\u5355\u7ebf\u7a0b\u4e0b\u6709\u5927\u91cf\u5b57\u7b26\u4e32\u64cd\u4f5c\u7684\u573a\u666f\u3002 StringBuffer\u6709synchronized\u5173\u952e\u5b57\u4fee\u9970\uff0c\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u9002\u5408\u5e76\u53d1\u573a\u666f\u4e0b\u5927\u91cf\u5b57\u7b26\u4e32\u64cd\u4f5c\u7684\u573a\u666f\u3002 \u53c2\u8003 1\u3001 Oracle-\u6570\u5b57\u4e0e\u5b57\u7b26\u4e32 2\u3001 The Java\u00ae Language Specification 3.10.5. String Literals","title":"\u4f7f\u7528\u573a\u666f"},{"location":"pages/java/1-basic/04-references/","text":"Java\u4e2d\u7684\u56db\u79cd\u5f15\u7528 \u5f3a\u5f15\u7528(StrongReference) \u4f7f\u7528new\u5173\u952e\u5b57\u521b\u5efa\u51fa\u6765\u7684\u5bf9\u8c61\u90fd\u662f\u5f3a\u5f15\u7528\u3002 \u5f3a\u5f15\u7528\u662f\u6700\u666e\u904d\u7684\u5f15\u7528\uff0c\u5f53\u5185\u5b58\u4e0d\u8db3\u65f6\uff0c\u5373\u4f7f\u629b\u51faOutOfMemoryError\u4e5f\u4e0d\u4f1a\u56de\u6536\u3002 \u8f6f\u5f15\u7528(SoftReference) \u8f6f\u5f15\u7528\u7684\u5bf9\u8c61\uff0c\u5f53\u5185\u5b58\u5145\u8db3\u65f6\uff0c\u5c31\u4e0d\u4f1a\u56de\u6536\u5bf9\u8c61\uff0c\u5f53\u5185\u5b58\u4e0d\u8db3\u7684\u65f6\u5019\uff0c\u5783\u573e\u56de\u6536\u5668\u5c31\u4f1a\u56de\u6536\u5b83\u3002 \u53ef\u4ee5\u7528\u6765\u6784\u5efa\u5185\u5b58\u654f\u611f\u7684\u9ad8\u901f\u7f13\u5b58\uff0c\u56fe\u7247\u52a0\u8f7d\u7b49\uff0c\u5728\u5185\u5b58\u4e0d\u8db3\u65f6\u91ca\u653e\u4e00\u4e9b\u975e\u5fc5\u8981\u7684\u5bf9\u8c61\uff0c\u8282\u7ea6\u7a7a\u95f4\u3002 \u5f31\u5f15\u7528(WeakReference) \u5f31\u5f15\u7528\u5bf9\u8c61\u548c\u8f6f\u5f15\u7528\u5bf9\u8c61\u7c7b\u4f3c\uff0c\u53ea\u8981\u9047\u4e0aGC\u5c31\u4f1a\u88ab\u56de\u6536\u3002\u5f31\u5f15\u7528\u88ab\u56de\u6536\u65f6\uff0cJVM\u4f1a\u81ea\u52a8\u5c06\u5176\u52a0\u5165\u5230\u8be5\u5f31\u5f15\u7528\u5bf9\u5e94\u7684ReferenceQueue\u4e2d\u3002 \u5f31\u5f15\u7528\u4e00\u822c\u7528\u5728\u975e\u5173\u952e\u7684\u7f13\u5b58\u573a\u666f\uff0c\u5f53\u9700\u8981\u7acb\u5373\u91ca\u653e\u5bf9\u8c61\u65f6\uff0c\u7528\u5f31\u5f15\u7528\u3002 \u865a\u5f15\u7528(PhantomReference) \u865a\u5f15\u7528\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u5230\u5f15\u7528\u7684\u5bf9\u8c61\uff0cget()\u65b9\u6cd5\u59cb\u7ec8\u8fd4\u56denull\u3002\u548c\u5f31\u5f15\u7528\u4e00\u6837\uff0c\u865a\u5f15\u7528\u88ab\u56de\u6536\u65f6\u4f1a\u88ab\u52a0\u5165\u5230\u5176\u5173\u8054\u7684ReferenceQueue\u4e2d\u3002 \u4e00\u822c\u865a\u5f15\u7528\u6765\u611f\u77e5\u5bf9\u8c61\u88ab\u5783\u573e\u56de\u6536\uff0c\u5b9e\u73b0\u65b9\u6cd5\u662f\u521b\u5efa\u865a\u5f15\u7528\u65f6\uff0c\u4f20\u5165\u4e00\u4e2aReferenceQueue\uff0c\u76d1\u542c\u5230\u961f\u5217\u975e\u7a7a\u5373\u53d1\u751f\u4e86\u5783\u573e\u56de\u6536\u3002 public PhantomReference ( T referent , ReferenceQueue <? super T > q ) { super ( referent , q ); } NIO\u4e2d\u4f7f\u7528\u4e86\u865a\u5f15\u7528\u6765\u7ba1\u7406\u5806\u5916\u5185\u5b58\u3002 \u53c2\u8003 1\u3001 Java\u4e2d\u7684\u56db\u79cd\u5f15\u7528\u7c7b\u578b","title":"\u5f15\u7528"},{"location":"pages/java/1-basic/04-references/#java","text":"","title":"Java\u4e2d\u7684\u56db\u79cd\u5f15\u7528"},{"location":"pages/java/1-basic/04-references/#strongreference","text":"\u4f7f\u7528new\u5173\u952e\u5b57\u521b\u5efa\u51fa\u6765\u7684\u5bf9\u8c61\u90fd\u662f\u5f3a\u5f15\u7528\u3002 \u5f3a\u5f15\u7528\u662f\u6700\u666e\u904d\u7684\u5f15\u7528\uff0c\u5f53\u5185\u5b58\u4e0d\u8db3\u65f6\uff0c\u5373\u4f7f\u629b\u51faOutOfMemoryError\u4e5f\u4e0d\u4f1a\u56de\u6536\u3002","title":"\u5f3a\u5f15\u7528(StrongReference)"},{"location":"pages/java/1-basic/04-references/#softreference","text":"\u8f6f\u5f15\u7528\u7684\u5bf9\u8c61\uff0c\u5f53\u5185\u5b58\u5145\u8db3\u65f6\uff0c\u5c31\u4e0d\u4f1a\u56de\u6536\u5bf9\u8c61\uff0c\u5f53\u5185\u5b58\u4e0d\u8db3\u7684\u65f6\u5019\uff0c\u5783\u573e\u56de\u6536\u5668\u5c31\u4f1a\u56de\u6536\u5b83\u3002 \u53ef\u4ee5\u7528\u6765\u6784\u5efa\u5185\u5b58\u654f\u611f\u7684\u9ad8\u901f\u7f13\u5b58\uff0c\u56fe\u7247\u52a0\u8f7d\u7b49\uff0c\u5728\u5185\u5b58\u4e0d\u8db3\u65f6\u91ca\u653e\u4e00\u4e9b\u975e\u5fc5\u8981\u7684\u5bf9\u8c61\uff0c\u8282\u7ea6\u7a7a\u95f4\u3002","title":"\u8f6f\u5f15\u7528(SoftReference)"},{"location":"pages/java/1-basic/04-references/#weakreference","text":"\u5f31\u5f15\u7528\u5bf9\u8c61\u548c\u8f6f\u5f15\u7528\u5bf9\u8c61\u7c7b\u4f3c\uff0c\u53ea\u8981\u9047\u4e0aGC\u5c31\u4f1a\u88ab\u56de\u6536\u3002\u5f31\u5f15\u7528\u88ab\u56de\u6536\u65f6\uff0cJVM\u4f1a\u81ea\u52a8\u5c06\u5176\u52a0\u5165\u5230\u8be5\u5f31\u5f15\u7528\u5bf9\u5e94\u7684ReferenceQueue\u4e2d\u3002 \u5f31\u5f15\u7528\u4e00\u822c\u7528\u5728\u975e\u5173\u952e\u7684\u7f13\u5b58\u573a\u666f\uff0c\u5f53\u9700\u8981\u7acb\u5373\u91ca\u653e\u5bf9\u8c61\u65f6\uff0c\u7528\u5f31\u5f15\u7528\u3002","title":"\u5f31\u5f15\u7528(WeakReference)"},{"location":"pages/java/1-basic/04-references/#phantomreference","text":"\u865a\u5f15\u7528\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u5230\u5f15\u7528\u7684\u5bf9\u8c61\uff0cget()\u65b9\u6cd5\u59cb\u7ec8\u8fd4\u56denull\u3002\u548c\u5f31\u5f15\u7528\u4e00\u6837\uff0c\u865a\u5f15\u7528\u88ab\u56de\u6536\u65f6\u4f1a\u88ab\u52a0\u5165\u5230\u5176\u5173\u8054\u7684ReferenceQueue\u4e2d\u3002 \u4e00\u822c\u865a\u5f15\u7528\u6765\u611f\u77e5\u5bf9\u8c61\u88ab\u5783\u573e\u56de\u6536\uff0c\u5b9e\u73b0\u65b9\u6cd5\u662f\u521b\u5efa\u865a\u5f15\u7528\u65f6\uff0c\u4f20\u5165\u4e00\u4e2aReferenceQueue\uff0c\u76d1\u542c\u5230\u961f\u5217\u975e\u7a7a\u5373\u53d1\u751f\u4e86\u5783\u573e\u56de\u6536\u3002 public PhantomReference ( T referent , ReferenceQueue <? super T > q ) { super ( referent , q ); } NIO\u4e2d\u4f7f\u7528\u4e86\u865a\u5f15\u7528\u6765\u7ba1\u7406\u5806\u5916\u5185\u5b58\u3002 \u53c2\u8003 1\u3001 Java\u4e2d\u7684\u56db\u79cd\u5f15\u7528\u7c7b\u578b","title":"\u865a\u5f15\u7528(PhantomReference)"},{"location":"pages/java/1-basic/05-annotations/","text":"\u6ce8\u89e3 \u6ce8\u89e3\u7684\u7528\u6cd5 \u6ce8\u89e3\u7684\u683c\u5f0f @Entry @Entry(name = 'entry') @\u7b26\u53f7\u544a\u8bc9\u7f16\u8bd1\u5668\u8fd9\u662f\u4e00\u4e2a\u6ce8\u89e3\uff0c@\u540e\u9762\u662f\u6ce8\u89e3\u7684\u540d\u5b57\uff0c\u6ce8\u89e3\u4e5f\u53ef\u4ee5\u5e26\u53c2\u6570\uff0c\u53c2\u6570\u53ea\u6709\u4e00\u4e2a\u65f6\uff0c\u53c2\u6570key\u53ef\u4ee5\u7701\u7565\u3002 \u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3\u7684\u5730\u65b9 \u6ce8\u89e3\u53ef\u4ee5\u5e94\u7528\u5728\u7c7b\u3001\u53d8\u91cf\u3001\u65b9\u6cd5\u3001\u65b9\u6cd5\u53c2\u6570\u7684\u58f0\u660e\u4e2d\u3002Java 8\u4e4b\u540e\uff0c\u6ce8\u89e3\u8fd8\u53ef\u4ee5\u5e94\u7528\u5728\u4f7f\u7528\u7c7b\u578b\u4e0a\uff1a \u5bf9\u7c7b\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u6ce8\u89e3 new @Interned MyObject(); \u7c7b\u578b\u8f6c\u6362 str = (@NonNull String) strings; implements\u8bed\u53e5 class UnmodifiableList<T> implements @Readonly List<@Readonly T> { ... } \u5f02\u5e38\u58f0\u660e void monitorTemperature() throws @Critical TemperatureException { ... } \u6ce8\u89e3\u7c7b\u578b \u6709\u7684\u65f6\u5019\u6ce8\u89e3\u53ef\u4ee5\u7528\u6765\u5f53\u6ce8\u91ca\u7528\uff0c\u5982\u5b9a\u4e49\u4e00\u4e2aClassPreamble\u6ce8\u89e3\uff1a @Documented @interface ClassPreamble { String author (); String date (); int currentRevision () default 1 ; String lastModified () default \"N/A\" ; String lastModifiedBy () default \"N/A\" ; // Note use of array String [] reviewers (); } \u4f7f\u7528\u65f6\uff0c\u5c06\u6ce8\u89e3\u4f7f\u7528\u5728\u7c7b\u4e0a\uff1a @ClassPreamble ( author = \"John Doe\" , date = \"3/17/2002\" , currentRevision = 6 , lastModified = \"4/12/2004\" , lastModifiedBy = \"Jane Doe\" , // Note array notation reviewers = { \"Alice\" , \"Bob\" , \"Cindy\" } ) public class Generation3List extends Generation2List { // class code goes here } \u5f53\u81ea\u5b9a\u4e49\u7684\u6ce8\u89e3\u5e26\u6709 ``` @Documented ``` \u6ce8\u89e3\u65f6 \uff0c javadoc\u751f\u6210\u7684\u6587\u6863\u4e5f\u4f1a\u5e26\u4e0a\u6ce8\u89e3 \u3002 Java\u9884\u7f6e\u6ce8\u89e3 \u5e38\u89c1\u7684\u6ce8\u89e3 @Deprecated \uff0c\u8868\u660e\u5df2\u7ecf\u88ab\u5f03\u7528\u4e86\uff0c\u53ef\u4ee5\u7528\u5728\u7c7b\u3001\u65b9\u6cd5\u3001\u6210\u5458\u53d8\u91cf\u4e0a\uff1b @Override \uff0c\u91cd\u5199\u7236\u7c7b\u7684\u65b9\u6cd5\u65f6\u9700\u8981\u52a0\u4e0a\uff0c\u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u4e0d\u52a0\uff0c\u4f46\u662f\uff0c\u5728\u7236\u7c7b\u6ca1\u6709\u7684\u65b9\u6cd5\u4e0a\u52a0\u4e0a\u4e86\u8fd9\u4e2a\u6ce8\u89e3\u7f16\u8bd1\u5c31\u4f1a\u62a5\u9519\uff1b @SuppressWarnings \uff0c\u7528\u6765\u5ffd\u7565\u7f16\u8bd1\u5668\u7684\u8b66\u544a\uff1b @SafeVarargs \uff0c\u7528\u5728\u6784\u9020\u65b9\u6cd5\u6216\u666e\u901a\u65b9\u6cd5\u4e0a\uff0c\u53ef\u4ee5\u7528\u6765\u5ffd\u7565unchecked\u8b66\u544a\uff1b @FunctionalInterface \uff0cJava 8\u624d\u6709\u7684\u6ce8\u89e3\uff0c\u7528\u6765\u8868\u660e\u7c7b\u578b\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\uff08\u5373\u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5\u7684\u63a5\u53e3\uff09\u3002 \u5143\u6ce8\u89e3 \u5143\u6ce8\u89e3\u662f\u7528\u4e8e\u58f0\u660e\u5176\u4ed6\u6ce8\u89e3\u7684\u6ce8\u89e3\uff0cJava\u4e2d\u7684\u6ce8\u89e3\u4e00\u5171\u67095\u4e2a\uff1a @Retention \u8868\u660e\u6ce8\u89e3\u4fdd\u7559\u7b56\u7565\u7684\uff1a RetentionPolicy.SOURCE \u2013 \u53ea\u5728\u7f16\u8bd1\u671f\u4fdd\u7559\uff0c\u751f\u6210class\u6587\u4ef6\u4e4b\u540e\u5c31\u6ca1\u4e86\uff1b RetentionPolicy.CLASS \u2013 \u5728\u7f16\u8bd1\u671f\u4fdd\u7559\uff0c\u4fdd\u7559\u5230class\u6587\u4ef6\uff0c\u8fd0\u884c\u65f6\u662f\u83b7\u53d6\u4e0d\u5230\u8fd9\u79cd\u6ce8\u89e3\u7684\uff1b RetentionPolicy.RUNTIME \u2013 \u8fd9\u79cd\u6ce8\u89e3\u4f1a\u4fdd\u7559\u5230\u8fd0\u884c\u65f6\uff0c\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7getAnnotation()\u65b9\u6cd5\u83b7\u53d6\u5230\uff1b @Documented \u8868\u660e\u7528javadoc\u751f\u6210\u6587\u6863\u7684\u65f6\u5019\u8be5\u6ce8\u89e3\u662f\u5426\u4f1a\u88ab\u4fdd\u7559\u3002\u5982\u81ea\u5b9a\u4e49\u6ce8\u89e3@Service\uff0c\u5982\u679c\u52a0\u4e0a\u4e86@Documented\uff0c\u90a3\u4e48\u6709@Service\u6ce8\u89e3\u7684\u7c7b\uff0c\u5728\u751f\u6210docs\u6587\u4ef6\u65f6\uff0c\u7c7b\u4e0a\u7684@Service\u5c31\u4f1a\u88ab\u4fdd\u7559\u3002 @Target \u8868\u660e\u6ce8\u89e3\u53ef\u4ee5\u5e94\u7528\u5728\u54ea\u4e9b\u5730\u65b9\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\u503c\uff1a ElementType.ANNOTATION_TYPE \u53ef\u4ee5\u5bf9\u5e94\u7528\u5728\u6ce8\u89e3\u4e0a ElementType.CONSTRUCTOR \u53ef\u4ee5\u5e94\u7528\u5728\u6784\u9020\u65b9\u6cd5\u4e0a ElementType.FIELD \u53ef\u4ee5\u5e94\u7528\u5728\u6210\u5458\u53d8\u91cf\u4e0a ElementType.LOCAL_VARIABLE \u53ef\u4ee5\u5e94\u7528\u5728\u5c40\u90e8\u53d8\u91cf\u4e0a ElementType.METHOD \u53ef\u4ee5\u5e94\u7528\u5728\u65b9\u6cd5\u4e0a ElementType.PACKAGE \u53ef\u4ee5\u5e94\u7528\u5728\u5305\u4e0a ElementType.PARAMETER \u53ef\u4ee5\u5e94\u7528\u5728\u65b9\u6cd5\u7684\u53c2\u6570\u53ca\u8fd4\u56de\u503c\u4e0a ElementType.TYPE \u53ef\u4ee5\u5e94\u7528\u5728\u4efb\u4f55\u7c7b\u578b\u4e0a @Inherited \u8868\u793a\u6ce8\u89e3\u662f\u5426\u53ef\u4ee5\u7ee7\u627f\uff0c\u5982\u679c\u7236\u7c7b\u6709\u6ce8\u89e3\uff0c\u5b50\u7c7b\u4e5f\u53ef\u4ee5\u7ee7\u627f @Repeatable Java 8\u624d\u652f\u6301\u7684\u6ce8\u89e3\uff0c\u8868\u660e\u6ce8\u89e3\u53ef\u4ee5\u6ce8\u89e3\u591a\u6b21\u3002 \u81ea\u5b9a\u4e49\u6ce8\u89e3 @Retention ( RetentionPolicy . RUNTIME ) @Target ( ElementType . METHOD ) public @interface MyAnnotation { String value () default = \"a\" ; } \u81ea\u5b9a\u4e49\u6ce8\u89e3\u7684\u8981\u70b9\uff1a \u5fc5\u987b\u7528@interface\u7c7b\u58f0\u660e\u6ce8\u89e3 \u53ef\u4ee5\u7528\u5143\u6ce8\u89e3\u5bf9\u81ea\u5b9a\u4e49\u6ce8\u89e3\u6765\u6807\u8bb0\u6ce8\u89e3\u7684\u58f0\u660e\u5468\u671f\uff0c\u4f5c\u7528\u7b49 \u6ce8\u89e3\u7684\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\uff0c\u59828\u79cd\u57fa\u672c\u7c7b\u578b\u3001String\u3001Class\u3001\u679a\u4e3e\u3001\u6570\u7ec4\u7b49 \u81ea\u5b9a\u4e49\u6ce8\u89e3\u5e94\u7528\u7684\u573a\u666f\uff1a \u4e00\u822c\u5728AOP\u4e2d\u7528\u7684\u6bd4\u8f83\u591a\uff0c\u6bd4\u5982\u767b\u5f55\u62e6\u622a\u6821\u9a8c\uff0c\u901a\u8fc7AnnotationPcessor\u5728\u7f16\u8bd1\u671f\u505a\u5207\u9762\u6253\u5370\u65e5\u5fd7\u3001\u7edf\u8ba1\u8017\u65f6\u7b49\u3002 \u83b7\u53d6\u6ce8\u89e3 \u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\uff0c\u62ff\u5230Class\u3001Method\u3001Field\u540e\uff0c\u8c03\u7528 <T extends Annotation> T getAnnotation(Class<T> annotationClass); \u65b9\u6cd5\uff0c\u53ef\u4ee5\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u6ce8\u89e3\u3002 \u6ce8\u89e3\u7684\u539f\u7406 \u6ce8\u89e3\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u63a5\u53e3\uff0cjavac\u7f16\u8bd1\u540e\uff0c@annotaion\u58f0\u660e\u7684\u6ce8\u89e3\u4f1a\u7ee7\u627f\u63a5\u53e3 java.lang.annotation.Annotation \u3002 public interface MyAnnotation extends java . lang . annotation . Annotation \u7531\u4e8e\u6ce8\u89e3\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u63a5\u53e3\uff0c\u6240\u4ee5\u901a\u8fc7getAnnotatoin\u83b7\u53d6\u5230\u7684\u6ce8\u89e3\u5b9e\u9645\u662f\u4e00\u4e2a\u52a8\u6001\u4ee3\u7406\u7684\u7c7b\u3002 public class $Proxy1 extends Proxy implements MyAnnotation { String value () { ...} } \u901a\u8fc7AnnotationParser\u6765\u751f\u6210\u4ee3\u7406\u5bf9\u8c61\uff0c\u7528AnnotationInvocationHandler\u6765\u5904\u7406\u6ce8\u89e3\u7684\u53d6\u503c\uff0c\u6ce8\u89e3\u7684\u503c\u90fd\u5b58\u5728memberValues\u4e2d\uff0c\u53d6\u503c\u65f6\u4ee5\u6ce8\u89e3\u7684\u65b9\u6cd5\u4f5c\u4e3akey\u3002 public static Annotation annotationForMap ( Class type , Map < String , Object > memberValues ) { return ( Annotation ) Proxy . newProxyInstance ( type . getClassLoader (), new Class [] { type }, new AnnotationInvocationHandler ( type , memberValues )); } \u53c2\u8003 The Java\u2122 Tutorials - Annotations","title":"\u6ce8\u89e3"},{"location":"pages/java/1-basic/05-annotations/#_1","text":"","title":"\u6ce8\u89e3"},{"location":"pages/java/1-basic/05-annotations/#_2","text":"","title":"\u6ce8\u89e3\u7684\u7528\u6cd5"},{"location":"pages/java/1-basic/05-annotations/#_3","text":"@Entry @Entry(name = 'entry') @\u7b26\u53f7\u544a\u8bc9\u7f16\u8bd1\u5668\u8fd9\u662f\u4e00\u4e2a\u6ce8\u89e3\uff0c@\u540e\u9762\u662f\u6ce8\u89e3\u7684\u540d\u5b57\uff0c\u6ce8\u89e3\u4e5f\u53ef\u4ee5\u5e26\u53c2\u6570\uff0c\u53c2\u6570\u53ea\u6709\u4e00\u4e2a\u65f6\uff0c\u53c2\u6570key\u53ef\u4ee5\u7701\u7565\u3002","title":"\u6ce8\u89e3\u7684\u683c\u5f0f"},{"location":"pages/java/1-basic/05-annotations/#_4","text":"\u6ce8\u89e3\u53ef\u4ee5\u5e94\u7528\u5728\u7c7b\u3001\u53d8\u91cf\u3001\u65b9\u6cd5\u3001\u65b9\u6cd5\u53c2\u6570\u7684\u58f0\u660e\u4e2d\u3002Java 8\u4e4b\u540e\uff0c\u6ce8\u89e3\u8fd8\u53ef\u4ee5\u5e94\u7528\u5728\u4f7f\u7528\u7c7b\u578b\u4e0a\uff1a \u5bf9\u7c7b\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u6ce8\u89e3 new @Interned MyObject(); \u7c7b\u578b\u8f6c\u6362 str = (@NonNull String) strings; implements\u8bed\u53e5 class UnmodifiableList<T> implements @Readonly List<@Readonly T> { ... } \u5f02\u5e38\u58f0\u660e void monitorTemperature() throws @Critical TemperatureException { ... }","title":"\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3\u7684\u5730\u65b9"},{"location":"pages/java/1-basic/05-annotations/#_5","text":"\u6709\u7684\u65f6\u5019\u6ce8\u89e3\u53ef\u4ee5\u7528\u6765\u5f53\u6ce8\u91ca\u7528\uff0c\u5982\u5b9a\u4e49\u4e00\u4e2aClassPreamble\u6ce8\u89e3\uff1a @Documented @interface ClassPreamble { String author (); String date (); int currentRevision () default 1 ; String lastModified () default \"N/A\" ; String lastModifiedBy () default \"N/A\" ; // Note use of array String [] reviewers (); } \u4f7f\u7528\u65f6\uff0c\u5c06\u6ce8\u89e3\u4f7f\u7528\u5728\u7c7b\u4e0a\uff1a @ClassPreamble ( author = \"John Doe\" , date = \"3/17/2002\" , currentRevision = 6 , lastModified = \"4/12/2004\" , lastModifiedBy = \"Jane Doe\" , // Note array notation reviewers = { \"Alice\" , \"Bob\" , \"Cindy\" } ) public class Generation3List extends Generation2List { // class code goes here } \u5f53\u81ea\u5b9a\u4e49\u7684\u6ce8\u89e3\u5e26\u6709 ``` @Documented ``` \u6ce8\u89e3\u65f6 \uff0c javadoc\u751f\u6210\u7684\u6587\u6863\u4e5f\u4f1a\u5e26\u4e0a\u6ce8\u89e3 \u3002","title":"\u6ce8\u89e3\u7c7b\u578b"},{"location":"pages/java/1-basic/05-annotations/#java","text":"","title":"Java\u9884\u7f6e\u6ce8\u89e3"},{"location":"pages/java/1-basic/05-annotations/#_6","text":"@Deprecated \uff0c\u8868\u660e\u5df2\u7ecf\u88ab\u5f03\u7528\u4e86\uff0c\u53ef\u4ee5\u7528\u5728\u7c7b\u3001\u65b9\u6cd5\u3001\u6210\u5458\u53d8\u91cf\u4e0a\uff1b @Override \uff0c\u91cd\u5199\u7236\u7c7b\u7684\u65b9\u6cd5\u65f6\u9700\u8981\u52a0\u4e0a\uff0c\u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u4e0d\u52a0\uff0c\u4f46\u662f\uff0c\u5728\u7236\u7c7b\u6ca1\u6709\u7684\u65b9\u6cd5\u4e0a\u52a0\u4e0a\u4e86\u8fd9\u4e2a\u6ce8\u89e3\u7f16\u8bd1\u5c31\u4f1a\u62a5\u9519\uff1b @SuppressWarnings \uff0c\u7528\u6765\u5ffd\u7565\u7f16\u8bd1\u5668\u7684\u8b66\u544a\uff1b @SafeVarargs \uff0c\u7528\u5728\u6784\u9020\u65b9\u6cd5\u6216\u666e\u901a\u65b9\u6cd5\u4e0a\uff0c\u53ef\u4ee5\u7528\u6765\u5ffd\u7565unchecked\u8b66\u544a\uff1b @FunctionalInterface \uff0cJava 8\u624d\u6709\u7684\u6ce8\u89e3\uff0c\u7528\u6765\u8868\u660e\u7c7b\u578b\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\uff08\u5373\u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5\u7684\u63a5\u53e3\uff09\u3002","title":"\u5e38\u89c1\u7684\u6ce8\u89e3"},{"location":"pages/java/1-basic/05-annotations/#_7","text":"\u5143\u6ce8\u89e3\u662f\u7528\u4e8e\u58f0\u660e\u5176\u4ed6\u6ce8\u89e3\u7684\u6ce8\u89e3\uff0cJava\u4e2d\u7684\u6ce8\u89e3\u4e00\u5171\u67095\u4e2a\uff1a @Retention \u8868\u660e\u6ce8\u89e3\u4fdd\u7559\u7b56\u7565\u7684\uff1a RetentionPolicy.SOURCE \u2013 \u53ea\u5728\u7f16\u8bd1\u671f\u4fdd\u7559\uff0c\u751f\u6210class\u6587\u4ef6\u4e4b\u540e\u5c31\u6ca1\u4e86\uff1b RetentionPolicy.CLASS \u2013 \u5728\u7f16\u8bd1\u671f\u4fdd\u7559\uff0c\u4fdd\u7559\u5230class\u6587\u4ef6\uff0c\u8fd0\u884c\u65f6\u662f\u83b7\u53d6\u4e0d\u5230\u8fd9\u79cd\u6ce8\u89e3\u7684\uff1b RetentionPolicy.RUNTIME \u2013 \u8fd9\u79cd\u6ce8\u89e3\u4f1a\u4fdd\u7559\u5230\u8fd0\u884c\u65f6\uff0c\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7getAnnotation()\u65b9\u6cd5\u83b7\u53d6\u5230\uff1b @Documented \u8868\u660e\u7528javadoc\u751f\u6210\u6587\u6863\u7684\u65f6\u5019\u8be5\u6ce8\u89e3\u662f\u5426\u4f1a\u88ab\u4fdd\u7559\u3002\u5982\u81ea\u5b9a\u4e49\u6ce8\u89e3@Service\uff0c\u5982\u679c\u52a0\u4e0a\u4e86@Documented\uff0c\u90a3\u4e48\u6709@Service\u6ce8\u89e3\u7684\u7c7b\uff0c\u5728\u751f\u6210docs\u6587\u4ef6\u65f6\uff0c\u7c7b\u4e0a\u7684@Service\u5c31\u4f1a\u88ab\u4fdd\u7559\u3002 @Target \u8868\u660e\u6ce8\u89e3\u53ef\u4ee5\u5e94\u7528\u5728\u54ea\u4e9b\u5730\u65b9\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\u503c\uff1a ElementType.ANNOTATION_TYPE \u53ef\u4ee5\u5bf9\u5e94\u7528\u5728\u6ce8\u89e3\u4e0a ElementType.CONSTRUCTOR \u53ef\u4ee5\u5e94\u7528\u5728\u6784\u9020\u65b9\u6cd5\u4e0a ElementType.FIELD \u53ef\u4ee5\u5e94\u7528\u5728\u6210\u5458\u53d8\u91cf\u4e0a ElementType.LOCAL_VARIABLE \u53ef\u4ee5\u5e94\u7528\u5728\u5c40\u90e8\u53d8\u91cf\u4e0a ElementType.METHOD \u53ef\u4ee5\u5e94\u7528\u5728\u65b9\u6cd5\u4e0a ElementType.PACKAGE \u53ef\u4ee5\u5e94\u7528\u5728\u5305\u4e0a ElementType.PARAMETER \u53ef\u4ee5\u5e94\u7528\u5728\u65b9\u6cd5\u7684\u53c2\u6570\u53ca\u8fd4\u56de\u503c\u4e0a ElementType.TYPE \u53ef\u4ee5\u5e94\u7528\u5728\u4efb\u4f55\u7c7b\u578b\u4e0a @Inherited \u8868\u793a\u6ce8\u89e3\u662f\u5426\u53ef\u4ee5\u7ee7\u627f\uff0c\u5982\u679c\u7236\u7c7b\u6709\u6ce8\u89e3\uff0c\u5b50\u7c7b\u4e5f\u53ef\u4ee5\u7ee7\u627f @Repeatable Java 8\u624d\u652f\u6301\u7684\u6ce8\u89e3\uff0c\u8868\u660e\u6ce8\u89e3\u53ef\u4ee5\u6ce8\u89e3\u591a\u6b21\u3002","title":"\u5143\u6ce8\u89e3"},{"location":"pages/java/1-basic/05-annotations/#_8","text":"@Retention ( RetentionPolicy . RUNTIME ) @Target ( ElementType . METHOD ) public @interface MyAnnotation { String value () default = \"a\" ; } \u81ea\u5b9a\u4e49\u6ce8\u89e3\u7684\u8981\u70b9\uff1a \u5fc5\u987b\u7528@interface\u7c7b\u58f0\u660e\u6ce8\u89e3 \u53ef\u4ee5\u7528\u5143\u6ce8\u89e3\u5bf9\u81ea\u5b9a\u4e49\u6ce8\u89e3\u6765\u6807\u8bb0\u6ce8\u89e3\u7684\u58f0\u660e\u5468\u671f\uff0c\u4f5c\u7528\u7b49 \u6ce8\u89e3\u7684\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\uff0c\u59828\u79cd\u57fa\u672c\u7c7b\u578b\u3001String\u3001Class\u3001\u679a\u4e3e\u3001\u6570\u7ec4\u7b49 \u81ea\u5b9a\u4e49\u6ce8\u89e3\u5e94\u7528\u7684\u573a\u666f\uff1a \u4e00\u822c\u5728AOP\u4e2d\u7528\u7684\u6bd4\u8f83\u591a\uff0c\u6bd4\u5982\u767b\u5f55\u62e6\u622a\u6821\u9a8c\uff0c\u901a\u8fc7AnnotationPcessor\u5728\u7f16\u8bd1\u671f\u505a\u5207\u9762\u6253\u5370\u65e5\u5fd7\u3001\u7edf\u8ba1\u8017\u65f6\u7b49\u3002","title":"\u81ea\u5b9a\u4e49\u6ce8\u89e3"},{"location":"pages/java/1-basic/05-annotations/#_9","text":"\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\uff0c\u62ff\u5230Class\u3001Method\u3001Field\u540e\uff0c\u8c03\u7528 <T extends Annotation> T getAnnotation(Class<T> annotationClass); \u65b9\u6cd5\uff0c\u53ef\u4ee5\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u6ce8\u89e3\u3002","title":"\u83b7\u53d6\u6ce8\u89e3"},{"location":"pages/java/1-basic/05-annotations/#_10","text":"\u6ce8\u89e3\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u63a5\u53e3\uff0cjavac\u7f16\u8bd1\u540e\uff0c@annotaion\u58f0\u660e\u7684\u6ce8\u89e3\u4f1a\u7ee7\u627f\u63a5\u53e3 java.lang.annotation.Annotation \u3002 public interface MyAnnotation extends java . lang . annotation . Annotation \u7531\u4e8e\u6ce8\u89e3\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u63a5\u53e3\uff0c\u6240\u4ee5\u901a\u8fc7getAnnotatoin\u83b7\u53d6\u5230\u7684\u6ce8\u89e3\u5b9e\u9645\u662f\u4e00\u4e2a\u52a8\u6001\u4ee3\u7406\u7684\u7c7b\u3002 public class $Proxy1 extends Proxy implements MyAnnotation { String value () { ...} } \u901a\u8fc7AnnotationParser\u6765\u751f\u6210\u4ee3\u7406\u5bf9\u8c61\uff0c\u7528AnnotationInvocationHandler\u6765\u5904\u7406\u6ce8\u89e3\u7684\u53d6\u503c\uff0c\u6ce8\u89e3\u7684\u503c\u90fd\u5b58\u5728memberValues\u4e2d\uff0c\u53d6\u503c\u65f6\u4ee5\u6ce8\u89e3\u7684\u65b9\u6cd5\u4f5c\u4e3akey\u3002 public static Annotation annotationForMap ( Class type , Map < String , Object > memberValues ) { return ( Annotation ) Proxy . newProxyInstance ( type . getClassLoader (), new Class [] { type }, new AnnotationInvocationHandler ( type , memberValues )); } \u53c2\u8003 The Java\u2122 Tutorials - Annotations","title":"\u6ce8\u89e3\u7684\u539f\u7406"},{"location":"pages/java/1-basic/06-generics/","text":"\u6cdb\u578b \u6cdb\u578b\u662fJDK 1.5\u5f15\u5165\u7684\u7279\u6027\uff0c\u4f7f\u7528\u6cdb\u578b\u53ef\u4ee5\u4f7f\u5f97\u5728\u5b9a\u4e49\u7c7b\u3001\u63a5\u53e3\u4ee5\u53ca\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u5c06\u201c\u7c7b\u578b\u201d\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u4ece\u800c\u53ef\u4ee5\u5b9e\u73b0\u4ee3\u7801\u7684\u590d\u7528\u3002 \u4f7f\u7528\u6cdb\u578b\u7684\u539f\u56e0 \u7f16\u8bd1\u671f\u7c7b\u578b\u68c0\u67e5 \u7701\u7565\u7c7b\u578b\u8f6c\u6362\u7684\u4ee3\u7801 \u590d\u7528\u4ee3\u7801 \u6cdb\u578b\u7684\u4f7f\u7528 \u6cdb\u578b\u53ef\u4ee5\u5e94\u7528\u5728\u7c7b\u3001\u63a5\u53e3\u548c\u65b9\u6cd5\u4e0a\uff0c\u901a\u8fc7 \u58f0\u660e\u7c7b\u578b\uff0c\u58f0\u660e\u4e86\u6cdb\u578b\u7c7b\u578b\u4e4b\u540e\uff0c\u5728\u7f16\u8bd1\u671f\u5bf9\u5bf9\u6d89\u53ca\u5230\u6cdb\u578b\u7684\u53c2\u6570\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u5728\u4f7f\u7528\u6cdb\u578b\u7684\u53c2\u6570\u65f6\u4e5f\u4e0d\u5fc5\u8fdb\u884c\u7c7b\u578b\u7684\u8f6c\u6362\u3002 \u6cdb\u578b\u7c7b\u578b(\u7c7b\u548c\u63a5\u53e3) \u6cdb\u578b\u7c7b\u578b\u7684\u4f7f\u7528 \u6cdb\u578b\u7c7b\u548c\u6cdb\u578b\u63a5\u53e3\u58f0\u660e\u7684\u683c\u5f0f\uff1a class name < T1 , T2 , ..., Tn > { /* ... */ } \u8fd9\u91cc\u7684T\u53ef\u4ee5\u662f\u9664\u57fa\u672c\u7c7b\u578b\u7684\u4efb\u610f\u7684\u7c7b\u578b\uff0c\u4e0d\u8fc7\u4e00\u822c\u4e0d\u7528Object\uff0c\u56e0\u4e3aObject\u548c\u6ca1\u52a0\u6cdb\u578b\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002 \u6cdb\u578b\u53c2\u6570\u4e00\u822c\u7684\u547d\u540d\u683c\u5f0f\u4e3a\u5927\u5c0f\u7684\u5355\u4e2a\u5b57\u6bcd\uff0c\u4e0d\u8fc7\u8fd9\u5e76\u4e0d\u662f\u5f3a\u5236\u8981\u6c42\uff0c\u5199\u6210\u5176\u4ed6\u7684\u4e5f\u4e0d\u4f1a\u7f16\u8bd1\u62a5\u9519\u3002\u4e00\u4e9b\u7ea6\u5b9a\u4fd7\u79f0\u7684\u7b80\u79f0\u5982\u4e0b\uff1a E - \u5143\u7d20\uff0c\u4e00\u822c\u5728\u96c6\u5408\u76f8\u5173\u7684\u7c7b\u4e2d\u7528 K - Key N - Number T - Type V - Value S,U,V \u7b49\u7b49. - \u7b2c2\u30013\u30014\u4e2a\u6cdb\u578b \u4e00\u4e2a\u7c7b\u4e0a\u53ef\u4ee5\u58f0\u660e\u591a\u4e2a\u6cdb\u578b\uff0c\u7528,\u5206\u5f00\uff0c\u6cdb\u578b\u4e2d\u4e5f\u53ef\u4ee5\u5305\u542b\u6cdb\u578b\uff0c\u6bd4\u5982\uff1a Pair < Integer , List < Interger >> paier = new Pair <> ( i , list ); \u5b9e\u4f8b\u5316\u6cdb\u578b //Java 7 Box < Integer > box1 = new Box < Integer > (); // Java 8 Box < Integer > box2 = new Box <> (); Java 7\u4e4b\u524d\uff0c\u5b9e\u4f8b\u5316\u6cdb\u578b\u8981\u5728new\u5173\u952e\u5b57\u540e\u9762<>\u4e5f\u58f0\u660e\u6cdb\u578b\u7684\u7c7b\u578b\uff0cJava 8\u4e4b\u540e\u53ef\u4ee5\u7701\u7565\u3002 \u539f\u59cb\u7c7b\u578b \u7c7b\u4e0a\u5e26\u6709\u6cdb\u578b\u65f6\uff0c\u4e0d\u5e26\u6cdb\u578b\u7684\u7c7b\u79f0\u4e3a\u539f\u59cb\u7c7b\u578b\uff0c\u6bd4\u5982\u4e0a\u9762\u7684Box\u5c31\u662f\u539f\u59cb\u7c7b\u578b\u3002 \u5b9e\u4f8b\u5316\u6cdb\u578b\u5bf9\u8c61\u65f6\uff0c\u6cdb\u578b\u7c7b\u7684\u5b9e\u4f8b\u53ef\u4ee5\u8d4b\u503c\u7ed9\u539f\u59cb\u7c7b\uff0c\u4f46\u662f\u53cd\u8fc7\u6765\u5c31\u4f1a\u6709\u4e00\u4e2aunchecked\u8b66\u544a\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u6ca1\u6709\u8db3\u591f\u7684\u4fe1\u606f\u63a8\u65ad\u51fa\u6cdb\u578b\u7684\u7c7b\u578b\u3002 Box < Integer > intBox = new Box <> (); Box rawBox = new Box (); Box b1 = intBox ; //OK Box < Integer > b2 = rawBox ; //warning: unchecked conversion Box < String > b3 = intBox ; //error: incompatable type found \u5bf9\u4e8eunchecked\u7c7b\u578b\u7684\u8b66\u544a\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u5f53\u524d\u8bed\u53e5\u3001\u65b9\u6cd5\u3001\u7c7b\u4e0a\u52a0\u6ce8\u89e3 @SuppressWarnings(\"unchecked\")\u6d88\u9664\uff0c\u4e5f\u53ef\u4ee5\u5728javac\u547d\u4ee4\u7684\u53c2\u6570\u4e2d\u52a0\u4e0a-Xlint:unchecked\u6d88\u9664\u8b66\u544a\u3002 \u6cdb\u578b\u65b9\u6cd5 \u6cdb\u578b\u65b9\u6cd5\u7684\u7c7b\u578b\u7684\u58f0\u660e\u4e00\u822c\u653e\u5728\u8fd4\u56de\u503c\u7684\u524d\u9762\uff0c\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u3001\u53c2\u6570\u90fd\u53ef\u4ee5\u662f\u6cdb\u578b\u3002 public static < T , R > R func ( T param1 , Integer param2 ) { // ... R r = ... return r ; } \u6cdb\u578b\u7684\u8fb9\u754c \u6cdb\u578b\u8fb9\u754c\u5206\u4e3a\u4e0a\u754c\u548c\u4e0b\u754c\uff0c\u5206\u522b\u7528extends\u548csuper\u8868\u793a\u3002 \u4e0a\u754c <T extends Number> \uff0c\u8868\u793a\u4f7f\u7528\u6cdb\u578b\u65f6\u7684\u7c7b\u578b\u53ea\u80fd\u662fNumber\u6216\u5176\u5b50\u7c7b\u3002\u8fd9\u91cc\u7684extends\u4e0d\u662f\u4ee3\u8868\u7ee7\u627f\u7684\u610f\u601d\uff0c\u6cdb\u578b\u7684\u4e0a\u754c\u53ef\u4ee5\u662f\u63a5\u53e3\uff0c\u5982 <T extends Consumer> \u8868\u793a\u6cdb\u578b\u7684\u7c7b\u578b\u5fc5\u987b\u8981\u5b9e\u73b0Consumer\u63a5\u53e3\u3002 \u4e0b\u754c <T super Integer> \uff0c\u8868\u793a\u4f7f\u7528\u6cdb\u578b\u65f6\u7684\u7c7b\u578b\u53ea\u80fd\u662fInterger\u7684\u8d85\u7c7b\uff0c\u6bd4\u5982\u53ef\u4ee5\u662fNumber\uff0c\u6216\u8005Objective\u3002 \u591a\u4e2a\u4e0a\u754c <T extends A & B & C> \uff0c\u8868\u793a\u7c7b\u578b\u5fc5\u987b\u662fA\u7684\u5b50\u7c7b\u5e76\u5b9e\u73b0B\u3001C\u63a5\u53e3\uff0c\u7531\u4e8eJava\u4e0d\u652f\u6301\u591a\u7ee7\u627f\uff0cA\u3001B\u3001C\u5b9e\u9645\u4e0a\u81f3\u591a\u6709\u4e00\u4e2a\u662f\u7c7b\u5176\u4ed6\u7684\u5fc5\u987b\u662f\u63a5\u53e3\uff0c\u5982\u4e0b\u4ee3\u7801\u4f1a\u7f16\u8bd1\u5931\u8d25: class G < T extends Number & String > {} //compile error: Interface expected here \u7279\u6b8a\u8981\u6c42\uff0c\u5f53\u6cdb\u578b\u6709\u591a\u4e2a\u4e0a\u754c\u65f6\uff0c\u5982\u679c\u6709\u7c7b\uff0c\u901a\u8fc7&\u8fde\u63a5\u65f6\uff0c\u5fc5\u987b\u5c06\u7c7b\u653e\u5728\u6700\u524d\u9762\uff0c\u5426\u5219\u4f1a\u7f16\u8bd1\u5931\u8d25\uff0c\u6bd4\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5982\u679c\u6709\u7c7b\uff0c\u5219\u53ea\u80fdA\u662f\u7c7b\uff0c\u5176\u4ed6\u7684\u53ea\u80fd\u662f\u63a5\u53e3\u3002 class G < T extends Comparable & Number > {} //compile error: Interface expected here \u7c7b\u578b\u63a8\u65ad Java\u7f16\u8bd1\u5668\u53ef\u4ee5\u6839\u636e\u7c7b\u578b\u58f0\u660e\u4ee5\u8c03\u7528\u7684\u4e0a\u4e0b\u6587\u6765\u63a8\u65ad\u5177\u4f53\u7684\u7c7b\u578b\uff0c\u6bd4\u5982\u5b98\u7f51\u4e0a\u7684\u4f8b\u5b50\uff1a static < T > T pick ( T a1 , T a2 ) { return a2 ; } Serializable s = pick ( \"d\" , new ArrayList < String > ()); pick\u65b9\u6cd5\u4e2d\u7684\u8c03\u7528\u4e2d\uff0c\u4f20\u5165\u53c2\u6570\u5206\u522b\u662fString\u548cArrayList \uff0c\u800c\u65b9\u6cd5\u58f0\u660e\u4e2d\u4e24\u4e2a\u53c2\u6570\u7684\u6cdb\u578b\u7c7b\u578b\u662f\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u8fd9\u91cc\u7684\u6cdb\u578bT\u5c31\u5e94\u8be5\u662fString\u548cArrayList \uff0c\u5373Serializable\uff0c\u5982\u679c\u4e24\u4e2a\u53c2\u6570\u6ca1\u6709\u516c\u5171\u7684\u7236\u7c7b\uff0c\u5219\u7f16\u8bd1\u4f1a\u5931\u8d25\u3002 \u901a\u914d\u7b26 \u6cdb\u578b\u4e2d\u7684\u901a\u914d\u7b26\u7528?\u8868\u793a\uff0c\u5728\u4f7f\u7528\u901a\u914d\u7b26\u65f6\uff0c\u4e00\u822c\u4e0eextends\u548csuper\u4e00\u8d77\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5355\u72ec\u4f7f\u7528\u3002 \u4e0a\u754c\u901a\u914d\u7b26 <? extends Foo> \uff0c\u8868\u793a\u53ef\u4ee5\u6cdb\u578b\u662fFoo\u7684\u4efb\u610f\u5b50\u7c7b(\u5982\u679cFoo\u662f\u63a5\u53e3\uff0c\u8868\u793a\u4efb\u610f\u5b9e\u73b0\u4e86Foo\u63a5\u53e3\u7684\u7c7b)\u3002 \u6709\u4e00\u79cd\u8bf4\u6cd5\u662f\uff0c\u4e0a\u754c\u901a\u914d\u7b26\u65f6\u8bfb\u5b89\u5168\u7684\uff0c\u4f8b\u5982\uff0c\u5bf9\u4e8e\u96c6\u5408 List<? extends Foo> list \uff0c\u4ece\u4e2d\u8bfb\u51fa\u6765\u7684\u5143\u7d20\u8d4b\u503c\u7ed9Foo\u662f\u5b89\u5168\u7684\uff0c\u53ef\u4ee5\u653e\u5fc3\u7684\u505a\u7c7b\u578b\u8f6c\u6362\u3002 <? extends Foo> \u4e0e <T extends Foo> \u90fd\u6d89\u53ca\u5230\u6cdb\u578b\u7684\u4e0a\u754c\uff0c\u5176\u533a\u522b\u662f\u5e26\u901a\u914d\u7b26\u7684\u6cdb\u578b\uff0c\u5176\u4e0a\u754c\u6709\u9650\uff0c\u4e0b\u754c\u65e0\u9650\uff0c\u610f\u5473\u7740\u6cdb\u578b\u53ef\u4ee5\u63a5\u6536\u5f88\u591a\u79cd\u7b26\u5408\u4e0a\u754c\u6761\u4ef6\u7684\u7c7b\u578b\u7684\u8d4b\u503c\uff0c\u4f46\u662f\u4e0d\u5e26\u901a\u914d\u7b26\u7684\u6cdb\u578b\uff0c\u5176\u7c7b\u578b\u662f\u552f\u4e00\u786e\u5b9a\u7684\uff0c\u53ea\u80fd\u662fT\uff0c\u53ef\u4ee5\u63a5\u6536\u7684\u7c7b\u578b\u4e5f\u662f\u552f\u4e00\u7684\u3002 \u4e0b\u754c\u901a\u914d\u7b26 <? super Foo> \uff0c\u548c\u4e0a\u754c\u901a\u914d\u7b26\u7c7b\u4f3c\uff0c\u4e0b\u754c\u901a\u914d\u7b26\u8868\u793a\u6cdb\u578b\u662fFoo\u7684\u7236\u7c7b\u7684\u4efb\u610f\u7c7b\u578b\u3002 \u7c7b\u4f3c\u7684\u3002\u4e0b\u754c\u901a\u914d\u7b26\u662f\u5199\u5b89\u5168\u7684\uff0c\u6bd4\u5982\uff0c\u5bf9\u4e8e\u96c6\u5408 List<? super Foo> \uff0c\u5c06Foo\u7c7b\u578b\u7684\u6570\u636e\u63d2\u5165\u5230\u96c6\u5408\u4e2d\u662f\u5b89\u5168\u7684\u3002 \u65e0\u9650\u5b9a\u901a\u914d\u7b26 ?\u5355\u72ec\u4f7f\u7528\u7684\u65f6\u5019\u5c31\u662f\u65e0\u9650\u5b9a\u901a\u914d\u7b26\uff0c\u8868\u793a\u6cdb\u578b\u7684\u7c7b\u578b\u4e0d\u786e\u5b9a\u3002 \u65e0\u9650\u5b9a\u901a\u914d\u7b26\u867d\u7136\u8868\u793a\u7c7b\u578b\u4e0d\u786e\u5b9a\uff0c\u4f46\u4ed6\u5e76\u4e0d\u8868\u793a\u662f\u6ca1\u6709\u6cdb\u578b\uff0c\u5b83\u5bf9\u7c7b\u578b\u8fd8\u662f\u6709\u7ea6\u675f\u7684\uff0c\u4f8b\u5982\uff1a List list1 = new ArrayList < A > (); List <?> list2 = new ArrayList < A > (); List < A > list3 = new ArrayList < A > (); list2\u3001list3\u3001list4\u90fd\u53ef\u4ee5\u8d4b\u503c\u7ed9list1\uff0c\u56e0\u4e3alist1\u6ca1\u6709\u58f0\u660e\u6cdb\u578b\uff0c\u662f\u539f\u59cb\u7c7b\u578b\u3002 list3\u4e0d\u80fd\u8d4b\u503c\u7ed9list2\uff0c\u5c3d\u7ba1list2\u4e2d\u6cdb\u578b\u7c7b\u578b\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u4f46\u662f\u5b83\u8fd8\u662f\u6709\u6cdb\u578b\u7684\uff0c\u53ea\u4e0d\u8fc7\u5176\u6cdb\u578b\u6211\u4eec\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\uff0c\u6709\u53ef\u80fd\u662fA\uff0c\u4e5f\u53ef\u80fd\u662fB\u3001C\u3001D\u7b49\u5176\u5b83\u7c7b\u578b\uff0c\u56e0\u6b64\u5c06 List<A> \u7c7b\u578b\u7684\u53d8\u91cf\u76f4\u63a5\u8d4b\u503c\u7ed9 ?\u4e0eT\u7684\u533a\u522b T\u8868\u793a\u7684\u6cdb\u578b\u7c7b\u578b\u662f\u552f\u4e00\u786e\u5b9a\u7684\uff0c?\u8868\u793a\u6cdb\u578b\u7684\u7c7b\u578b\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u5176\u8303\u56f4\u66f4\u5e7f T\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\uff0c?\u4e0d\u884c \u4f5c\u4e3a\u7c7b\u578b\u4f7f\u7528\u65f6\uff0cT\u4f5c\u7528\u7c7b\u4f3c\u4e8eclass\uff0c\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2aT\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\uff1f\u5c31\u4e0d\u884c \u6cdb\u578b\u6355\u83b7 \u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u7f16\u8bd1\u5668\u63a8\u65ad\u51fa\u901a\u914d\u7b26\u7c7b\u578b\uff0c\u5982List<?>\uff0c\u4f46\u5f53\u5224\u65ad\u8868\u8fbe\u5f0f\u7684\u65f6\u5019\uff0c\u53c8\u63a8\u65ad\u51fa\u5177\u4f53\u7684\u7c7b\u578b\uff0c\u8fd9\u79cd\u73b0\u8c61\u53eb\u6cdb\u578b\u6355\u83b7\uff0c\u6b64\u65f6\u4f1a\u4ea7\u751f\u7f16\u8bd1\u5f02\u5e38\u3002\u4f8b\u5982\uff1a void foo ( List <?> list ) { list . set ( 0 , list . get ( 0 )); } \u8fd9\u6bb5\u4ee3\u7801\u4f1a\u4ea7\u751f\u6cdb\u578b\u6355\u83b7\u7684\u7f16\u8bd1\u9519\u8bef\uff0c\u539f\u56e0\u662f\u7f16\u8bd1\u5668\u5c06\u65b9\u6cd5\u53c2\u6570list\u5904\u7406\u6210Object\u7c7b\u578b\uff0c\u4f46\u5728\u8c03\u7528list.set(int, E)\u65f6\uff0c\u53c8\u65e0\u6cd5\u63a8\u65ad\u51faE\u7684\u7c7b\u578b\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e00\u822c\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2aHelper\u65b9\u6cd5\uff0c\u5982\uff1a void foo ( List <?> list ) { fooHelper ( list ); } void < T > fooHelper ( List < T > list ) { list . set ( 0 , list . get ( 0 )); } \u6cdb\u578b\u64e6\u9664 Java\u4e2d\u7684\u6cdb\u578b\u5b9e\u9645\u662f\u4f2a\u6cdb\u578b\uff0c\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\uff0c\u6cdb\u578b\u7684\u7c7b\u578b\u90fd\u4f1a\u88ab\u64e6\u9664\uff0c\u751f\u6210\u7684\u5b57\u8282\u7801\u4e2d\uff0c\u4e0d\u4f1a\u4fdd\u7559\u6cdb\u578b\u7684\u4fe1\u606f\uff0c\u53ea\u4f1a\u6709\u539f\u59cb\u7c7b\u7684\u4fe1\u606f\u3002 \u5728\u4f20\u9012\u7c7b\u578b\u53c2\u6570\u65f6\uff0c\u5bf9\u4e8e\u65e0\u754c\u7684\u6cdb\u578b\uff08\u4e0d\u8bba\u662fT\u8fd8\u662f?\uff09\uff0c\u90fd\u4f1a\u88ab\u66ff\u6362\u6210Object\u7c7b\u578b\uff0c\u5bf9\u4e8e\u6709\u754c\u7684\u53c2\u6570\uff0c\u5219\u4f1a\u88ab\u66ff\u6362\u6210\u8fb9\u754c\u7c7b\u578b\u3002 \u4e3a\u4e86\u4fdd\u7559\u7c7b\u578b\u5b89\u5168\uff0c\u5fc5\u8981\u7684\u65f6\u5019\u4f1a\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002 \u7c7b\u578b\u64e6\u9664\u4e0e\u6865\u65b9\u6cd5 \u6709\u5982\u4e0b\u7684\u4ee3\u7801\uff1a public class Node < T > { protected T data ; public Node ( T data ) { this . data = data ; } public void setData ( T data ) { this . data = data ; } } public class IntNode extends Node < Integer > { public IntNode ( Integer data ) { super ( data ); } @Override public void setData ( Integer data ) { this . data = data ; } } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cIntNode\u7ee7\u627f\u4e86Node\uff0c\u5e76\u5c06\u5176\u6cdb\u578b\u5177\u5316\u6210Integer\uff0c\u6b64\u65f6\u95ee\u9898\u5c31\u6765\u4e86\uff0cIntNode\u7ee7\u627fNode\u4e4b\u540e\uff0c\u91cd\u8f7d\u4e86setData\u65b9\u6cd5\uff0c\u4f46\u662f\u91cd\u8f7d\u6539\u53d8\u4e86setData\u7684\u65b9\u6cd5\u7b7e\u540d\uff0c\u7531\u4e8e\u6cdb\u578b\u64e6\u9664\u7236\u7c7b\u4e2d\u53c2\u6570\u7c7b\u578b\u662fObject\uff0c\u5b50\u7c7b\u53c2\u6570\u786e\u53d8\u6210\u4e86Integer\uff0c\u8fd9\u663e\u7136\u4e0d\u7b26\u5408\u91cd\u8f7d\u7684\u89c4\u5219\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u79cd\u95ee\u9898\u7f16\u8bd1\u5668\u4f1a\u751f\u6210\u4e00\u4e2a\u6865\u65b9\u6cd5\uff0c\u5982\u4e0b\uff1a public class Node { protected T data ; public Node ( Object data ) { this . data = data ; } public void setData ( Object data ) { this . data = data ; } } public class IntNode extends Node { public IntNode ( Integer data ) { super ( data ); } // \u7f16\u8bd1\u5668\u751f\u6210\u7684\u6865\u65b9\u6cd5\uff0c\u771f\u6b63\u91cd\u8f7d\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u540c\u65f6\u505a\u7c7b\u578b\u8f6c\u6362\uff0c\u8c03\u7528\u5b50\u7c7b\u7684\u65b9\u6cd5 public void setData ( Object data ) { setData (( Integer ) data ); } public void setData ( Integer data ) { this . data = data ; } } \u5728\u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u65b9\u6cd5\u7684\u5b9e\u73b0\u4e2d\uff0c\u771f\u6b63\u7ee7\u627f\u7236\u7c7b\u5e76\u548csetData\u65b9\u6cd5\u7b7e\u540d\u4e00\u81f4\u7684\u6865\u65b9\u6cd5\uff0c\u6211\u4eec\u5728\u5199\u4ee3\u7801\u65f6\u662f\u770b\u4e0d\u5230\u7684\uff0c\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u671f\u4f1a\u4e3a\u6211\u4eec\u81ea\u52a8\u5904\u7406\u3002 \u57fa\u4e8e\u6b64\uff0c\u5728\u8c03\u7528\u6cdb\u578b\u65f6\uff0c\u5982\u679c\u53c2\u6570\u548c\u6cdb\u578b\u89c4\u5b9a\u7684\u4e0d\u4e00\u81f4\uff0c\u4f1a\u4ea7\u751fClassCastException\uff0c\u5982\uff1a IntNode intNode = new IntNode ( 5 ); Node node = intNode ; node . set ( \"123\" ); //ClassCasetException \u8fd0\u884c\u65f6\u83b7\u53d6\u6cdb\u578b \u7531\u4e8e\u6cdb\u578b\u7684\u64e6\u9664\uff0c\u5728\u8fd0\u884c\u65f6\u7406\u8bba\u4e0a\u662f\u62ff\u4e0d\u5230\u6cdb\u578b\u7684\u7c7b\u578b\u7684\uff0c\u60f3\u8981\u83b7\u53d6\u6cdb\u578b\u7684\u7c7b\u578b\uff0c\u5fc5\u987b\u8981\u6ee1\u8db3\u6761\u4ef6\uff1a \u5fc5\u987b\u8981\u6709\u771f\u5b9e\u7684\u7c7b\u578b\uff0c\u65e2\u5fc5\u987b\u80fd\u62ff\u5230class\uff1b \u6cdb\u578b\u7684\u7c7b\u578b\u662f\u660e\u786e\u7684\uff0c\u5982List \u7c7b\u578b\u662f\u660e\u786e\u7684\uff0cList \u662f\u4e0d\u660e\u786e\u7684\u3002 \u62ff\u5230class\u4e4b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7getGenericInterfaces()\u548cgetgetGenericSuperclass()\u4e24\u4e2a\u65b9\u6cd5\u83b7\u53d6\u6cdb\u578b\u3002 getGenericInterfaces()\u83b7\u53d6\u5230\u7684\u662f\u7c7b\u5b9e\u73b0\u7684\u63a5\u53e3\uff0c\u8fd4\u56de\u7ed3\u679c\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5373\u5b9e\u73b0\u7684\u63a5\u53e3\u7684\u7c7b\u578b\uff1a interface Service < T > { } class ServiceImpl implements Service < String > { public Type getType () { Type [] genericInterfaces = ServiceImpl . class . getGenericInterfaces (); ParameterizedType parameterizedType = ( ParameterizedType ) genericInterfaces [ 0 ] ; return parameterizedType . getActualTypeArguments () [ 0 ] ; } } getgetGenericSuperclass()\u83b7\u53d6\u5230\u7684\u662f\u7236\u7c7b\u7684\u7c7b\u578b\uff0c\u5982\u679c\u6cdb\u578b\u660e\u786e\u4e5f\u662f\u53ef\u4ee5\u83b7\u53d6\u5230\u6cdb\u578b\uff1a abstract Service < T > { } class ServiceImpl extends Service < String > { public Type getType () { Type genericSuperclass = ServiceImpl . class . getgetGenericSuperclass (); return (( ParameterizedType ) genericSuperclass ). getActualTypeArguments () [ 0 ] ; } } gson\u4e2d\u53ef\u4ee5\u5229\u7528TypeToken\u6765\u83b7\u53d6\u6cdb\u578b\uff0c\u4f46\u662f\u6cdb\u578b\u8981\u662f\u660e\u786e\u7684\u5982\uff1a Type type1 = new TypeToken < String > (){}. getType (); //\u2705 Type type2 = new TypeToken < T > (){}. getType (); //\u274c \u6cdb\u578b\u4e0d\u660e\u786e Type type3 = new TypeToken < String > (). getType (); //\u274c \u83b7\u53d6\u4e0d\u5230\u7236\u7c7b TypeToken\u662f\u4f7f\u7528\u4e86\u548cgetgetGenericSuperclass()\u5b9e\u73b0\u7684\u83b7\u53d6\u7c7b\u578b\uff0c\u5176\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u83b7\u53d6\u7236\u7c7b\u7684\u7c7b\u578b\u5e76\u4fdd\u5b58\u4e0b\u6765\uff0c\u56e0\u6b64\u5229\u7528Token\u83b7\u53d6\u6cdb\u578b\u5b9e\u9645\u662f\u5b9e\u73b0\u4e86\u4e00\u4e2aTypeToken\u7684\u533f\u540d\u5b50\u7c7b\uff0c\u7136\u540e\u5728\u5b50\u7c7b\u4e2d\u83b7\u53d6\u7236\u7c7b\u7684\u6cdb\u578b\uff0c\u5982\u679c\u4e0d\u5e26 {} \uff0c\u5c31\u662f\u76f4\u63a5\u4f7f\u7528TypeToken\uff0c\u5176\u5e76\u65e0\u7236\u7c7b\uff0c\u56e0\u6b64\u65e0\u6cd5\u83b7\u53d6\u6cdb\u578b\u3002 public class TypeToken < T > { final Class <? super T > rawType ; final Type type ; protected TypeToken () { this . type = getSuperclassTypeParameter ( getClass ()); this . rawType = ( Class <? super T > ) $Gson$Types . getRawType ( type ); this . hashCode = type . hashCode (); } } \u4f7f\u7528\u6cdb\u578b\u7684\u9650\u5236 \u5e26\u6cdb\u578b\u7684\u7c7b\u5b9e\u4f8b\u5316\u65f6\uff0c\u6cdb\u578b\u4e0d\u80fd\u662f\u57fa\u7840\u7c7b\u578b\uff0c\u8981\u7528\u5305\u88c5\u7c7b\u578b : Pair < int , String > pair = new Pair ( 1 , \"123456\" ); //compile-time error \u7c7b\u578b\u53c2\u6570\u4e0d\u80fd\u76f4\u63a5\u7528new\u5173\u952e\u5b57\u5b9e\u4f8b\u5316 : public < T > void foo ( T val ) { T t = new T (); // compile-time error } \u9759\u6001\u53d8\u91cf\u4e0d\u80fd\u662f\u6cdb\u578b\u5e26\u6cdb\u578b\u3002 : \u9759\u6001\u53d8\u91cf\u662f\u7c7b\u7ea7\u522b\u7684\uff0c\u662f\u6240\u6709\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u5171\u4eab\u7684\uff0c\u4e0d\u80fd public class MobileDevice < T > { private static T os ; // compile-time error // ... } \u7531\u4e8e\u6cdb\u578b\u64e6\u9664\uff0c\u5e26\u7c7b\u578b\u53c2\u6570\u65f6\uff0c\u4e0d\u80fd\u7c7b\u578b\u5f3a\u8f6c\u4e5f\u4e0d\u80fd\u7528instanceof\u6765\u5224\u65ad\u53c2\u6570\u7684\u5177\u4f53\u7c7b\u578b public static < E > void rtti ( List < E > list ) { if ( list instanceof ArrayList < Integer > ) { // compile-time error // ... } } \u6570\u7ec4\u4e0d\u80fd\u5e26\u6cdb\u578b\u53c2\u6570 List < Integer >[] arrayOfLists = new List < Integer >[ 2 ] ; // compile-time error \u5f02\u5e38\u5904\u7406\u65f6\u4e0d\u80fd\u5e26\u6cdb\u578b : \u7ee7\u627fException\u6216Throwable\u7684\u7c7b\uff0c\u5e26\u6cdb\u578b\u4f1a\u7f16\u8bd1\u51fa\u9519 // Extends Throwable indirectly class MathException < T > extends Exception { /* ... */ } // compile-time error // Extends Throwable directly class QueueFullException < T > extends Throwable { /* ... */ // compile-time error \u6cdb\u578b\u65b9\u6cd5\u4e2d\u5982\u679c\u6cdb\u578b\u662f\u5f02\u5e38\uff0c\u4e0d\u80fd\u76f4\u63a5catch\u4f4f public static < T extends Exception , J > void execute ( List < J > jobs ) { try { for ( J job : jobs ) // ... } catch ( T e ) { // compile-time error // ... } } \u4f46\u662f\u53ef\u4ee5throw\u51fa\u6765\uff1a class Parser < T extends Exception > { public void parse ( File file ) throws T { // OK // ... } } \u539f\u59cb\u7c7b\u578b\u4e00\u6837\u7684\u65b9\u6cd5\uff0c\u4e0d\u80fd\u91cd\u8f7d \u7c7b\u578b\u64e6\u9664\u540e\uff0c\u4e24\u4e2a\u65b9\u6cd5\u7684\u7b7e\u540d\u4e00\u6a21\u4e00\u6837\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u91cd\u8f7d public class Example { public void print ( Set < String > strSet ) { } public void print ( Set < Integer > intSet ) { } } \u53c2\u8003 The Java\u2122 Tutorials -- Generics","title":"\u6cdb\u578b"},{"location":"pages/java/1-basic/06-generics/#_1","text":"\u6cdb\u578b\u662fJDK 1.5\u5f15\u5165\u7684\u7279\u6027\uff0c\u4f7f\u7528\u6cdb\u578b\u53ef\u4ee5\u4f7f\u5f97\u5728\u5b9a\u4e49\u7c7b\u3001\u63a5\u53e3\u4ee5\u53ca\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u5c06\u201c\u7c7b\u578b\u201d\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u4ece\u800c\u53ef\u4ee5\u5b9e\u73b0\u4ee3\u7801\u7684\u590d\u7528\u3002","title":"\u6cdb\u578b"},{"location":"pages/java/1-basic/06-generics/#_2","text":"\u7f16\u8bd1\u671f\u7c7b\u578b\u68c0\u67e5 \u7701\u7565\u7c7b\u578b\u8f6c\u6362\u7684\u4ee3\u7801 \u590d\u7528\u4ee3\u7801","title":"\u4f7f\u7528\u6cdb\u578b\u7684\u539f\u56e0"},{"location":"pages/java/1-basic/06-generics/#_3","text":"\u6cdb\u578b\u53ef\u4ee5\u5e94\u7528\u5728\u7c7b\u3001\u63a5\u53e3\u548c\u65b9\u6cd5\u4e0a\uff0c\u901a\u8fc7 \u58f0\u660e\u7c7b\u578b\uff0c\u58f0\u660e\u4e86\u6cdb\u578b\u7c7b\u578b\u4e4b\u540e\uff0c\u5728\u7f16\u8bd1\u671f\u5bf9\u5bf9\u6d89\u53ca\u5230\u6cdb\u578b\u7684\u53c2\u6570\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u5728\u4f7f\u7528\u6cdb\u578b\u7684\u53c2\u6570\u65f6\u4e5f\u4e0d\u5fc5\u8fdb\u884c\u7c7b\u578b\u7684\u8f6c\u6362\u3002","title":"\u6cdb\u578b\u7684\u4f7f\u7528"},{"location":"pages/java/1-basic/06-generics/#_4","text":"\u6cdb\u578b\u7c7b\u578b\u7684\u4f7f\u7528 \u6cdb\u578b\u7c7b\u548c\u6cdb\u578b\u63a5\u53e3\u58f0\u660e\u7684\u683c\u5f0f\uff1a class name < T1 , T2 , ..., Tn > { /* ... */ } \u8fd9\u91cc\u7684T\u53ef\u4ee5\u662f\u9664\u57fa\u672c\u7c7b\u578b\u7684\u4efb\u610f\u7684\u7c7b\u578b\uff0c\u4e0d\u8fc7\u4e00\u822c\u4e0d\u7528Object\uff0c\u56e0\u4e3aObject\u548c\u6ca1\u52a0\u6cdb\u578b\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002 \u6cdb\u578b\u53c2\u6570\u4e00\u822c\u7684\u547d\u540d\u683c\u5f0f\u4e3a\u5927\u5c0f\u7684\u5355\u4e2a\u5b57\u6bcd\uff0c\u4e0d\u8fc7\u8fd9\u5e76\u4e0d\u662f\u5f3a\u5236\u8981\u6c42\uff0c\u5199\u6210\u5176\u4ed6\u7684\u4e5f\u4e0d\u4f1a\u7f16\u8bd1\u62a5\u9519\u3002\u4e00\u4e9b\u7ea6\u5b9a\u4fd7\u79f0\u7684\u7b80\u79f0\u5982\u4e0b\uff1a E - \u5143\u7d20\uff0c\u4e00\u822c\u5728\u96c6\u5408\u76f8\u5173\u7684\u7c7b\u4e2d\u7528 K - Key N - Number T - Type V - Value S,U,V \u7b49\u7b49. - \u7b2c2\u30013\u30014\u4e2a\u6cdb\u578b \u4e00\u4e2a\u7c7b\u4e0a\u53ef\u4ee5\u58f0\u660e\u591a\u4e2a\u6cdb\u578b\uff0c\u7528,\u5206\u5f00\uff0c\u6cdb\u578b\u4e2d\u4e5f\u53ef\u4ee5\u5305\u542b\u6cdb\u578b\uff0c\u6bd4\u5982\uff1a Pair < Integer , List < Interger >> paier = new Pair <> ( i , list ); \u5b9e\u4f8b\u5316\u6cdb\u578b //Java 7 Box < Integer > box1 = new Box < Integer > (); // Java 8 Box < Integer > box2 = new Box <> (); Java 7\u4e4b\u524d\uff0c\u5b9e\u4f8b\u5316\u6cdb\u578b\u8981\u5728new\u5173\u952e\u5b57\u540e\u9762<>\u4e5f\u58f0\u660e\u6cdb\u578b\u7684\u7c7b\u578b\uff0cJava 8\u4e4b\u540e\u53ef\u4ee5\u7701\u7565\u3002 \u539f\u59cb\u7c7b\u578b \u7c7b\u4e0a\u5e26\u6709\u6cdb\u578b\u65f6\uff0c\u4e0d\u5e26\u6cdb\u578b\u7684\u7c7b\u79f0\u4e3a\u539f\u59cb\u7c7b\u578b\uff0c\u6bd4\u5982\u4e0a\u9762\u7684Box\u5c31\u662f\u539f\u59cb\u7c7b\u578b\u3002 \u5b9e\u4f8b\u5316\u6cdb\u578b\u5bf9\u8c61\u65f6\uff0c\u6cdb\u578b\u7c7b\u7684\u5b9e\u4f8b\u53ef\u4ee5\u8d4b\u503c\u7ed9\u539f\u59cb\u7c7b\uff0c\u4f46\u662f\u53cd\u8fc7\u6765\u5c31\u4f1a\u6709\u4e00\u4e2aunchecked\u8b66\u544a\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u6ca1\u6709\u8db3\u591f\u7684\u4fe1\u606f\u63a8\u65ad\u51fa\u6cdb\u578b\u7684\u7c7b\u578b\u3002 Box < Integer > intBox = new Box <> (); Box rawBox = new Box (); Box b1 = intBox ; //OK Box < Integer > b2 = rawBox ; //warning: unchecked conversion Box < String > b3 = intBox ; //error: incompatable type found \u5bf9\u4e8eunchecked\u7c7b\u578b\u7684\u8b66\u544a\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u5f53\u524d\u8bed\u53e5\u3001\u65b9\u6cd5\u3001\u7c7b\u4e0a\u52a0\u6ce8\u89e3 @SuppressWarnings(\"unchecked\")\u6d88\u9664\uff0c\u4e5f\u53ef\u4ee5\u5728javac\u547d\u4ee4\u7684\u53c2\u6570\u4e2d\u52a0\u4e0a-Xlint:unchecked\u6d88\u9664\u8b66\u544a\u3002","title":"\u6cdb\u578b\u7c7b\u578b(\u7c7b\u548c\u63a5\u53e3)"},{"location":"pages/java/1-basic/06-generics/#_5","text":"\u6cdb\u578b\u65b9\u6cd5\u7684\u7c7b\u578b\u7684\u58f0\u660e\u4e00\u822c\u653e\u5728\u8fd4\u56de\u503c\u7684\u524d\u9762\uff0c\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u3001\u53c2\u6570\u90fd\u53ef\u4ee5\u662f\u6cdb\u578b\u3002 public static < T , R > R func ( T param1 , Integer param2 ) { // ... R r = ... return r ; }","title":"\u6cdb\u578b\u65b9\u6cd5"},{"location":"pages/java/1-basic/06-generics/#_6","text":"\u6cdb\u578b\u8fb9\u754c\u5206\u4e3a\u4e0a\u754c\u548c\u4e0b\u754c\uff0c\u5206\u522b\u7528extends\u548csuper\u8868\u793a\u3002 \u4e0a\u754c <T extends Number> \uff0c\u8868\u793a\u4f7f\u7528\u6cdb\u578b\u65f6\u7684\u7c7b\u578b\u53ea\u80fd\u662fNumber\u6216\u5176\u5b50\u7c7b\u3002\u8fd9\u91cc\u7684extends\u4e0d\u662f\u4ee3\u8868\u7ee7\u627f\u7684\u610f\u601d\uff0c\u6cdb\u578b\u7684\u4e0a\u754c\u53ef\u4ee5\u662f\u63a5\u53e3\uff0c\u5982 <T extends Consumer> \u8868\u793a\u6cdb\u578b\u7684\u7c7b\u578b\u5fc5\u987b\u8981\u5b9e\u73b0Consumer\u63a5\u53e3\u3002 \u4e0b\u754c <T super Integer> \uff0c\u8868\u793a\u4f7f\u7528\u6cdb\u578b\u65f6\u7684\u7c7b\u578b\u53ea\u80fd\u662fInterger\u7684\u8d85\u7c7b\uff0c\u6bd4\u5982\u53ef\u4ee5\u662fNumber\uff0c\u6216\u8005Objective\u3002 \u591a\u4e2a\u4e0a\u754c <T extends A & B & C> \uff0c\u8868\u793a\u7c7b\u578b\u5fc5\u987b\u662fA\u7684\u5b50\u7c7b\u5e76\u5b9e\u73b0B\u3001C\u63a5\u53e3\uff0c\u7531\u4e8eJava\u4e0d\u652f\u6301\u591a\u7ee7\u627f\uff0cA\u3001B\u3001C\u5b9e\u9645\u4e0a\u81f3\u591a\u6709\u4e00\u4e2a\u662f\u7c7b\u5176\u4ed6\u7684\u5fc5\u987b\u662f\u63a5\u53e3\uff0c\u5982\u4e0b\u4ee3\u7801\u4f1a\u7f16\u8bd1\u5931\u8d25: class G < T extends Number & String > {} //compile error: Interface expected here \u7279\u6b8a\u8981\u6c42\uff0c\u5f53\u6cdb\u578b\u6709\u591a\u4e2a\u4e0a\u754c\u65f6\uff0c\u5982\u679c\u6709\u7c7b\uff0c\u901a\u8fc7&\u8fde\u63a5\u65f6\uff0c\u5fc5\u987b\u5c06\u7c7b\u653e\u5728\u6700\u524d\u9762\uff0c\u5426\u5219\u4f1a\u7f16\u8bd1\u5931\u8d25\uff0c\u6bd4\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5982\u679c\u6709\u7c7b\uff0c\u5219\u53ea\u80fdA\u662f\u7c7b\uff0c\u5176\u4ed6\u7684\u53ea\u80fd\u662f\u63a5\u53e3\u3002 class G < T extends Comparable & Number > {} //compile error: Interface expected here","title":"\u6cdb\u578b\u7684\u8fb9\u754c"},{"location":"pages/java/1-basic/06-generics/#_7","text":"Java\u7f16\u8bd1\u5668\u53ef\u4ee5\u6839\u636e\u7c7b\u578b\u58f0\u660e\u4ee5\u8c03\u7528\u7684\u4e0a\u4e0b\u6587\u6765\u63a8\u65ad\u5177\u4f53\u7684\u7c7b\u578b\uff0c\u6bd4\u5982\u5b98\u7f51\u4e0a\u7684\u4f8b\u5b50\uff1a static < T > T pick ( T a1 , T a2 ) { return a2 ; } Serializable s = pick ( \"d\" , new ArrayList < String > ()); pick\u65b9\u6cd5\u4e2d\u7684\u8c03\u7528\u4e2d\uff0c\u4f20\u5165\u53c2\u6570\u5206\u522b\u662fString\u548cArrayList \uff0c\u800c\u65b9\u6cd5\u58f0\u660e\u4e2d\u4e24\u4e2a\u53c2\u6570\u7684\u6cdb\u578b\u7c7b\u578b\u662f\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u8fd9\u91cc\u7684\u6cdb\u578bT\u5c31\u5e94\u8be5\u662fString\u548cArrayList \uff0c\u5373Serializable\uff0c\u5982\u679c\u4e24\u4e2a\u53c2\u6570\u6ca1\u6709\u516c\u5171\u7684\u7236\u7c7b\uff0c\u5219\u7f16\u8bd1\u4f1a\u5931\u8d25\u3002","title":"\u7c7b\u578b\u63a8\u65ad"},{"location":"pages/java/1-basic/06-generics/#_8","text":"\u6cdb\u578b\u4e2d\u7684\u901a\u914d\u7b26\u7528?\u8868\u793a\uff0c\u5728\u4f7f\u7528\u901a\u914d\u7b26\u65f6\uff0c\u4e00\u822c\u4e0eextends\u548csuper\u4e00\u8d77\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5355\u72ec\u4f7f\u7528\u3002 \u4e0a\u754c\u901a\u914d\u7b26 <? extends Foo> \uff0c\u8868\u793a\u53ef\u4ee5\u6cdb\u578b\u662fFoo\u7684\u4efb\u610f\u5b50\u7c7b(\u5982\u679cFoo\u662f\u63a5\u53e3\uff0c\u8868\u793a\u4efb\u610f\u5b9e\u73b0\u4e86Foo\u63a5\u53e3\u7684\u7c7b)\u3002 \u6709\u4e00\u79cd\u8bf4\u6cd5\u662f\uff0c\u4e0a\u754c\u901a\u914d\u7b26\u65f6\u8bfb\u5b89\u5168\u7684\uff0c\u4f8b\u5982\uff0c\u5bf9\u4e8e\u96c6\u5408 List<? extends Foo> list \uff0c\u4ece\u4e2d\u8bfb\u51fa\u6765\u7684\u5143\u7d20\u8d4b\u503c\u7ed9Foo\u662f\u5b89\u5168\u7684\uff0c\u53ef\u4ee5\u653e\u5fc3\u7684\u505a\u7c7b\u578b\u8f6c\u6362\u3002 <? extends Foo> \u4e0e <T extends Foo> \u90fd\u6d89\u53ca\u5230\u6cdb\u578b\u7684\u4e0a\u754c\uff0c\u5176\u533a\u522b\u662f\u5e26\u901a\u914d\u7b26\u7684\u6cdb\u578b\uff0c\u5176\u4e0a\u754c\u6709\u9650\uff0c\u4e0b\u754c\u65e0\u9650\uff0c\u610f\u5473\u7740\u6cdb\u578b\u53ef\u4ee5\u63a5\u6536\u5f88\u591a\u79cd\u7b26\u5408\u4e0a\u754c\u6761\u4ef6\u7684\u7c7b\u578b\u7684\u8d4b\u503c\uff0c\u4f46\u662f\u4e0d\u5e26\u901a\u914d\u7b26\u7684\u6cdb\u578b\uff0c\u5176\u7c7b\u578b\u662f\u552f\u4e00\u786e\u5b9a\u7684\uff0c\u53ea\u80fd\u662fT\uff0c\u53ef\u4ee5\u63a5\u6536\u7684\u7c7b\u578b\u4e5f\u662f\u552f\u4e00\u7684\u3002 \u4e0b\u754c\u901a\u914d\u7b26 <? super Foo> \uff0c\u548c\u4e0a\u754c\u901a\u914d\u7b26\u7c7b\u4f3c\uff0c\u4e0b\u754c\u901a\u914d\u7b26\u8868\u793a\u6cdb\u578b\u662fFoo\u7684\u7236\u7c7b\u7684\u4efb\u610f\u7c7b\u578b\u3002 \u7c7b\u4f3c\u7684\u3002\u4e0b\u754c\u901a\u914d\u7b26\u662f\u5199\u5b89\u5168\u7684\uff0c\u6bd4\u5982\uff0c\u5bf9\u4e8e\u96c6\u5408 List<? super Foo> \uff0c\u5c06Foo\u7c7b\u578b\u7684\u6570\u636e\u63d2\u5165\u5230\u96c6\u5408\u4e2d\u662f\u5b89\u5168\u7684\u3002 \u65e0\u9650\u5b9a\u901a\u914d\u7b26 ?\u5355\u72ec\u4f7f\u7528\u7684\u65f6\u5019\u5c31\u662f\u65e0\u9650\u5b9a\u901a\u914d\u7b26\uff0c\u8868\u793a\u6cdb\u578b\u7684\u7c7b\u578b\u4e0d\u786e\u5b9a\u3002 \u65e0\u9650\u5b9a\u901a\u914d\u7b26\u867d\u7136\u8868\u793a\u7c7b\u578b\u4e0d\u786e\u5b9a\uff0c\u4f46\u4ed6\u5e76\u4e0d\u8868\u793a\u662f\u6ca1\u6709\u6cdb\u578b\uff0c\u5b83\u5bf9\u7c7b\u578b\u8fd8\u662f\u6709\u7ea6\u675f\u7684\uff0c\u4f8b\u5982\uff1a List list1 = new ArrayList < A > (); List <?> list2 = new ArrayList < A > (); List < A > list3 = new ArrayList < A > (); list2\u3001list3\u3001list4\u90fd\u53ef\u4ee5\u8d4b\u503c\u7ed9list1\uff0c\u56e0\u4e3alist1\u6ca1\u6709\u58f0\u660e\u6cdb\u578b\uff0c\u662f\u539f\u59cb\u7c7b\u578b\u3002 list3\u4e0d\u80fd\u8d4b\u503c\u7ed9list2\uff0c\u5c3d\u7ba1list2\u4e2d\u6cdb\u578b\u7c7b\u578b\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u4f46\u662f\u5b83\u8fd8\u662f\u6709\u6cdb\u578b\u7684\uff0c\u53ea\u4e0d\u8fc7\u5176\u6cdb\u578b\u6211\u4eec\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\uff0c\u6709\u53ef\u80fd\u662fA\uff0c\u4e5f\u53ef\u80fd\u662fB\u3001C\u3001D\u7b49\u5176\u5b83\u7c7b\u578b\uff0c\u56e0\u6b64\u5c06 List<A> \u7c7b\u578b\u7684\u53d8\u91cf\u76f4\u63a5\u8d4b\u503c\u7ed9 ?\u4e0eT\u7684\u533a\u522b T\u8868\u793a\u7684\u6cdb\u578b\u7c7b\u578b\u662f\u552f\u4e00\u786e\u5b9a\u7684\uff0c?\u8868\u793a\u6cdb\u578b\u7684\u7c7b\u578b\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u5176\u8303\u56f4\u66f4\u5e7f T\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\uff0c?\u4e0d\u884c \u4f5c\u4e3a\u7c7b\u578b\u4f7f\u7528\u65f6\uff0cT\u4f5c\u7528\u7c7b\u4f3c\u4e8eclass\uff0c\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2aT\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\uff1f\u5c31\u4e0d\u884c \u6cdb\u578b\u6355\u83b7 \u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u7f16\u8bd1\u5668\u63a8\u65ad\u51fa\u901a\u914d\u7b26\u7c7b\u578b\uff0c\u5982List<?>\uff0c\u4f46\u5f53\u5224\u65ad\u8868\u8fbe\u5f0f\u7684\u65f6\u5019\uff0c\u53c8\u63a8\u65ad\u51fa\u5177\u4f53\u7684\u7c7b\u578b\uff0c\u8fd9\u79cd\u73b0\u8c61\u53eb\u6cdb\u578b\u6355\u83b7\uff0c\u6b64\u65f6\u4f1a\u4ea7\u751f\u7f16\u8bd1\u5f02\u5e38\u3002\u4f8b\u5982\uff1a void foo ( List <?> list ) { list . set ( 0 , list . get ( 0 )); } \u8fd9\u6bb5\u4ee3\u7801\u4f1a\u4ea7\u751f\u6cdb\u578b\u6355\u83b7\u7684\u7f16\u8bd1\u9519\u8bef\uff0c\u539f\u56e0\u662f\u7f16\u8bd1\u5668\u5c06\u65b9\u6cd5\u53c2\u6570list\u5904\u7406\u6210Object\u7c7b\u578b\uff0c\u4f46\u5728\u8c03\u7528list.set(int, E)\u65f6\uff0c\u53c8\u65e0\u6cd5\u63a8\u65ad\u51faE\u7684\u7c7b\u578b\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e00\u822c\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2aHelper\u65b9\u6cd5\uff0c\u5982\uff1a void foo ( List <?> list ) { fooHelper ( list ); } void < T > fooHelper ( List < T > list ) { list . set ( 0 , list . get ( 0 )); }","title":"\u901a\u914d\u7b26"},{"location":"pages/java/1-basic/06-generics/#_9","text":"Java\u4e2d\u7684\u6cdb\u578b\u5b9e\u9645\u662f\u4f2a\u6cdb\u578b\uff0c\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\uff0c\u6cdb\u578b\u7684\u7c7b\u578b\u90fd\u4f1a\u88ab\u64e6\u9664\uff0c\u751f\u6210\u7684\u5b57\u8282\u7801\u4e2d\uff0c\u4e0d\u4f1a\u4fdd\u7559\u6cdb\u578b\u7684\u4fe1\u606f\uff0c\u53ea\u4f1a\u6709\u539f\u59cb\u7c7b\u7684\u4fe1\u606f\u3002 \u5728\u4f20\u9012\u7c7b\u578b\u53c2\u6570\u65f6\uff0c\u5bf9\u4e8e\u65e0\u754c\u7684\u6cdb\u578b\uff08\u4e0d\u8bba\u662fT\u8fd8\u662f?\uff09\uff0c\u90fd\u4f1a\u88ab\u66ff\u6362\u6210Object\u7c7b\u578b\uff0c\u5bf9\u4e8e\u6709\u754c\u7684\u53c2\u6570\uff0c\u5219\u4f1a\u88ab\u66ff\u6362\u6210\u8fb9\u754c\u7c7b\u578b\u3002 \u4e3a\u4e86\u4fdd\u7559\u7c7b\u578b\u5b89\u5168\uff0c\u5fc5\u8981\u7684\u65f6\u5019\u4f1a\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002","title":"\u6cdb\u578b\u64e6\u9664"},{"location":"pages/java/1-basic/06-generics/#_10","text":"\u6709\u5982\u4e0b\u7684\u4ee3\u7801\uff1a public class Node < T > { protected T data ; public Node ( T data ) { this . data = data ; } public void setData ( T data ) { this . data = data ; } } public class IntNode extends Node < Integer > { public IntNode ( Integer data ) { super ( data ); } @Override public void setData ( Integer data ) { this . data = data ; } } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cIntNode\u7ee7\u627f\u4e86Node\uff0c\u5e76\u5c06\u5176\u6cdb\u578b\u5177\u5316\u6210Integer\uff0c\u6b64\u65f6\u95ee\u9898\u5c31\u6765\u4e86\uff0cIntNode\u7ee7\u627fNode\u4e4b\u540e\uff0c\u91cd\u8f7d\u4e86setData\u65b9\u6cd5\uff0c\u4f46\u662f\u91cd\u8f7d\u6539\u53d8\u4e86setData\u7684\u65b9\u6cd5\u7b7e\u540d\uff0c\u7531\u4e8e\u6cdb\u578b\u64e6\u9664\u7236\u7c7b\u4e2d\u53c2\u6570\u7c7b\u578b\u662fObject\uff0c\u5b50\u7c7b\u53c2\u6570\u786e\u53d8\u6210\u4e86Integer\uff0c\u8fd9\u663e\u7136\u4e0d\u7b26\u5408\u91cd\u8f7d\u7684\u89c4\u5219\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u79cd\u95ee\u9898\u7f16\u8bd1\u5668\u4f1a\u751f\u6210\u4e00\u4e2a\u6865\u65b9\u6cd5\uff0c\u5982\u4e0b\uff1a public class Node { protected T data ; public Node ( Object data ) { this . data = data ; } public void setData ( Object data ) { this . data = data ; } } public class IntNode extends Node { public IntNode ( Integer data ) { super ( data ); } // \u7f16\u8bd1\u5668\u751f\u6210\u7684\u6865\u65b9\u6cd5\uff0c\u771f\u6b63\u91cd\u8f7d\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u540c\u65f6\u505a\u7c7b\u578b\u8f6c\u6362\uff0c\u8c03\u7528\u5b50\u7c7b\u7684\u65b9\u6cd5 public void setData ( Object data ) { setData (( Integer ) data ); } public void setData ( Integer data ) { this . data = data ; } } \u5728\u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u65b9\u6cd5\u7684\u5b9e\u73b0\u4e2d\uff0c\u771f\u6b63\u7ee7\u627f\u7236\u7c7b\u5e76\u548csetData\u65b9\u6cd5\u7b7e\u540d\u4e00\u81f4\u7684\u6865\u65b9\u6cd5\uff0c\u6211\u4eec\u5728\u5199\u4ee3\u7801\u65f6\u662f\u770b\u4e0d\u5230\u7684\uff0c\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u671f\u4f1a\u4e3a\u6211\u4eec\u81ea\u52a8\u5904\u7406\u3002 \u57fa\u4e8e\u6b64\uff0c\u5728\u8c03\u7528\u6cdb\u578b\u65f6\uff0c\u5982\u679c\u53c2\u6570\u548c\u6cdb\u578b\u89c4\u5b9a\u7684\u4e0d\u4e00\u81f4\uff0c\u4f1a\u4ea7\u751fClassCastException\uff0c\u5982\uff1a IntNode intNode = new IntNode ( 5 ); Node node = intNode ; node . set ( \"123\" ); //ClassCasetException","title":"\u7c7b\u578b\u64e6\u9664\u4e0e\u6865\u65b9\u6cd5"},{"location":"pages/java/1-basic/06-generics/#_11","text":"\u7531\u4e8e\u6cdb\u578b\u7684\u64e6\u9664\uff0c\u5728\u8fd0\u884c\u65f6\u7406\u8bba\u4e0a\u662f\u62ff\u4e0d\u5230\u6cdb\u578b\u7684\u7c7b\u578b\u7684\uff0c\u60f3\u8981\u83b7\u53d6\u6cdb\u578b\u7684\u7c7b\u578b\uff0c\u5fc5\u987b\u8981\u6ee1\u8db3\u6761\u4ef6\uff1a \u5fc5\u987b\u8981\u6709\u771f\u5b9e\u7684\u7c7b\u578b\uff0c\u65e2\u5fc5\u987b\u80fd\u62ff\u5230class\uff1b \u6cdb\u578b\u7684\u7c7b\u578b\u662f\u660e\u786e\u7684\uff0c\u5982List \u7c7b\u578b\u662f\u660e\u786e\u7684\uff0cList \u662f\u4e0d\u660e\u786e\u7684\u3002 \u62ff\u5230class\u4e4b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7getGenericInterfaces()\u548cgetgetGenericSuperclass()\u4e24\u4e2a\u65b9\u6cd5\u83b7\u53d6\u6cdb\u578b\u3002 getGenericInterfaces()\u83b7\u53d6\u5230\u7684\u662f\u7c7b\u5b9e\u73b0\u7684\u63a5\u53e3\uff0c\u8fd4\u56de\u7ed3\u679c\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5373\u5b9e\u73b0\u7684\u63a5\u53e3\u7684\u7c7b\u578b\uff1a interface Service < T > { } class ServiceImpl implements Service < String > { public Type getType () { Type [] genericInterfaces = ServiceImpl . class . getGenericInterfaces (); ParameterizedType parameterizedType = ( ParameterizedType ) genericInterfaces [ 0 ] ; return parameterizedType . getActualTypeArguments () [ 0 ] ; } } getgetGenericSuperclass()\u83b7\u53d6\u5230\u7684\u662f\u7236\u7c7b\u7684\u7c7b\u578b\uff0c\u5982\u679c\u6cdb\u578b\u660e\u786e\u4e5f\u662f\u53ef\u4ee5\u83b7\u53d6\u5230\u6cdb\u578b\uff1a abstract Service < T > { } class ServiceImpl extends Service < String > { public Type getType () { Type genericSuperclass = ServiceImpl . class . getgetGenericSuperclass (); return (( ParameterizedType ) genericSuperclass ). getActualTypeArguments () [ 0 ] ; } } gson\u4e2d\u53ef\u4ee5\u5229\u7528TypeToken\u6765\u83b7\u53d6\u6cdb\u578b\uff0c\u4f46\u662f\u6cdb\u578b\u8981\u662f\u660e\u786e\u7684\u5982\uff1a Type type1 = new TypeToken < String > (){}. getType (); //\u2705 Type type2 = new TypeToken < T > (){}. getType (); //\u274c \u6cdb\u578b\u4e0d\u660e\u786e Type type3 = new TypeToken < String > (). getType (); //\u274c \u83b7\u53d6\u4e0d\u5230\u7236\u7c7b TypeToken\u662f\u4f7f\u7528\u4e86\u548cgetgetGenericSuperclass()\u5b9e\u73b0\u7684\u83b7\u53d6\u7c7b\u578b\uff0c\u5176\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u83b7\u53d6\u7236\u7c7b\u7684\u7c7b\u578b\u5e76\u4fdd\u5b58\u4e0b\u6765\uff0c\u56e0\u6b64\u5229\u7528Token\u83b7\u53d6\u6cdb\u578b\u5b9e\u9645\u662f\u5b9e\u73b0\u4e86\u4e00\u4e2aTypeToken\u7684\u533f\u540d\u5b50\u7c7b\uff0c\u7136\u540e\u5728\u5b50\u7c7b\u4e2d\u83b7\u53d6\u7236\u7c7b\u7684\u6cdb\u578b\uff0c\u5982\u679c\u4e0d\u5e26 {} \uff0c\u5c31\u662f\u76f4\u63a5\u4f7f\u7528TypeToken\uff0c\u5176\u5e76\u65e0\u7236\u7c7b\uff0c\u56e0\u6b64\u65e0\u6cd5\u83b7\u53d6\u6cdb\u578b\u3002 public class TypeToken < T > { final Class <? super T > rawType ; final Type type ; protected TypeToken () { this . type = getSuperclassTypeParameter ( getClass ()); this . rawType = ( Class <? super T > ) $Gson$Types . getRawType ( type ); this . hashCode = type . hashCode (); } }","title":"\u8fd0\u884c\u65f6\u83b7\u53d6\u6cdb\u578b"},{"location":"pages/java/1-basic/06-generics/#_12","text":"\u5e26\u6cdb\u578b\u7684\u7c7b\u5b9e\u4f8b\u5316\u65f6\uff0c\u6cdb\u578b\u4e0d\u80fd\u662f\u57fa\u7840\u7c7b\u578b\uff0c\u8981\u7528\u5305\u88c5\u7c7b\u578b : Pair < int , String > pair = new Pair ( 1 , \"123456\" ); //compile-time error \u7c7b\u578b\u53c2\u6570\u4e0d\u80fd\u76f4\u63a5\u7528new\u5173\u952e\u5b57\u5b9e\u4f8b\u5316 : public < T > void foo ( T val ) { T t = new T (); // compile-time error } \u9759\u6001\u53d8\u91cf\u4e0d\u80fd\u662f\u6cdb\u578b\u5e26\u6cdb\u578b\u3002 : \u9759\u6001\u53d8\u91cf\u662f\u7c7b\u7ea7\u522b\u7684\uff0c\u662f\u6240\u6709\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u5171\u4eab\u7684\uff0c\u4e0d\u80fd public class MobileDevice < T > { private static T os ; // compile-time error // ... } \u7531\u4e8e\u6cdb\u578b\u64e6\u9664\uff0c\u5e26\u7c7b\u578b\u53c2\u6570\u65f6\uff0c\u4e0d\u80fd\u7c7b\u578b\u5f3a\u8f6c\u4e5f\u4e0d\u80fd\u7528instanceof\u6765\u5224\u65ad\u53c2\u6570\u7684\u5177\u4f53\u7c7b\u578b public static < E > void rtti ( List < E > list ) { if ( list instanceof ArrayList < Integer > ) { // compile-time error // ... } } \u6570\u7ec4\u4e0d\u80fd\u5e26\u6cdb\u578b\u53c2\u6570 List < Integer >[] arrayOfLists = new List < Integer >[ 2 ] ; // compile-time error \u5f02\u5e38\u5904\u7406\u65f6\u4e0d\u80fd\u5e26\u6cdb\u578b : \u7ee7\u627fException\u6216Throwable\u7684\u7c7b\uff0c\u5e26\u6cdb\u578b\u4f1a\u7f16\u8bd1\u51fa\u9519 // Extends Throwable indirectly class MathException < T > extends Exception { /* ... */ } // compile-time error // Extends Throwable directly class QueueFullException < T > extends Throwable { /* ... */ // compile-time error \u6cdb\u578b\u65b9\u6cd5\u4e2d\u5982\u679c\u6cdb\u578b\u662f\u5f02\u5e38\uff0c\u4e0d\u80fd\u76f4\u63a5catch\u4f4f public static < T extends Exception , J > void execute ( List < J > jobs ) { try { for ( J job : jobs ) // ... } catch ( T e ) { // compile-time error // ... } } \u4f46\u662f\u53ef\u4ee5throw\u51fa\u6765\uff1a class Parser < T extends Exception > { public void parse ( File file ) throws T { // OK // ... } } \u539f\u59cb\u7c7b\u578b\u4e00\u6837\u7684\u65b9\u6cd5\uff0c\u4e0d\u80fd\u91cd\u8f7d \u7c7b\u578b\u64e6\u9664\u540e\uff0c\u4e24\u4e2a\u65b9\u6cd5\u7684\u7b7e\u540d\u4e00\u6a21\u4e00\u6837\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u91cd\u8f7d public class Example { public void print ( Set < String > strSet ) { } public void print ( Set < Integer > intSet ) { } } \u53c2\u8003 The Java\u2122 Tutorials -- Generics","title":"\u4f7f\u7528\u6cdb\u578b\u7684\u9650\u5236"},{"location":"pages/java/1-basic/07-reflation/","text":"\u53cd\u5c04 Java\u4e2d\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u83b7\u53d6\u7c7b\u7684\u4fe1\u606f\u548c\u52a8\u6001\u8c03\u7528\u5bf9\u8c61\u65b9\u6cd5\u7684\u673a\u5236\u53eb\u53cd\u5c04\u3002 \u57fa\u672c\u539f\u7406 \u6b63\u5e38\u7684\u7c7b\u52a0\u8f7d\u673a\u5236\u4e2d\uff0c\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u5148\u52a0\u8f7dclass\u6587\u4ef6\u5230JVM\u5185\u5b58\u4e2d\uff0c\u5728JVM\u4e2d\u521b\u5efa\u4e00\u4e2aclass\u5bf9\u8c61\uff0c\u76f8\u540c\u7684\u7c7b\u53ea\u6709\u4e00\u4e2aclass\u5bf9\u8c61\u3002\u53cd\u5c04\u7684\u539f\u7406\u5373\u4ececlass\u5bf9\u8c61\u4e2d\u8bfb\u53d6\u5b9e\u4f8b\u7684\u4fe1\u606f\u3002 Java\u53cd\u5c04\u7684\u539f\u7406 \u57fa\u672c\u4f7f\u7528 \u83b7\u53d6class\u7684\u65b9\u5f0f \u901a\u8fc7\u5b9e\u4f8bgetClass()\u65b9\u6cd5\uff0cobject.getClass() \u901a\u8fc7\u7c7b\u578b\uff0cSomeClass.class \u901a\u8fc7Class.forName()\u4f20\u5165\u5b8c\u6574\u7c7b\u540d \u901a\u8fc7classloader.load()\u4f20\u5165\u5b8c\u6574\u7c7b\u540d \u4f18\u7f3a\u70b9 \u4f18\u70b9\uff1a \u53cd\u5c04\u80fd\u591f\u4f7fJava\u5728\u8fd0\u884c\u65f6\u83b7\u53d6\u5230\u5206\u6790\u7c7b\u7684\u4fe1\u606f\uff0c\u8ba9Java\u5177\u5907\u4e86\u52a8\u6001\u8bed\u8a00\u7684\u7279\u6027\u3002 \u7f3a\u70b9: \u6027\u80fd\uff0c\u7531\u4e8e\u52a8\u6001\u8c03\u7528\uff0c\u865a\u62df\u673a\u7684\u5404\u79cd\u4f18\u5316\u90fd\u4e0d\u4f1a\u751f\u6548\uff0c\u5bf9\u5404\u79cd\u7c7b\u578b\u7684\u5305\u88c5\u4f1a\u9020\u6210\u5185\u5b58\u7684\u989d\u5916\u5f00\u9500\uff0c\u56e0\u6b64\u53cd\u5c04\u6bd4\u666e\u901a\u7684API\u6027\u80fd\u66f4\u5dee\u3002 \u5b89\u5168\u6027\uff0c\u5728\u8fd0\u884c\u65f6\u8c03\u7528\u9700\u8981\u6709\u6743\u9650\uff0c\u4f1a\u4ea7\u751f\u6743\u9650\u95ee\u9898\u4ee5\u53ca\u5f02\u5e38 \u5f00\u653e\u6027\uff0c\u53cd\u5c04\u53ef\u4ee5\u8c03\u7528\u4efb\u4f55API\uff0c\u7834\u574f\u4e86\u5c01\u88c5\u6027\uff0c\u4f7f\u5f97\u4efb\u610f\u79c1\u6709\u7684API\u90fd\u80fd\u5bf9\u5916\u66b4\u9732\u3002 \u53c2\u8003 Trail: The Reflection API","title":"\u53cd\u5c04"},{"location":"pages/java/1-basic/07-reflation/#_1","text":"Java\u4e2d\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u83b7\u53d6\u7c7b\u7684\u4fe1\u606f\u548c\u52a8\u6001\u8c03\u7528\u5bf9\u8c61\u65b9\u6cd5\u7684\u673a\u5236\u53eb\u53cd\u5c04\u3002","title":"\u53cd\u5c04"},{"location":"pages/java/1-basic/07-reflation/#_2","text":"\u6b63\u5e38\u7684\u7c7b\u52a0\u8f7d\u673a\u5236\u4e2d\uff0c\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u5148\u52a0\u8f7dclass\u6587\u4ef6\u5230JVM\u5185\u5b58\u4e2d\uff0c\u5728JVM\u4e2d\u521b\u5efa\u4e00\u4e2aclass\u5bf9\u8c61\uff0c\u76f8\u540c\u7684\u7c7b\u53ea\u6709\u4e00\u4e2aclass\u5bf9\u8c61\u3002\u53cd\u5c04\u7684\u539f\u7406\u5373\u4ececlass\u5bf9\u8c61\u4e2d\u8bfb\u53d6\u5b9e\u4f8b\u7684\u4fe1\u606f\u3002 Java\u53cd\u5c04\u7684\u539f\u7406","title":"\u57fa\u672c\u539f\u7406"},{"location":"pages/java/1-basic/07-reflation/#_3","text":"","title":"\u57fa\u672c\u4f7f\u7528"},{"location":"pages/java/1-basic/07-reflation/#class","text":"\u901a\u8fc7\u5b9e\u4f8bgetClass()\u65b9\u6cd5\uff0cobject.getClass() \u901a\u8fc7\u7c7b\u578b\uff0cSomeClass.class \u901a\u8fc7Class.forName()\u4f20\u5165\u5b8c\u6574\u7c7b\u540d \u901a\u8fc7classloader.load()\u4f20\u5165\u5b8c\u6574\u7c7b\u540d","title":"\u83b7\u53d6class\u7684\u65b9\u5f0f"},{"location":"pages/java/1-basic/07-reflation/#_4","text":"\u4f18\u70b9\uff1a \u53cd\u5c04\u80fd\u591f\u4f7fJava\u5728\u8fd0\u884c\u65f6\u83b7\u53d6\u5230\u5206\u6790\u7c7b\u7684\u4fe1\u606f\uff0c\u8ba9Java\u5177\u5907\u4e86\u52a8\u6001\u8bed\u8a00\u7684\u7279\u6027\u3002 \u7f3a\u70b9: \u6027\u80fd\uff0c\u7531\u4e8e\u52a8\u6001\u8c03\u7528\uff0c\u865a\u62df\u673a\u7684\u5404\u79cd\u4f18\u5316\u90fd\u4e0d\u4f1a\u751f\u6548\uff0c\u5bf9\u5404\u79cd\u7c7b\u578b\u7684\u5305\u88c5\u4f1a\u9020\u6210\u5185\u5b58\u7684\u989d\u5916\u5f00\u9500\uff0c\u56e0\u6b64\u53cd\u5c04\u6bd4\u666e\u901a\u7684API\u6027\u80fd\u66f4\u5dee\u3002 \u5b89\u5168\u6027\uff0c\u5728\u8fd0\u884c\u65f6\u8c03\u7528\u9700\u8981\u6709\u6743\u9650\uff0c\u4f1a\u4ea7\u751f\u6743\u9650\u95ee\u9898\u4ee5\u53ca\u5f02\u5e38 \u5f00\u653e\u6027\uff0c\u53cd\u5c04\u53ef\u4ee5\u8c03\u7528\u4efb\u4f55API\uff0c\u7834\u574f\u4e86\u5c01\u88c5\u6027\uff0c\u4f7f\u5f97\u4efb\u610f\u79c1\u6709\u7684API\u90fd\u80fd\u5bf9\u5916\u66b4\u9732\u3002 \u53c2\u8003 Trail: The Reflection API","title":"\u4f18\u7f3a\u70b9"},{"location":"pages/java/1-basic/08-exception/","text":"Java\u5f02\u5e38\u8be6\u89e3 \u5f02\u5e38\u7ed3\u6784 Throwable\u662f\u6240\u6709\u5f02\u5e38\u7684\u7236\u7c7b\u3002\u5f02\u5e38\u5206\u4e3a\u4e24\u4e2a\u5927\u7c7b\uff0cError\u548cException\u3002 Error\uff0c\u662f\u8fd0\u884c\u65f6\u73af\u5883\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u4e00\u822c\u7531Java\u865a\u62df\u673a\u629b\u51fa\uff0c\u53d1\u751f\u4e4b\u540e\u4e00\u822c\u4e0d\u5e0c\u671b\u7a0b\u5e8f\u81ea\u5df1\u6062\u590d\u8fc7\u6765\uff0c\u5e38\u89c1\u7684\u4e24\u4e2a\u662fOOM\u548cStackOverFlow. Exception\uff0c\u5b50\u7c7b\u7684\u5f02\u5e38\u662f\u53ef\u4ee5\u6355\u83b7\u5230\u7684\uff0c\u5e38\u89c1\u7684\u4e24\u5927\u7c7b\u662fIOException\u548cRuntimeException\u3002 \u5f02\u5e38\u4e5f\u53ef\u4ee5\u5206\u4e3a\u68c0\u67e5\u5f02\u5e38\u548c\u975e\u68c0\u67e5\u5f02\u5e38\uff0c\u68c0\u67e5\u5f02\u5e38\u5728\u7f16\u7801\u65f6\u5f3a\u5236\u8981\u6c42\u6355\u83b7\uff0c\u5426\u5219\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff0c\u975e\u68c0\u67e5\u5f02\u5e38\u5305\u62ecError\uff0cRuntimeException\u548c\u5b83\u4eec\u7684\u5b50\u7c7b\uff0c\u4e0d\u5fc5\u5f3a\u5236\u6355\u83b7\uff0c\u7406\u8bba\u4e0a\u90fd\u662f\u53ef\u4ee5\u907f\u514d\u7684\u3002 try -- \u7528\u4e8e\u76d1\u542c\u3002\u5c06\u8981\u88ab\u76d1\u542c\u7684\u4ee3\u7801(\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u4ee3\u7801)\u653e\u5728try\u8bed\u53e5\u5757\u4e4b\u5185\uff0c\u5f53try\u8bed\u53e5\u5757\u5185\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u5f02\u5e38\u5c31\u88ab\u629b\u51fa\u3002 catch -- \u7528\u4e8e\u6355\u83b7\u5f02\u5e38\u3002catch\u7528\u6765\u6355\u83b7try\u8bed\u53e5\u5757\u4e2d\u53d1\u751f\u7684\u5f02\u5e38\u3002 finally -- finally\u8bed\u53e5\u5757\u603b\u662f\u4f1a\u88ab\u6267\u884c\u3002\u5b83\u4e3b\u8981\u7528\u4e8e\u56de\u6536\u5728try\u5757\u91cc\u6253\u5f00\u7684\u7269\u529b\u8d44\u6e90(\u5982\u6570\u636e\u5e93\u8fde\u63a5\u3001\u7f51\u7edc\u8fde\u63a5\u548c\u78c1\u76d8\u6587\u4ef6)\u3002\u53ea\u6709finally\u5757\uff0c\u6267\u884c\u5b8c\u6210\u4e4b\u540e\uff0c\u624d\u4f1a\u56de\u6765\u6267\u884ctry\u6216\u8005catch\u5757\u4e2d\u7684return\u6216\u8005throw\u8bed\u53e5\uff0c\u5982\u679cfinally\u4e2d\u4f7f\u7528\u4e86return\u6216\u8005throw\u7b49\u7ec8\u6b62\u65b9\u6cd5\u7684\u8bed\u53e5\uff0c\u5219\u5c31\u4e0d\u4f1a\u8df3\u56de\u6267\u884c\uff0c\u76f4\u63a5\u505c\u6b62\u3002 throw -- \u7528\u4e8e\u629b\u51fa\u5f02\u5e38\u3002 throws -- \u7528\u5728\u65b9\u6cd5\u7b7e\u540d\u4e2d\uff0c\u7528\u4e8e\u58f0\u660e\u8be5\u65b9\u6cd5\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\u3002 JVM\u5904\u7406\u5f02\u5e38\u7684\u6d41\u7a0b \u5f53\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u4f1a\u521b\u5efa\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61\uff0c\u5305\u542b\u4e86\u5f02\u5e38\u540d\u79f0\uff0c\u5f02\u5e38\u63cf\u8ff0\u4ee5\u53ca\u53d1\u751f\u5f02\u5e38\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u72b6\u6001\uff0c\u5c06\u5bf9\u8c61\u4f20\u9012\u7ed9JVM\u3002\u5f53JVM\u6536\u5230\u5f02\u5e38\u65f6\uff0c\u4f1a\u987a\u7740\u8c03\u7528\u6808\u53bb\u67e5\u627e\u662f\u5426\u6709\u80fd\u5904\u7406\u5f02\u5e38\u7684\u4ee3\u7801\uff0c\u5982\u679c\u6709\u5219\u5c06\u5f02\u5e38\u4ea4\u7ed9\u5bf9\u5e94\u7684\u4ee3\u7801\u5904\u7406\u3002\u5982\u679c\u6ca1\u6709\uff0cJVM\u4f1a\u5c06\u5f02\u5e38\u4ea4\u7ed9\u9ed8\u8ba4\u7684\u5f02\u5e38\u5904\u7406\u5668\u5904\u7406\u3002\u9ed8\u8ba4\u7684\u5f02\u5e38\u5904\u7406\u5668\u662f\u6253\u5370\u5f02\u5e38\u65e5\u5fd7\u5e76\u7ec8\u6b62\u5e94\u7528\u7a0b\u5e8f\u3002 \u53ef\u4ee5\u901a\u8fc7Thread.setUncaughtExceptionHandler()\u6765\u8bbe\u7f6e\u5f02\u5e38\u5904\u7406\u5668\u3002 \u5f02\u5e38\u5904\u7406\u7684\u6700\u4f73\u5b9e\u8df5 finally \u5757\u4e2d\u6e05\u7406\u8d44\u6e90\u6216\u8005\u4f7f\u7528 try-with-resource \u8bed\u53e5 \u4f18\u5148\u6355\u83b7\u5177\u4f53\u7684\u5f02\u5e38\uff0c\u5982\u6355\u83b7NumberFormatException\u800c\u4e0d\u662fException \u4e0d\u8981\u6355\u83b7Throwable\uff0cThrowable\u662f\u5f02\u5e38\u7684\u8d85\u7c7b\uff0c\u6355\u83b7Throwable\u65e2\u4f1a\u6355\u83b7\u5230\u666e\u901a\u7684\u5f02\u5e38\uff0c\u4e5f\u4f1a\u6355\u83b7\u5230Error \u5c3d\u91cf\u4f7f\u7528\u5185\u7f6e\u7684\u5f02\u5e38\uff0c\u9664\u975e\u662f\u5185\u7f6e\u7684\u5f02\u5e38\u6ee1\u8db3\u4e0d\u4e86 \u5f02\u5e38\u5904\u7406\u5f88\u8017\u65f6\uff0c\u4e0d\u8981\u4f7f\u7528\u5f02\u5e38\u6765\u505a\u6d41\u7a0b\u63a7\u5236\u3002\u521b\u5efa\u548c\u629b\u51fa\u5f02\u5e38\u4f1a\u82b1\u8d39\u51e0\u6beb\u79d2\u7684\u65f6\u95f4\u3002 \u53c2\u8003 Java\u63d0\u9ad8\u7bc7-Java\u5f02\u5e38\u5904\u7406","title":"\u5f02\u5e38"},{"location":"pages/java/1-basic/08-exception/#java","text":"","title":"Java\u5f02\u5e38\u8be6\u89e3"},{"location":"pages/java/1-basic/08-exception/#_1","text":"Throwable\u662f\u6240\u6709\u5f02\u5e38\u7684\u7236\u7c7b\u3002\u5f02\u5e38\u5206\u4e3a\u4e24\u4e2a\u5927\u7c7b\uff0cError\u548cException\u3002 Error\uff0c\u662f\u8fd0\u884c\u65f6\u73af\u5883\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u4e00\u822c\u7531Java\u865a\u62df\u673a\u629b\u51fa\uff0c\u53d1\u751f\u4e4b\u540e\u4e00\u822c\u4e0d\u5e0c\u671b\u7a0b\u5e8f\u81ea\u5df1\u6062\u590d\u8fc7\u6765\uff0c\u5e38\u89c1\u7684\u4e24\u4e2a\u662fOOM\u548cStackOverFlow. Exception\uff0c\u5b50\u7c7b\u7684\u5f02\u5e38\u662f\u53ef\u4ee5\u6355\u83b7\u5230\u7684\uff0c\u5e38\u89c1\u7684\u4e24\u5927\u7c7b\u662fIOException\u548cRuntimeException\u3002 \u5f02\u5e38\u4e5f\u53ef\u4ee5\u5206\u4e3a\u68c0\u67e5\u5f02\u5e38\u548c\u975e\u68c0\u67e5\u5f02\u5e38\uff0c\u68c0\u67e5\u5f02\u5e38\u5728\u7f16\u7801\u65f6\u5f3a\u5236\u8981\u6c42\u6355\u83b7\uff0c\u5426\u5219\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff0c\u975e\u68c0\u67e5\u5f02\u5e38\u5305\u62ecError\uff0cRuntimeException\u548c\u5b83\u4eec\u7684\u5b50\u7c7b\uff0c\u4e0d\u5fc5\u5f3a\u5236\u6355\u83b7\uff0c\u7406\u8bba\u4e0a\u90fd\u662f\u53ef\u4ee5\u907f\u514d\u7684\u3002 try -- \u7528\u4e8e\u76d1\u542c\u3002\u5c06\u8981\u88ab\u76d1\u542c\u7684\u4ee3\u7801(\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u4ee3\u7801)\u653e\u5728try\u8bed\u53e5\u5757\u4e4b\u5185\uff0c\u5f53try\u8bed\u53e5\u5757\u5185\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u5f02\u5e38\u5c31\u88ab\u629b\u51fa\u3002 catch -- \u7528\u4e8e\u6355\u83b7\u5f02\u5e38\u3002catch\u7528\u6765\u6355\u83b7try\u8bed\u53e5\u5757\u4e2d\u53d1\u751f\u7684\u5f02\u5e38\u3002 finally -- finally\u8bed\u53e5\u5757\u603b\u662f\u4f1a\u88ab\u6267\u884c\u3002\u5b83\u4e3b\u8981\u7528\u4e8e\u56de\u6536\u5728try\u5757\u91cc\u6253\u5f00\u7684\u7269\u529b\u8d44\u6e90(\u5982\u6570\u636e\u5e93\u8fde\u63a5\u3001\u7f51\u7edc\u8fde\u63a5\u548c\u78c1\u76d8\u6587\u4ef6)\u3002\u53ea\u6709finally\u5757\uff0c\u6267\u884c\u5b8c\u6210\u4e4b\u540e\uff0c\u624d\u4f1a\u56de\u6765\u6267\u884ctry\u6216\u8005catch\u5757\u4e2d\u7684return\u6216\u8005throw\u8bed\u53e5\uff0c\u5982\u679cfinally\u4e2d\u4f7f\u7528\u4e86return\u6216\u8005throw\u7b49\u7ec8\u6b62\u65b9\u6cd5\u7684\u8bed\u53e5\uff0c\u5219\u5c31\u4e0d\u4f1a\u8df3\u56de\u6267\u884c\uff0c\u76f4\u63a5\u505c\u6b62\u3002 throw -- \u7528\u4e8e\u629b\u51fa\u5f02\u5e38\u3002 throws -- \u7528\u5728\u65b9\u6cd5\u7b7e\u540d\u4e2d\uff0c\u7528\u4e8e\u58f0\u660e\u8be5\u65b9\u6cd5\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\u3002","title":"\u5f02\u5e38\u7ed3\u6784"},{"location":"pages/java/1-basic/08-exception/#jvm","text":"\u5f53\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u4f1a\u521b\u5efa\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61\uff0c\u5305\u542b\u4e86\u5f02\u5e38\u540d\u79f0\uff0c\u5f02\u5e38\u63cf\u8ff0\u4ee5\u53ca\u53d1\u751f\u5f02\u5e38\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u72b6\u6001\uff0c\u5c06\u5bf9\u8c61\u4f20\u9012\u7ed9JVM\u3002\u5f53JVM\u6536\u5230\u5f02\u5e38\u65f6\uff0c\u4f1a\u987a\u7740\u8c03\u7528\u6808\u53bb\u67e5\u627e\u662f\u5426\u6709\u80fd\u5904\u7406\u5f02\u5e38\u7684\u4ee3\u7801\uff0c\u5982\u679c\u6709\u5219\u5c06\u5f02\u5e38\u4ea4\u7ed9\u5bf9\u5e94\u7684\u4ee3\u7801\u5904\u7406\u3002\u5982\u679c\u6ca1\u6709\uff0cJVM\u4f1a\u5c06\u5f02\u5e38\u4ea4\u7ed9\u9ed8\u8ba4\u7684\u5f02\u5e38\u5904\u7406\u5668\u5904\u7406\u3002\u9ed8\u8ba4\u7684\u5f02\u5e38\u5904\u7406\u5668\u662f\u6253\u5370\u5f02\u5e38\u65e5\u5fd7\u5e76\u7ec8\u6b62\u5e94\u7528\u7a0b\u5e8f\u3002 \u53ef\u4ee5\u901a\u8fc7Thread.setUncaughtExceptionHandler()\u6765\u8bbe\u7f6e\u5f02\u5e38\u5904\u7406\u5668\u3002","title":"JVM\u5904\u7406\u5f02\u5e38\u7684\u6d41\u7a0b"},{"location":"pages/java/1-basic/08-exception/#_2","text":"finally \u5757\u4e2d\u6e05\u7406\u8d44\u6e90\u6216\u8005\u4f7f\u7528 try-with-resource \u8bed\u53e5 \u4f18\u5148\u6355\u83b7\u5177\u4f53\u7684\u5f02\u5e38\uff0c\u5982\u6355\u83b7NumberFormatException\u800c\u4e0d\u662fException \u4e0d\u8981\u6355\u83b7Throwable\uff0cThrowable\u662f\u5f02\u5e38\u7684\u8d85\u7c7b\uff0c\u6355\u83b7Throwable\u65e2\u4f1a\u6355\u83b7\u5230\u666e\u901a\u7684\u5f02\u5e38\uff0c\u4e5f\u4f1a\u6355\u83b7\u5230Error \u5c3d\u91cf\u4f7f\u7528\u5185\u7f6e\u7684\u5f02\u5e38\uff0c\u9664\u975e\u662f\u5185\u7f6e\u7684\u5f02\u5e38\u6ee1\u8db3\u4e0d\u4e86 \u5f02\u5e38\u5904\u7406\u5f88\u8017\u65f6\uff0c\u4e0d\u8981\u4f7f\u7528\u5f02\u5e38\u6765\u505a\u6d41\u7a0b\u63a7\u5236\u3002\u521b\u5efa\u548c\u629b\u51fa\u5f02\u5e38\u4f1a\u82b1\u8d39\u51e0\u6beb\u79d2\u7684\u65f6\u95f4\u3002 \u53c2\u8003 Java\u63d0\u9ad8\u7bc7-Java\u5f02\u5e38\u5904\u7406","title":"\u5f02\u5e38\u5904\u7406\u7684\u6700\u4f73\u5b9e\u8df5"},{"location":"pages/java/2-concurrent/00-concurrent/","text":"\u5e76\u53d1\u7f16\u7a0b Java\u5e76\u53d1\u7f16\u7a0b\u4e2d\u6d89\u53ca\u7684\u6982\u5ff5\u5305\u62ec\u591a\u7ebf\u7a0b\u3001\u7ebf\u7a0b\u6c60\u3001\u540c\u6b65\u3001\u9501\u3001\u5e76\u53d1\u5bb9\u5668\u3001\u5185\u5b58\u6a21\u578b\u7b49\u6982\u5ff5\u3002 \u5e76\u53d1\u7f16\u7a0b\u7684\u57fa\u7840 \u5e76\u53d1\u7f16\u7a0b\u7684\u4e09\u8981\u7d20\uff0c\u4e5f\u662f\u5e76\u53d1\u95ee\u9898\u7684\u6e90\u5934\uff1a \u539f\u5b50\u6027 \uff0c\u4e00\u4e2a\u6216\u591a\u4e2a\u64cd\u4f5c\u5728CPU\u6267\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u88ab\u4e2d\u65ad\uff0c\u8981\u4e48\u90fd\u6210\u529f\u8981\u4e48\u90fd\u5931\u8d25\u3002\u7531\u4e8eCPU\u5206\u65f6\u590d\u7528\u7684\u5b58\u5728\uff0c\u53ef\u80fd\u5b58\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u6267\u884c\u4e00\u90e8\u5206\u6307\u4ee4\uff0c\u53e6\u4e00\u90e8\u5206\u7ebf\u7a0b\u4e2d\u7ee7\u7eed\u6267\u884c\u53e6\u4e00\u90e8\u5206\u6307\u4ee4\uff0c\u6267\u884c\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff1b \u6709\u5e8f\u6027 \uff0c\u7a0b\u5e8f\u6267\u884c\u7684\u987a\u5e8f\u6309\u7167\u4ee3\u7801\u7684\u5148\u540e\u987a\u5e8f\u6267\u884c\uff0c\u4e3a\u4e86\u4f18\u5316\u4ee3\u7801\u6267\u884c\u7684\u6027\u80fd\uff0c\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u4f1a\u5bf9\u6307\u4ee4\u8fdb\u884c\u91cd\u6392\u5e8f\uff0c\u91cd\u6392\u5e8f\u5206\u4e3a3\u7c7b\uff1a \u7f16\u8bd1\u5668\u91cd\u6392\u5e8f\u3002\u7f16\u8bd1\u5668\u5728\u4e0d\u6539\u53d8\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u8bed\u4e49\u7684\u524d\u63d0\u4e0b\uff0c\u53ef\u4ee5\u91cd\u65b0\u5b89\u6392\u4ee3\u7801\u6267\u884c\u7684\u987a\u5e8f\u3002 \u6307\u4ee4\u7ea7\u5e76\u884c\u7684\u91cd\u6392\u5e8f\u3002\u73b0\u4ee3\u5904\u7406\u5668\u91c7\u7528\u4e86\u6307\u4ee4\u7ea7\u5e76\u884c\u5904\u7406\u6280\u672f\uff0c\u5c06\u591a\u6761\u6307\u4ee4\u5e76\u884c\u6267\u884c\uff0c\u5728\u4e0d\u5b58\u5728\u4f9d\u8d56\u7684\u524d\u63d0\u4e0b\uff0c\u5904\u7406\u5668\u53ef\u4ee5\u6539\u53d8\u6307\u4ee4\u6267\u884c\u7684\u987a\u5e8f\u3002 \u5185\u5b58\u7cfb\u7edf\u7684\u91cd\u6392\u5e8f\u3002\u5904\u7406\u5668\u4f7f\u7528\u7f13\u5b58\u548c\u8bfb\u5199\u7f13\u51b2\u533a\uff0c\u4f7f\u5f97\u52a0\u8f7d\u548c\u5b58\u50a8\u770b\u4e0a\u53bb\u50cf\u662f\u5728\u4e71\u5e8f\u6267\u884c\u3002 \u53ef\u89c1\u6027 \uff0c\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u5171\u4eab\u53d8\u91cf\u7684\u4fee\u6539\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u4f1a\u7acb\u523b\u770b\u5230\u4fee\u6539\u540e\u7684\u503c\u3002\u53ef\u89c1\u6027\u662f\u7531CPU\u7684\u7f13\u5b58\u5bfc\u81f4\u7684\u3002 JVM\u5185\u5b58\u6a21\u578b(JMM) \u89e3\u51b3\u6709\u5e8f\u6027\u548c\u53ef\u89c1\u6027\u7684\u76f4\u63a5\u529e\u6cd5\u662f\u7981\u7528\u7f13\u5b58\u548c\u7f16\u8bd1\u4f18\u5316\uff0cJava\u5185\u5b58\u6a21\u578b(Java Memory Model)\u89c4\u5b9a\u4e86\u5982\u4f55\u6309\u9700\u63d0\u4f9b\u7981\u7528\u7f13\u5b58\u548c\u7f16\u8bd1\u4f18\u5316\u7684\u65b9\u6cd5\uff0c\u53733\u4e2a\u5173\u952e\u5b57(volatile\u3001synchronized\u3001final)\u548c8\u4e2ahappens-before\u89c4\u5219\u3002 1\u3001\u5355\u4e00\u7ebf\u7a0b\u539f\u5219(Single Thread Rule) 2\u3001\u7ba1\u7a0b\u9501\u5b9a\u89c4\u5219(Monitor Lock Rule) 3\u3001volatile\u53d8\u91cf\u89c4\u5219(Volatile Variable Rule) 4\u3001\u7ebf\u7a0b\u542f\u52a8\u89c4\u5219(Thread Start Rule) 5\u3001\u7ebf\u7a0b\u52a0\u5165\u89c4\u5219(Thread Join Rule) 6\u3001\u7ebf\u7a0b\u7ec8\u7aef\u89c4\u5219(Thread Interruption Rule) 7\u3001\u5bf9\u8c61\u7ec8\u7ed3\u89c4\u5219(Finalizer Rule) 8\u3001\u4f20\u9012\u6027(Transitivity) \u4e3a\u4e86\u89e3\u51b3\u539f\u5b50\u6027\u95ee\u9898\uff0cJava\u4e2d\u5f15\u5165\u4e86\u9501\u7684\u6982\u5ff5\u3002\u9501\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b\uff1a \u4e50\u89c2\u9501\u3001\u60b2\u89c2\u9501 \u72ec\u4eab\u9501\u3001\u5171\u4eab\u9501 \u516c\u5e73\u9501\u3001\u975e\u516c\u5e73\u9501 \u4e92\u65a5\u9501\u3001\u8bfb\u5199\u9501 \u53ef\u91cd\u5165\u9501\u3001\u975e\u53ef\u91cd\u5165\u9501 \u72ec\u4eab\u9501\u3001\u5171\u4eab\u9501 \u65e0\u9501\u3001\u504f\u5411\u9501\u3001\u8f7b\u91cf\u7ea7\u9501\u3001\u91cd\u91cf\u7ea7\u9501 \u7ebf\u7a0b\u5b89\u5168 \u5f53\u591a\u4e2a\u5148\u7a0b\u8bbf\u95ee\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u5982\u679c\u4e0d\u7528\u8003\u8651\u8fd9\u4e9b\u7ebf\u7a0b\u5728\u8fd0\u884c\u65f6\u73af\u5883\u4e0b\u7684\u8c03\u5ea6\u548c\u4ea4\u66ff\u6267\u884c\uff0c\u4e5f\u4e0d\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u540c\u6b65\uff0c\u6216\u8005\u5728\u8c03\u7528\u65b9\u8fdb\u884c\u4efb\u4f55\u5176\u4ed6\u7684\u534f\u8c03\u64cd\u4f5c\uff0c\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684\u884c\u4e3a\u90fd\u53ef\u4ee5\u83b7\u5f97\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u90a3\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002 \u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u7684\u65b9\u6cd5\uff1a \u4e92\u65a5\u540c\u6b65 \uff0csynchronized \u548c ReentrantLock \u975e\u963b\u585e\u540c\u6b65 \uff0cCAS\uff0cAtomicInteger\uff0cABA \u65e0\u540c\u6b65 \uff0c\u6808\u5c01\u95ed\uff0cThreadLocal,\u53ef\u91cd\u5165\u4ee3\u7801(Reentrant Code) \u53c2\u8003 Java\u5e76\u53d1\u77e5\u8bc6\u4f53\u7cfb\u8be6\u89e3","title":"\u5e76\u53d1\u7f16\u7a0b\u57fa\u7840"},{"location":"pages/java/2-concurrent/00-concurrent/#_1","text":"Java\u5e76\u53d1\u7f16\u7a0b\u4e2d\u6d89\u53ca\u7684\u6982\u5ff5\u5305\u62ec\u591a\u7ebf\u7a0b\u3001\u7ebf\u7a0b\u6c60\u3001\u540c\u6b65\u3001\u9501\u3001\u5e76\u53d1\u5bb9\u5668\u3001\u5185\u5b58\u6a21\u578b\u7b49\u6982\u5ff5\u3002","title":"\u5e76\u53d1\u7f16\u7a0b"},{"location":"pages/java/2-concurrent/00-concurrent/#_2","text":"\u5e76\u53d1\u7f16\u7a0b\u7684\u4e09\u8981\u7d20\uff0c\u4e5f\u662f\u5e76\u53d1\u95ee\u9898\u7684\u6e90\u5934\uff1a \u539f\u5b50\u6027 \uff0c\u4e00\u4e2a\u6216\u591a\u4e2a\u64cd\u4f5c\u5728CPU\u6267\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u88ab\u4e2d\u65ad\uff0c\u8981\u4e48\u90fd\u6210\u529f\u8981\u4e48\u90fd\u5931\u8d25\u3002\u7531\u4e8eCPU\u5206\u65f6\u590d\u7528\u7684\u5b58\u5728\uff0c\u53ef\u80fd\u5b58\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u6267\u884c\u4e00\u90e8\u5206\u6307\u4ee4\uff0c\u53e6\u4e00\u90e8\u5206\u7ebf\u7a0b\u4e2d\u7ee7\u7eed\u6267\u884c\u53e6\u4e00\u90e8\u5206\u6307\u4ee4\uff0c\u6267\u884c\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff1b \u6709\u5e8f\u6027 \uff0c\u7a0b\u5e8f\u6267\u884c\u7684\u987a\u5e8f\u6309\u7167\u4ee3\u7801\u7684\u5148\u540e\u987a\u5e8f\u6267\u884c\uff0c\u4e3a\u4e86\u4f18\u5316\u4ee3\u7801\u6267\u884c\u7684\u6027\u80fd\uff0c\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u4f1a\u5bf9\u6307\u4ee4\u8fdb\u884c\u91cd\u6392\u5e8f\uff0c\u91cd\u6392\u5e8f\u5206\u4e3a3\u7c7b\uff1a \u7f16\u8bd1\u5668\u91cd\u6392\u5e8f\u3002\u7f16\u8bd1\u5668\u5728\u4e0d\u6539\u53d8\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u8bed\u4e49\u7684\u524d\u63d0\u4e0b\uff0c\u53ef\u4ee5\u91cd\u65b0\u5b89\u6392\u4ee3\u7801\u6267\u884c\u7684\u987a\u5e8f\u3002 \u6307\u4ee4\u7ea7\u5e76\u884c\u7684\u91cd\u6392\u5e8f\u3002\u73b0\u4ee3\u5904\u7406\u5668\u91c7\u7528\u4e86\u6307\u4ee4\u7ea7\u5e76\u884c\u5904\u7406\u6280\u672f\uff0c\u5c06\u591a\u6761\u6307\u4ee4\u5e76\u884c\u6267\u884c\uff0c\u5728\u4e0d\u5b58\u5728\u4f9d\u8d56\u7684\u524d\u63d0\u4e0b\uff0c\u5904\u7406\u5668\u53ef\u4ee5\u6539\u53d8\u6307\u4ee4\u6267\u884c\u7684\u987a\u5e8f\u3002 \u5185\u5b58\u7cfb\u7edf\u7684\u91cd\u6392\u5e8f\u3002\u5904\u7406\u5668\u4f7f\u7528\u7f13\u5b58\u548c\u8bfb\u5199\u7f13\u51b2\u533a\uff0c\u4f7f\u5f97\u52a0\u8f7d\u548c\u5b58\u50a8\u770b\u4e0a\u53bb\u50cf\u662f\u5728\u4e71\u5e8f\u6267\u884c\u3002 \u53ef\u89c1\u6027 \uff0c\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u5171\u4eab\u53d8\u91cf\u7684\u4fee\u6539\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u4f1a\u7acb\u523b\u770b\u5230\u4fee\u6539\u540e\u7684\u503c\u3002\u53ef\u89c1\u6027\u662f\u7531CPU\u7684\u7f13\u5b58\u5bfc\u81f4\u7684\u3002","title":"\u5e76\u53d1\u7f16\u7a0b\u7684\u57fa\u7840"},{"location":"pages/java/2-concurrent/00-concurrent/#jvmjmm","text":"\u89e3\u51b3\u6709\u5e8f\u6027\u548c\u53ef\u89c1\u6027\u7684\u76f4\u63a5\u529e\u6cd5\u662f\u7981\u7528\u7f13\u5b58\u548c\u7f16\u8bd1\u4f18\u5316\uff0cJava\u5185\u5b58\u6a21\u578b(Java Memory Model)\u89c4\u5b9a\u4e86\u5982\u4f55\u6309\u9700\u63d0\u4f9b\u7981\u7528\u7f13\u5b58\u548c\u7f16\u8bd1\u4f18\u5316\u7684\u65b9\u6cd5\uff0c\u53733\u4e2a\u5173\u952e\u5b57(volatile\u3001synchronized\u3001final)\u548c8\u4e2ahappens-before\u89c4\u5219\u3002 1\u3001\u5355\u4e00\u7ebf\u7a0b\u539f\u5219(Single Thread Rule) 2\u3001\u7ba1\u7a0b\u9501\u5b9a\u89c4\u5219(Monitor Lock Rule) 3\u3001volatile\u53d8\u91cf\u89c4\u5219(Volatile Variable Rule) 4\u3001\u7ebf\u7a0b\u542f\u52a8\u89c4\u5219(Thread Start Rule) 5\u3001\u7ebf\u7a0b\u52a0\u5165\u89c4\u5219(Thread Join Rule) 6\u3001\u7ebf\u7a0b\u7ec8\u7aef\u89c4\u5219(Thread Interruption Rule) 7\u3001\u5bf9\u8c61\u7ec8\u7ed3\u89c4\u5219(Finalizer Rule) 8\u3001\u4f20\u9012\u6027(Transitivity) \u4e3a\u4e86\u89e3\u51b3\u539f\u5b50\u6027\u95ee\u9898\uff0cJava\u4e2d\u5f15\u5165\u4e86\u9501\u7684\u6982\u5ff5\u3002\u9501\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b\uff1a \u4e50\u89c2\u9501\u3001\u60b2\u89c2\u9501 \u72ec\u4eab\u9501\u3001\u5171\u4eab\u9501 \u516c\u5e73\u9501\u3001\u975e\u516c\u5e73\u9501 \u4e92\u65a5\u9501\u3001\u8bfb\u5199\u9501 \u53ef\u91cd\u5165\u9501\u3001\u975e\u53ef\u91cd\u5165\u9501 \u72ec\u4eab\u9501\u3001\u5171\u4eab\u9501 \u65e0\u9501\u3001\u504f\u5411\u9501\u3001\u8f7b\u91cf\u7ea7\u9501\u3001\u91cd\u91cf\u7ea7\u9501","title":"JVM\u5185\u5b58\u6a21\u578b(JMM)"},{"location":"pages/java/2-concurrent/00-concurrent/#_3","text":"\u5f53\u591a\u4e2a\u5148\u7a0b\u8bbf\u95ee\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u5982\u679c\u4e0d\u7528\u8003\u8651\u8fd9\u4e9b\u7ebf\u7a0b\u5728\u8fd0\u884c\u65f6\u73af\u5883\u4e0b\u7684\u8c03\u5ea6\u548c\u4ea4\u66ff\u6267\u884c\uff0c\u4e5f\u4e0d\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u540c\u6b65\uff0c\u6216\u8005\u5728\u8c03\u7528\u65b9\u8fdb\u884c\u4efb\u4f55\u5176\u4ed6\u7684\u534f\u8c03\u64cd\u4f5c\uff0c\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684\u884c\u4e3a\u90fd\u53ef\u4ee5\u83b7\u5f97\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u90a3\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002 \u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u7684\u65b9\u6cd5\uff1a \u4e92\u65a5\u540c\u6b65 \uff0csynchronized \u548c ReentrantLock \u975e\u963b\u585e\u540c\u6b65 \uff0cCAS\uff0cAtomicInteger\uff0cABA \u65e0\u540c\u6b65 \uff0c\u6808\u5c01\u95ed\uff0cThreadLocal,\u53ef\u91cd\u5165\u4ee3\u7801(Reentrant Code) \u53c2\u8003 Java\u5e76\u53d1\u77e5\u8bc6\u4f53\u7cfb\u8be6\u89e3","title":"\u7ebf\u7a0b\u5b89\u5168"},{"location":"pages/java/2-concurrent/01-thread/","text":"\u7ebf\u7a0b \u5b9e\u73b0\u591a\u7ebf\u7a0b\u7ebf\u7a0b\u7684\u65b9\u6cd5 \u76f4\u63a5new Thread()\uff0c\u91cd\u5199run\u65b9\u6cd5\uff0c\u8c03\u7528start()\u6267\u884c; \u5b9e\u73b0Runnable\u63a5\u53e3\uff0c\u4f20\u5165\u5230Thread\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff1b \u5b9e\u73b0Callable\u63a5\u53e3\uff0c\u5305\u88c5\u6210FutureTask\uff0c\u4f20\u5165\u5230Thread\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u3002 3\u79cd\u65b9\u5f0f\u672c\u8d28\u4e0a\u90fd\u662f\u901a\u8fc7Thread\u7c7b\u7684start\u65b9\u6cd5\u5b9e\u73b0\u7684\u591a\u7ebf\u7a0b\u3002 \u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7 Java\u4e2d\u7ebf\u7a0b\u4f18\u5148\u7ea7\u9ed8\u8ba4\u67093\u4e2a\uff0cMIN_PRIORITY(1)\u3001NORMAL_PRIORITY(5)\u3001MAX_PRIORITY(10)\uff0c\u65b0\u521b\u5efa\u7ebf\u7a0b\u65f6\uff0c\u4f18\u5148\u7ea7\u7ee7\u627f\u81ea\u7236\u7ebf\u7a0b(\u5373\u521b\u5efa\u7ebf\u7a0b\u5bf9\u8c61\u7684\u5f53\u524d\u7ebf\u7a0bThread.currentThread())\uff0c\u9ed8\u8ba4\u7684\u4f18\u5148\u7ea7\u662fNORMAL_PRIORITY. \u8bbe\u7f6e\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\u7684\u6570\u503c\u5fc5\u987b\u57281~10\u4e4b\u95f4\uff0c\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u7ebf\u7a0b\u4f1a\u6709\u66f4\u5927\u7684\u51e0\u7387\u88ab\u8c03\u5ea6\uff0c\u4f46\u662f\u9ad8\u4f18\u5148\u7ea7\u7684\u7ebf\u7a0b\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u88ab\u4f4e\u4f18\u5148\u7ea7\u7684\u7ebf\u7a0b\u5148\u8c03\u5ea6\uff0c\u8fd9\u53d6\u51b3\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u7ebf\u7a0b\u8c03\u5ea6\u7684\u5b9e\u73b0\u3002 Android\u4e2d\uff0c\u8bbe\u7f6e\u7ebf\u7a0b\u4f18\u5148\u7ea7\u67092\u79cd\u65b9\u5f0f\uff1a Thread.setPriority(int)\uff0cJava\u4e2d\u7684\u65b9\u6cd5\uff1b Process.setThreadPiority(int)\uff0cAndroid\u539f\u751f\u7684\u65b9\u6cd5\uff1b Process.setThreadPiority(int)\u662f\u4e00\u4e2anative\u65b9\u6cd5\uff0c\u901a\u8fc7\u4fee\u6539Linux\u539f\u751f\u7ebf\u7a0b\u7684nice\u503c\u6765\u786e\u5b9a\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\uff0c\u53d6\u503c\u5728-20~19(Linux\u539f\u751f\u7684nice\u503c\u4e3a-20~19)\uff0c\u6570\u503c\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002Android\u4e2d\u7ebf\u7a0b\u9ed8\u8ba4\u7684\u4f18\u5148\u7ea7\u662f0\uff0c\u548c\u7528\u6237\u4ea4\u4e92\u7684\u7ebf\u7a0b\u4f18\u5148\u7ea7\u662f-2. \u7ebf\u7a0b\u7684\u72b6\u6001 NEW \u65b0\u521b\u5efa\u7684\u7ebf\u7a0b\uff0c\u8fd8\u672a\u5f00\u59cb\u6267\u884c RUNNABLE \u8fd0\u884c\u6001\uff0c\u5728Jvm\u4e2d\u6b63\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\uff0c\u4f46\u662f\u53ef\u80fd\u5728\u7b49\u5f85\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5176\u4ed6\u7684\u8d44\u6e90\uff1b BLOCKED \u963b\u585e\u72b6\u6001\uff0c\u5728\u7b49\u5f85\u76d1\u89c6\u5668\u9501(monitor lock)\uff0c\u8c03\u7528wait\u4e4b\u540e\uff0c\u7b49\u4ee3\u7801\u8fdb\u5165synchronized\u6216\u8005\u9501\u4ee3\u7801\u5757\u4e2d\uff1b WAITING \u7b49\u5f85\u72b6\u6001\uff0c\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u64cd\u4f5c\uff0c\u8c03\u7528Object.wait\u3001Thread.join\u3001LockSupport.park\u90fd\u80fd\u8fdb\u5165\u8fd9\u79cd\u72b6\u6001 TIMED_WAITING \u7b49\u5f85\u8d85\u65f6\uff0c\u548cWAITING\u7c7b\u4f3c\uff0c\u4f46\u662f\u6709\u8d85\u65f6\u65f6\u95f4\uff0c\u9664\u4e86\u5e26\u8d85\u65f6\u53c2\u6570\u8c03\u7528\u4e0a\u9762\u76843\u4e2a\u65b9\u6cd5\u5916\uff0c\u8c03\u7528Thread.sleep\u3001LockSupport.parkNano\u3001LockSupport.parkUtil\u4e5f\u4f1a\u8fdb\u5165\u8fd9\u79cd\u72b6\u6001 TERMINATED \u7ec8\u6001\uff0c\u8fd0\u884c\u7ed3\u675f \u7ebf\u7a0b\u505c\u6b62 \u63a8\u8350\u4f7f\u7528\u6807\u5fd7\u6765\u6807\u8bb0\u7ebf\u7a0b\u7ed3\u675f\uff0c\u8ba9\u7ebf\u7a0b\u81ea\u884c\u6267\u884c\u5b8crun\u65b9\u6cd5\u3002 \u8c03\u7528stop()\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u7ed3\u675f\u7ebf\u7a0b\uff0c\u8fd9\u79cd\u65b9\u5f0f\u662f\u901a\u8fc7\u629b\u51fa\u4e00\u4e2aThreadDeath\u7684\u9519\u8bef\u6765\u7ed3\u675f\u7ebf\u7a0b\uff0c\u4f1a\u4f7f\u7ebf\u7a0b\u6301\u6709\u7684\u9501\u5168\u90e8\u91ca\u653e\uff0c\u6709\u53ef\u80fd\u9020\u6210\u72b6\u6001\u4e0d\u4e00\u81f4\uff0c\u51fa\u73b0\u4e00\u4e9b\u5f02\u5e38\u7684\u884c\u4e3a\uff0c\u56e0\u6b64\u4e0d\u5efa\u8bae\u4f7f\u7528\uff0c\u4eceJava 1.2\u5f00\u59cb\uff0c\u8fd9\u4e2a\u65b9\u5f0f\u88ab\u5f03\u7528\u4e86\u3002\u540c\u6837\u548cstop\u914d\u5408\u4f7f\u7528\u7684suspend()\u548cresume()\u65b9\u6cd5\u4e5f\u88ab\u5f03\u7528\u4e86\u3002 interrupted()\u65b9\u6cd5\uff0c\u53ea\u662f\u7ed9\u7ebf\u7a0b\u589e\u52a0\u4e00\u4e2a\u4e2d\u65ad\u7684\u72b6\u6001\uff0c\u5e76\u4e0d\u4f1a\u771f\u6b63\u505c\u6b62\u7ebf\u7a0b\u7684\u8fd0\u884c\u3002\u5982\u679c\u7ebf\u7a0b\u8c03\u7528\u4e86wait\u3001join\u3001sleep\u7b49\u65b9\u6cd5\uff0c\u4f1a\u629b\u51fa\u4e00\u4e2aInterruptedException\u540c\u65f6\u6e05\u7a7a\u4e2d\u65ad\u7684\u6807\u8bc6\u3002 \u5b88\u62a4\u7ebf\u7a0b JVM\u4e2d\u7684\u7ebf\u7a0b\u5206\u4e3a\u5b88\u62a4\u7ebf\u7a0b\u548c\u7528\u6237\u7ebf\u7a0b\u3002\u5f53\u8fdb\u7a0b\u4e2d\u4e0d\u5b58\u5728\u4efb\u4f55\u7528\u6237\u8fdb\u7a0b\u540e\uff0c\u5b88\u62a4\u7ebf\u7a0b\u4f1a\u88ab\u81ea\u52a8\u9500\u6bc1\u3002\u5e38\u89c1\u7684\u5b88\u62a4\u7ebf\u7a0b\u65f6\u5783\u573e\u56de\u6536\u7ebf\u7a0b\u3002 \u901a\u8fc7\u8bbe\u7f6ethread.setDaemon(true)\u8bbe\u7f6e\u4e00\u4e2a\u7ebf\u7a0b\u4e3a\u5b88\u62a4\u7ebf\u7a0b\u3002","title":"\u591a\u7ebf\u7a0b"},{"location":"pages/java/2-concurrent/01-thread/#_1","text":"","title":"\u7ebf\u7a0b"},{"location":"pages/java/2-concurrent/01-thread/#_2","text":"\u76f4\u63a5new Thread()\uff0c\u91cd\u5199run\u65b9\u6cd5\uff0c\u8c03\u7528start()\u6267\u884c; \u5b9e\u73b0Runnable\u63a5\u53e3\uff0c\u4f20\u5165\u5230Thread\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff1b \u5b9e\u73b0Callable\u63a5\u53e3\uff0c\u5305\u88c5\u6210FutureTask\uff0c\u4f20\u5165\u5230Thread\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u3002 3\u79cd\u65b9\u5f0f\u672c\u8d28\u4e0a\u90fd\u662f\u901a\u8fc7Thread\u7c7b\u7684start\u65b9\u6cd5\u5b9e\u73b0\u7684\u591a\u7ebf\u7a0b\u3002","title":"\u5b9e\u73b0\u591a\u7ebf\u7a0b\u7ebf\u7a0b\u7684\u65b9\u6cd5"},{"location":"pages/java/2-concurrent/01-thread/#_3","text":"Java\u4e2d\u7ebf\u7a0b\u4f18\u5148\u7ea7\u9ed8\u8ba4\u67093\u4e2a\uff0cMIN_PRIORITY(1)\u3001NORMAL_PRIORITY(5)\u3001MAX_PRIORITY(10)\uff0c\u65b0\u521b\u5efa\u7ebf\u7a0b\u65f6\uff0c\u4f18\u5148\u7ea7\u7ee7\u627f\u81ea\u7236\u7ebf\u7a0b(\u5373\u521b\u5efa\u7ebf\u7a0b\u5bf9\u8c61\u7684\u5f53\u524d\u7ebf\u7a0bThread.currentThread())\uff0c\u9ed8\u8ba4\u7684\u4f18\u5148\u7ea7\u662fNORMAL_PRIORITY. \u8bbe\u7f6e\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\u7684\u6570\u503c\u5fc5\u987b\u57281~10\u4e4b\u95f4\uff0c\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u7ebf\u7a0b\u4f1a\u6709\u66f4\u5927\u7684\u51e0\u7387\u88ab\u8c03\u5ea6\uff0c\u4f46\u662f\u9ad8\u4f18\u5148\u7ea7\u7684\u7ebf\u7a0b\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u88ab\u4f4e\u4f18\u5148\u7ea7\u7684\u7ebf\u7a0b\u5148\u8c03\u5ea6\uff0c\u8fd9\u53d6\u51b3\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u7ebf\u7a0b\u8c03\u5ea6\u7684\u5b9e\u73b0\u3002 Android\u4e2d\uff0c\u8bbe\u7f6e\u7ebf\u7a0b\u4f18\u5148\u7ea7\u67092\u79cd\u65b9\u5f0f\uff1a Thread.setPriority(int)\uff0cJava\u4e2d\u7684\u65b9\u6cd5\uff1b Process.setThreadPiority(int)\uff0cAndroid\u539f\u751f\u7684\u65b9\u6cd5\uff1b Process.setThreadPiority(int)\u662f\u4e00\u4e2anative\u65b9\u6cd5\uff0c\u901a\u8fc7\u4fee\u6539Linux\u539f\u751f\u7ebf\u7a0b\u7684nice\u503c\u6765\u786e\u5b9a\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\uff0c\u53d6\u503c\u5728-20~19(Linux\u539f\u751f\u7684nice\u503c\u4e3a-20~19)\uff0c\u6570\u503c\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002Android\u4e2d\u7ebf\u7a0b\u9ed8\u8ba4\u7684\u4f18\u5148\u7ea7\u662f0\uff0c\u548c\u7528\u6237\u4ea4\u4e92\u7684\u7ebf\u7a0b\u4f18\u5148\u7ea7\u662f-2.","title":"\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7"},{"location":"pages/java/2-concurrent/01-thread/#_4","text":"NEW \u65b0\u521b\u5efa\u7684\u7ebf\u7a0b\uff0c\u8fd8\u672a\u5f00\u59cb\u6267\u884c RUNNABLE \u8fd0\u884c\u6001\uff0c\u5728Jvm\u4e2d\u6b63\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\uff0c\u4f46\u662f\u53ef\u80fd\u5728\u7b49\u5f85\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5176\u4ed6\u7684\u8d44\u6e90\uff1b BLOCKED \u963b\u585e\u72b6\u6001\uff0c\u5728\u7b49\u5f85\u76d1\u89c6\u5668\u9501(monitor lock)\uff0c\u8c03\u7528wait\u4e4b\u540e\uff0c\u7b49\u4ee3\u7801\u8fdb\u5165synchronized\u6216\u8005\u9501\u4ee3\u7801\u5757\u4e2d\uff1b WAITING \u7b49\u5f85\u72b6\u6001\uff0c\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u64cd\u4f5c\uff0c\u8c03\u7528Object.wait\u3001Thread.join\u3001LockSupport.park\u90fd\u80fd\u8fdb\u5165\u8fd9\u79cd\u72b6\u6001 TIMED_WAITING \u7b49\u5f85\u8d85\u65f6\uff0c\u548cWAITING\u7c7b\u4f3c\uff0c\u4f46\u662f\u6709\u8d85\u65f6\u65f6\u95f4\uff0c\u9664\u4e86\u5e26\u8d85\u65f6\u53c2\u6570\u8c03\u7528\u4e0a\u9762\u76843\u4e2a\u65b9\u6cd5\u5916\uff0c\u8c03\u7528Thread.sleep\u3001LockSupport.parkNano\u3001LockSupport.parkUtil\u4e5f\u4f1a\u8fdb\u5165\u8fd9\u79cd\u72b6\u6001 TERMINATED \u7ec8\u6001\uff0c\u8fd0\u884c\u7ed3\u675f","title":"\u7ebf\u7a0b\u7684\u72b6\u6001"},{"location":"pages/java/2-concurrent/01-thread/#_5","text":"\u63a8\u8350\u4f7f\u7528\u6807\u5fd7\u6765\u6807\u8bb0\u7ebf\u7a0b\u7ed3\u675f\uff0c\u8ba9\u7ebf\u7a0b\u81ea\u884c\u6267\u884c\u5b8crun\u65b9\u6cd5\u3002 \u8c03\u7528stop()\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u7ed3\u675f\u7ebf\u7a0b\uff0c\u8fd9\u79cd\u65b9\u5f0f\u662f\u901a\u8fc7\u629b\u51fa\u4e00\u4e2aThreadDeath\u7684\u9519\u8bef\u6765\u7ed3\u675f\u7ebf\u7a0b\uff0c\u4f1a\u4f7f\u7ebf\u7a0b\u6301\u6709\u7684\u9501\u5168\u90e8\u91ca\u653e\uff0c\u6709\u53ef\u80fd\u9020\u6210\u72b6\u6001\u4e0d\u4e00\u81f4\uff0c\u51fa\u73b0\u4e00\u4e9b\u5f02\u5e38\u7684\u884c\u4e3a\uff0c\u56e0\u6b64\u4e0d\u5efa\u8bae\u4f7f\u7528\uff0c\u4eceJava 1.2\u5f00\u59cb\uff0c\u8fd9\u4e2a\u65b9\u5f0f\u88ab\u5f03\u7528\u4e86\u3002\u540c\u6837\u548cstop\u914d\u5408\u4f7f\u7528\u7684suspend()\u548cresume()\u65b9\u6cd5\u4e5f\u88ab\u5f03\u7528\u4e86\u3002 interrupted()\u65b9\u6cd5\uff0c\u53ea\u662f\u7ed9\u7ebf\u7a0b\u589e\u52a0\u4e00\u4e2a\u4e2d\u65ad\u7684\u72b6\u6001\uff0c\u5e76\u4e0d\u4f1a\u771f\u6b63\u505c\u6b62\u7ebf\u7a0b\u7684\u8fd0\u884c\u3002\u5982\u679c\u7ebf\u7a0b\u8c03\u7528\u4e86wait\u3001join\u3001sleep\u7b49\u65b9\u6cd5\uff0c\u4f1a\u629b\u51fa\u4e00\u4e2aInterruptedException\u540c\u65f6\u6e05\u7a7a\u4e2d\u65ad\u7684\u6807\u8bc6\u3002","title":"\u7ebf\u7a0b\u505c\u6b62"},{"location":"pages/java/2-concurrent/01-thread/#_6","text":"JVM\u4e2d\u7684\u7ebf\u7a0b\u5206\u4e3a\u5b88\u62a4\u7ebf\u7a0b\u548c\u7528\u6237\u7ebf\u7a0b\u3002\u5f53\u8fdb\u7a0b\u4e2d\u4e0d\u5b58\u5728\u4efb\u4f55\u7528\u6237\u8fdb\u7a0b\u540e\uff0c\u5b88\u62a4\u7ebf\u7a0b\u4f1a\u88ab\u81ea\u52a8\u9500\u6bc1\u3002\u5e38\u89c1\u7684\u5b88\u62a4\u7ebf\u7a0b\u65f6\u5783\u573e\u56de\u6536\u7ebf\u7a0b\u3002 \u901a\u8fc7\u8bbe\u7f6ethread.setDaemon(true)\u8bbe\u7f6e\u4e00\u4e2a\u7ebf\u7a0b\u4e3a\u5b88\u62a4\u7ebf\u7a0b\u3002","title":"\u5b88\u62a4\u7ebf\u7a0b"},{"location":"pages/java/2-concurrent/02-thread-pool/","text":"\u7ebf\u7a0b\u6c60 \u4f7f\u7528\u7ebf\u7a0b\u6c60\u7684\u539f\u56e0 \u964d\u4f4e\u8d44\u6e90\u6d88\u8017\u3002\u901a\u8fc7\u590d\u7528\u5df2\u5b58\u5728\u7684\u7ebf\u7a0b\u548c\u964d\u4f4e\u7ebf\u7a0b\u5173\u95ed\u7684\u6b21\u6570\u6765\u5c3d\u53ef\u80fd\u964d\u4f4e\u7cfb\u7edf\u6027\u80fd\u635f\u8017\uff1b \u63d0\u9ad8\u54cd\u5e94\u901f\u5ea6\u3002\u901a\u8fc7\u590d\u7528\u7ebf\u7a0b\uff0c\u7701\u53bb\u521b\u5efa\u7ebf\u7a0b\u7684\u8fc7\u7a0b\uff0c\u56e0\u6b64\u6574\u4f53\u4e0a\u63d0\u5347\u4e86\u7cfb\u7edf\u7684\u54cd\u5e94\u901f\u5ea6\uff1b \u63d0\u9ad8\u7ebf\u7a0b\u7684\u53ef\u7ba1\u7406\u6027\u3002\u7ebf\u7a0b\u662f\u7a00\u7f3a\u8d44\u6e90\uff0c\u5982\u679c\u65e0\u9650\u5236\u7684\u521b\u5efa\uff0c\u4e0d\u4ec5\u4f1a\u6d88\u8017\u7cfb\u7edf\u8d44\u6e90\uff0c\u8fd8\u4f1a\u964d\u4f4e\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\uff0c\u56e0\u6b64\uff0c\u9700\u8981\u4f7f\u7528\u7ebf\u7a0b\u6c60\u6765\u7ba1\u7406\u7ebf\u7a0b\u3002 \u7ebf\u7a0b\u6c60\u7684\u57fa\u672c\u4f7f\u7528 1\u3001\u4f7f\u7528JDK\u81ea\u5e26\u7684\u7ebf\u7a0b\u6c60 ExecutorService service = Excutors . newFixedThreadPool ( nThreads ); service . submit (() -> { ... }); 2\u3001\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60 ExecutorService service = new ThreadPoolExecutor ( corePoolSize , maximumPoolSize , keepAliveTime , TimeUnit . SECONDS , workQueue , threadFactory , handler ); service . submit (() -> { ... }); \u7ebf\u7a0b\u6c60\u7684\u5de5\u4f5c\u539f\u7406 \u521b\u5efa\u7ebf\u7a0b\u6c60\u7684\u6838\u5fc3\u53c2\u6570 int corePoolSize \uff0c\u6838\u5fc3\u7ebf\u7a0b\u6570\uff0c\u9700\u8981\u5927\u4e8e0\uff1b int maximumPoolSize \uff0c\u6700\u5927\u7ebf\u7a0b\u6570\uff0c\u9700\u8981\u5927\u4e8e0\uff1b long keepAliveTime \uff0c\u7ebf\u7a0b\u5b58\u6d3b\u7684\u65f6\u95f4\uff1b TimeUnit unit \uff0c\u65f6\u95f4\u5355\u4f4d\uff0c\u4ece\u7eb3\u79d2\u5230\u5929\uff0c\u975e\u7a7a\uff1b BlockingQueue<Runnable> workQueue \uff0c\u7b49\u5f85\u961f\u5217\uff0c\u975e\u7a7a\uff1b ThreadFactory threadFactory \uff0c\u521b\u5efa\u7ebf\u7a0b\u7684\u5de5\u5382\u65b9\u6cd5\uff0c\u975e\u7a7a\uff1b RejectedExecutionHandler handler \uff0c\u6267\u884c\u62d2\u7edd\u7b56\u7565\u65f6\u7684\u5904\u7406\u5668\uff0c\u975e\u7a7a\u3002 \u5404\u53c2\u6570\u610f\u4e49 corePoolSize \u5411\u7ebf\u7a0b\u6c60\u4e2d\u63d0\u4ea4\u4e00\u4e2a\u7ebf\u7a0b\u65f6\uff0c\u5982\u679c\u7ebf\u7a0b\u6c60\u4e2d\u5df2\u6709\u7ebf\u7a0b\u7684\u6570\u5c0f\u4e8ecorePoolSize\uff0c\u5373\u4f7f\u5b58\u5728\u7a7a\u95f2\u7684\u7ebf\u7a0b\uff0c\u4e5f\u4f1a\u521b\u5efa\u65b0\u7684\u7ebf\u7a0b\uff0c\u521b\u5efa\u65b0\u7684\u7ebf\u7a0b\u4f7f\u7528\u7684\u662fthreadFactory.newThread()\u6765\u521b\u5efa\u3002\u5982\u679c\u7ebf\u7a0b\u6570\u5df2\u7ecf\u8d85\u8fc7corePoolSize\uff0c\u770b\u662f\u5426\u6709\u7a7a\u95f2\u7684\u7ebf\u7a0b\uff0c\u5b58\u5728\u7a7a\u95f2\u7684\u7ebf\u7a0b\uff0c\u5219\u7528\u7a7a\u95f2\u7ebf\u7a0b\u6267\u884c\u4efb\u52a1\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u6839\u636emaximumPoolSize\u6765\u51b3\u5b9a\u662f\u5426\u521b\u5efa\u7ebf\u7a0b\u3002 maximumPoolSize \u63d0\u4ea4\u4efb\u52a1\u65f6\uff0c\u5982\u679c\u7ebf\u7a0b\u6c60\u4e2d\u7ebf\u7a0b\u6570\u91cf\u8d85\u8fc7corePoolSize\uff0c\u4e14\u6ca1\u6709\u7a7a\u95f2\u7684\u7ebf\u7a0b\uff0c\u68c0\u67e5\u7ebf\u7a0b\u6570\u91cf\u662f\u5426\u8d85\u8fc7\u4e86maximumPoolSize\uff0c\u8d85\u8fc7\u4e86\u5219\u4f1a\u6267\u884c\u62d2\u7edd\u7b56\u7565\uff0c\u4ea4\u7531handle\u5904\u7406\uff0c\u6ca1\u8d85\u8fc7\u6700\u5927\u7ebf\u7a0b\u6570\uff0c\u5c06\u7ebf\u7a0b\u653e\u5165\u7b49\u5f85\u961f\u5217\u3002\u5982workQueue\u4e3a\u65e0\u754c\u961f\u5217\uff0c\u8fd9\u4e2a\u53c2\u6570\u4f1a\u88ab\u5ffd\u7565\u3002 workQueue \u7b49\u5f85\u961f\u5217\uff0c\u5de5\u4f5c\u7ebf\u7a0b\u8d85\u8fc7corePoolSize\u540e\uff0c\u4f1a\u88ab\u653e\u5165\u7b49\u5f85\u961f\u5217\u3002 threadFactory \u521b\u5efa\u7ebf\u7a0b\u7684\u5de5\u5382\u65b9\u6cd5\uff0c\u53ef\u4ee5\u6307\u5b9a\u7ebf\u7a0b\u7684\u5206\u7ec4\uff0c\u7ebf\u7a0b\u4f18\u5148\u7ea7\uff0c\u7ebf\u7a0b\u540d\u7b49\u3002 rejectedExecutionHandler \u63d0\u4ea4\u7684\u7ebf\u7a0b\u6570\u91cf\u8d85\u8fc7\u4e86\u6700\u5927\u7ebf\u7a0b\u6570\uff0c\u4ea4\u7ed9rejectedExecutionHandler\u5904\u7406\uff0c\u53c2\u6570\u5305\u62ecRunnable\u548cexecutor\u3002JDK\u4e2d\u9ed8\u8ba4\u5185\u7f6e\u4e864\u79cd\u5904\u7406\u7b56\u7565\uff1a ThreadPoolExecutor.AbortPolicy\uff0c\u62d2\u7edd\u6267\u884c\u4efb\u52a1\uff0c\u5e76\u629b\u51faRejectedExecutionException\u5f02\u5e38\uff1b ThreadPoolExecutor.DiscardPolicy\uff0c\u4e22\u5f03\u4efb\u52a1\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff1b ThreadPoolExecutor.DiscardOldestPolicy\uff0c\u4e22\u5f03\u6392\u961f\u6700\u4e45\u7684\u4efb\u52a1\uff0c\u91cd\u8bd5\u6267\u884c\uff0c\u5982\u679c\u7ebf\u7a0b\u6c60\u5df2\u7ecf\u5173\u95ed\uff0c\u76f4\u63a5\u4e22\u5f03\u4efb\u52a1\uff1b ThreadPoolExecutor.CallerRunsPolicy\uff0c\u7531\u8c03\u7528\u8005\u6240\u5728\u7684\u7ebf\u7a0b\u6267\u884c\u8be5\u4efb\u52a1\uff0c\u5982\u679c\u7ebf\u7a0b\u6c60\u5df2\u7ecf\u5173\u95ed\u4e86\uff0c\u76f4\u63a5\u4e22\u5f03\u4efb\u52a1\uff1b JDK\u5e38\u7528\u7684\u7ebf\u7a0b\u6c60 Excutors\u4e2d\u6709\u51e0\u4e2a\u9759\u6001\u65b9\u6cd5newXXXPool\uff0c\u7528\u6765\u521b\u5efa\u7ebf\u7a0b\u6c60: \u7ebf\u7a0b\u6c60\u65b9\u6cd5 corePoolSize maximumPoolSize workQueue keepAliveTime rejectedExecutionHandler newCachedThreadPool 0 Integer.MAX_VALUE SynchronousQueue 60s AbortPolicy newSingleThreadScheduledExecutor 1 Integer.MAX_VALUE DelayedWorkQueue 10min AbortPolicy newScheduledThreadPool \u53c2\u6570\u4f20\u5165 Integer.MAX_VALUE DelayedWorkQueue 10min AbortPolicy newSingleThreadExecutor 1 1 LinkedBlockingQueue 0min AbortPolicy newFixedThreadPool \u53c2\u6570\u4f20\u5165 \u53c2\u6570\u4f20\u5165 LinkedBlockingQueue 0min AbortPolicy newCachedThreadPool \u8be5\u7ebf\u7a0b\u6c60\u65e0\u9650\u5927\uff0c\u53ea\u8981\u4e0d\u5b58\u5728\u7a7a\u95f2\u7ebf\u7a0b\uff0c\u53ef\u4ee5\u4e00\u76f4\u521b\u5efa\u65b0\u7ebf\u7a0b\u3002 newSingleThreadScheduledExecutor \uff0c\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5468\u671f\u6027\u6267\u884c\u4efb\u52a1\u3002 newScheduledThreadPool \uff0c\u5468\u671f\u6027\u6267\u884c\u4efb\u52a1\uff0c\u6838\u5fc3\u7ebf\u7a0b\u6570\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u6307\u5b9a\u3002 newSingleThreadExecutor \uff0c\u5355\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u6c60\uff0c\u6240\u6709\u4efb\u52a1\u90fd\u662f\u4e32\u884c\u6267\u884c\u3002 newFixedThreadPool \uff0c\u5927\u5c0f\u56fa\u5b9a\uff0c\u5373\u9650\u5b9a\u6700\u5927\u5e76\u53d1\u6570\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u6570\u91cf\uff0c\u4f1a\u6392\u961f\u6267\u884c\u3002 newWorkStealingPool \uff0cJDK 8 \u4e2d\u624d\u52a0\u5165\u7ebf\u7a0b\u6c60\uff0c\u4f7f\u7528ForkJoinPool\uff0c\u5e76\u53d1\u6570\u4e3a\u5904\u7406\u5668\u7684\u6570\u91cf\u3002 \u7ebf\u7a0b\u6c60\u53c2\u6570\u914d\u7f6e\u6700\u4f73\u5b9e\u8df5 CPU\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u9650\u5236\u7ebf\u7a0b\u7684\u6570\u91cf\uff0c\u4e00\u822c\u8bbe\u7f6e\u4e3aCPU\u7684\u6838\u6570\uff1b IO\u5bc6\u96c6\u578b\uff0c\u7531\u4e8eIO\u7684\u901f\u5ea6\u8fdc\u4f4e\u4e8eCPU\u901f\u5ea6\uff0c\u53ef\u4ee5\u591a\u914d\u7f6e\u7ebf\u7a0b\uff0c\u63d0\u5347CPU\u7684\u5229\u7528\u7387\u3002 \u53c2\u8003 java\u7ebf\u7a0b\u6c60\u4f7f\u7528\u6700\u5168\u8be6\u89e3","title":"\u7ebf\u7a0b\u6c60"},{"location":"pages/java/2-concurrent/02-thread-pool/#_1","text":"","title":"\u7ebf\u7a0b\u6c60"},{"location":"pages/java/2-concurrent/02-thread-pool/#_2","text":"\u964d\u4f4e\u8d44\u6e90\u6d88\u8017\u3002\u901a\u8fc7\u590d\u7528\u5df2\u5b58\u5728\u7684\u7ebf\u7a0b\u548c\u964d\u4f4e\u7ebf\u7a0b\u5173\u95ed\u7684\u6b21\u6570\u6765\u5c3d\u53ef\u80fd\u964d\u4f4e\u7cfb\u7edf\u6027\u80fd\u635f\u8017\uff1b \u63d0\u9ad8\u54cd\u5e94\u901f\u5ea6\u3002\u901a\u8fc7\u590d\u7528\u7ebf\u7a0b\uff0c\u7701\u53bb\u521b\u5efa\u7ebf\u7a0b\u7684\u8fc7\u7a0b\uff0c\u56e0\u6b64\u6574\u4f53\u4e0a\u63d0\u5347\u4e86\u7cfb\u7edf\u7684\u54cd\u5e94\u901f\u5ea6\uff1b \u63d0\u9ad8\u7ebf\u7a0b\u7684\u53ef\u7ba1\u7406\u6027\u3002\u7ebf\u7a0b\u662f\u7a00\u7f3a\u8d44\u6e90\uff0c\u5982\u679c\u65e0\u9650\u5236\u7684\u521b\u5efa\uff0c\u4e0d\u4ec5\u4f1a\u6d88\u8017\u7cfb\u7edf\u8d44\u6e90\uff0c\u8fd8\u4f1a\u964d\u4f4e\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\uff0c\u56e0\u6b64\uff0c\u9700\u8981\u4f7f\u7528\u7ebf\u7a0b\u6c60\u6765\u7ba1\u7406\u7ebf\u7a0b\u3002","title":"\u4f7f\u7528\u7ebf\u7a0b\u6c60\u7684\u539f\u56e0"},{"location":"pages/java/2-concurrent/02-thread-pool/#_3","text":"1\u3001\u4f7f\u7528JDK\u81ea\u5e26\u7684\u7ebf\u7a0b\u6c60 ExecutorService service = Excutors . newFixedThreadPool ( nThreads ); service . submit (() -> { ... }); 2\u3001\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60 ExecutorService service = new ThreadPoolExecutor ( corePoolSize , maximumPoolSize , keepAliveTime , TimeUnit . SECONDS , workQueue , threadFactory , handler ); service . submit (() -> { ... });","title":"\u7ebf\u7a0b\u6c60\u7684\u57fa\u672c\u4f7f\u7528"},{"location":"pages/java/2-concurrent/02-thread-pool/#_4","text":"","title":"\u7ebf\u7a0b\u6c60\u7684\u5de5\u4f5c\u539f\u7406"},{"location":"pages/java/2-concurrent/02-thread-pool/#_5","text":"int corePoolSize \uff0c\u6838\u5fc3\u7ebf\u7a0b\u6570\uff0c\u9700\u8981\u5927\u4e8e0\uff1b int maximumPoolSize \uff0c\u6700\u5927\u7ebf\u7a0b\u6570\uff0c\u9700\u8981\u5927\u4e8e0\uff1b long keepAliveTime \uff0c\u7ebf\u7a0b\u5b58\u6d3b\u7684\u65f6\u95f4\uff1b TimeUnit unit \uff0c\u65f6\u95f4\u5355\u4f4d\uff0c\u4ece\u7eb3\u79d2\u5230\u5929\uff0c\u975e\u7a7a\uff1b BlockingQueue<Runnable> workQueue \uff0c\u7b49\u5f85\u961f\u5217\uff0c\u975e\u7a7a\uff1b ThreadFactory threadFactory \uff0c\u521b\u5efa\u7ebf\u7a0b\u7684\u5de5\u5382\u65b9\u6cd5\uff0c\u975e\u7a7a\uff1b RejectedExecutionHandler handler \uff0c\u6267\u884c\u62d2\u7edd\u7b56\u7565\u65f6\u7684\u5904\u7406\u5668\uff0c\u975e\u7a7a\u3002","title":"\u521b\u5efa\u7ebf\u7a0b\u6c60\u7684\u6838\u5fc3\u53c2\u6570"},{"location":"pages/java/2-concurrent/02-thread-pool/#_6","text":"corePoolSize \u5411\u7ebf\u7a0b\u6c60\u4e2d\u63d0\u4ea4\u4e00\u4e2a\u7ebf\u7a0b\u65f6\uff0c\u5982\u679c\u7ebf\u7a0b\u6c60\u4e2d\u5df2\u6709\u7ebf\u7a0b\u7684\u6570\u5c0f\u4e8ecorePoolSize\uff0c\u5373\u4f7f\u5b58\u5728\u7a7a\u95f2\u7684\u7ebf\u7a0b\uff0c\u4e5f\u4f1a\u521b\u5efa\u65b0\u7684\u7ebf\u7a0b\uff0c\u521b\u5efa\u65b0\u7684\u7ebf\u7a0b\u4f7f\u7528\u7684\u662fthreadFactory.newThread()\u6765\u521b\u5efa\u3002\u5982\u679c\u7ebf\u7a0b\u6570\u5df2\u7ecf\u8d85\u8fc7corePoolSize\uff0c\u770b\u662f\u5426\u6709\u7a7a\u95f2\u7684\u7ebf\u7a0b\uff0c\u5b58\u5728\u7a7a\u95f2\u7684\u7ebf\u7a0b\uff0c\u5219\u7528\u7a7a\u95f2\u7ebf\u7a0b\u6267\u884c\u4efb\u52a1\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u6839\u636emaximumPoolSize\u6765\u51b3\u5b9a\u662f\u5426\u521b\u5efa\u7ebf\u7a0b\u3002 maximumPoolSize \u63d0\u4ea4\u4efb\u52a1\u65f6\uff0c\u5982\u679c\u7ebf\u7a0b\u6c60\u4e2d\u7ebf\u7a0b\u6570\u91cf\u8d85\u8fc7corePoolSize\uff0c\u4e14\u6ca1\u6709\u7a7a\u95f2\u7684\u7ebf\u7a0b\uff0c\u68c0\u67e5\u7ebf\u7a0b\u6570\u91cf\u662f\u5426\u8d85\u8fc7\u4e86maximumPoolSize\uff0c\u8d85\u8fc7\u4e86\u5219\u4f1a\u6267\u884c\u62d2\u7edd\u7b56\u7565\uff0c\u4ea4\u7531handle\u5904\u7406\uff0c\u6ca1\u8d85\u8fc7\u6700\u5927\u7ebf\u7a0b\u6570\uff0c\u5c06\u7ebf\u7a0b\u653e\u5165\u7b49\u5f85\u961f\u5217\u3002\u5982workQueue\u4e3a\u65e0\u754c\u961f\u5217\uff0c\u8fd9\u4e2a\u53c2\u6570\u4f1a\u88ab\u5ffd\u7565\u3002 workQueue \u7b49\u5f85\u961f\u5217\uff0c\u5de5\u4f5c\u7ebf\u7a0b\u8d85\u8fc7corePoolSize\u540e\uff0c\u4f1a\u88ab\u653e\u5165\u7b49\u5f85\u961f\u5217\u3002 threadFactory \u521b\u5efa\u7ebf\u7a0b\u7684\u5de5\u5382\u65b9\u6cd5\uff0c\u53ef\u4ee5\u6307\u5b9a\u7ebf\u7a0b\u7684\u5206\u7ec4\uff0c\u7ebf\u7a0b\u4f18\u5148\u7ea7\uff0c\u7ebf\u7a0b\u540d\u7b49\u3002 rejectedExecutionHandler \u63d0\u4ea4\u7684\u7ebf\u7a0b\u6570\u91cf\u8d85\u8fc7\u4e86\u6700\u5927\u7ebf\u7a0b\u6570\uff0c\u4ea4\u7ed9rejectedExecutionHandler\u5904\u7406\uff0c\u53c2\u6570\u5305\u62ecRunnable\u548cexecutor\u3002JDK\u4e2d\u9ed8\u8ba4\u5185\u7f6e\u4e864\u79cd\u5904\u7406\u7b56\u7565\uff1a ThreadPoolExecutor.AbortPolicy\uff0c\u62d2\u7edd\u6267\u884c\u4efb\u52a1\uff0c\u5e76\u629b\u51faRejectedExecutionException\u5f02\u5e38\uff1b ThreadPoolExecutor.DiscardPolicy\uff0c\u4e22\u5f03\u4efb\u52a1\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff1b ThreadPoolExecutor.DiscardOldestPolicy\uff0c\u4e22\u5f03\u6392\u961f\u6700\u4e45\u7684\u4efb\u52a1\uff0c\u91cd\u8bd5\u6267\u884c\uff0c\u5982\u679c\u7ebf\u7a0b\u6c60\u5df2\u7ecf\u5173\u95ed\uff0c\u76f4\u63a5\u4e22\u5f03\u4efb\u52a1\uff1b ThreadPoolExecutor.CallerRunsPolicy\uff0c\u7531\u8c03\u7528\u8005\u6240\u5728\u7684\u7ebf\u7a0b\u6267\u884c\u8be5\u4efb\u52a1\uff0c\u5982\u679c\u7ebf\u7a0b\u6c60\u5df2\u7ecf\u5173\u95ed\u4e86\uff0c\u76f4\u63a5\u4e22\u5f03\u4efb\u52a1\uff1b","title":"\u5404\u53c2\u6570\u610f\u4e49"},{"location":"pages/java/2-concurrent/02-thread-pool/#jdk","text":"Excutors\u4e2d\u6709\u51e0\u4e2a\u9759\u6001\u65b9\u6cd5newXXXPool\uff0c\u7528\u6765\u521b\u5efa\u7ebf\u7a0b\u6c60: \u7ebf\u7a0b\u6c60\u65b9\u6cd5 corePoolSize maximumPoolSize workQueue keepAliveTime rejectedExecutionHandler newCachedThreadPool 0 Integer.MAX_VALUE SynchronousQueue 60s AbortPolicy newSingleThreadScheduledExecutor 1 Integer.MAX_VALUE DelayedWorkQueue 10min AbortPolicy newScheduledThreadPool \u53c2\u6570\u4f20\u5165 Integer.MAX_VALUE DelayedWorkQueue 10min AbortPolicy newSingleThreadExecutor 1 1 LinkedBlockingQueue 0min AbortPolicy newFixedThreadPool \u53c2\u6570\u4f20\u5165 \u53c2\u6570\u4f20\u5165 LinkedBlockingQueue 0min AbortPolicy newCachedThreadPool \u8be5\u7ebf\u7a0b\u6c60\u65e0\u9650\u5927\uff0c\u53ea\u8981\u4e0d\u5b58\u5728\u7a7a\u95f2\u7ebf\u7a0b\uff0c\u53ef\u4ee5\u4e00\u76f4\u521b\u5efa\u65b0\u7ebf\u7a0b\u3002 newSingleThreadScheduledExecutor \uff0c\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5468\u671f\u6027\u6267\u884c\u4efb\u52a1\u3002 newScheduledThreadPool \uff0c\u5468\u671f\u6027\u6267\u884c\u4efb\u52a1\uff0c\u6838\u5fc3\u7ebf\u7a0b\u6570\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u6307\u5b9a\u3002 newSingleThreadExecutor \uff0c\u5355\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u6c60\uff0c\u6240\u6709\u4efb\u52a1\u90fd\u662f\u4e32\u884c\u6267\u884c\u3002 newFixedThreadPool \uff0c\u5927\u5c0f\u56fa\u5b9a\uff0c\u5373\u9650\u5b9a\u6700\u5927\u5e76\u53d1\u6570\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u6570\u91cf\uff0c\u4f1a\u6392\u961f\u6267\u884c\u3002 newWorkStealingPool \uff0cJDK 8 \u4e2d\u624d\u52a0\u5165\u7ebf\u7a0b\u6c60\uff0c\u4f7f\u7528ForkJoinPool\uff0c\u5e76\u53d1\u6570\u4e3a\u5904\u7406\u5668\u7684\u6570\u91cf\u3002","title":"JDK\u5e38\u7528\u7684\u7ebf\u7a0b\u6c60"},{"location":"pages/java/2-concurrent/02-thread-pool/#_7","text":"CPU\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u9650\u5236\u7ebf\u7a0b\u7684\u6570\u91cf\uff0c\u4e00\u822c\u8bbe\u7f6e\u4e3aCPU\u7684\u6838\u6570\uff1b IO\u5bc6\u96c6\u578b\uff0c\u7531\u4e8eIO\u7684\u901f\u5ea6\u8fdc\u4f4e\u4e8eCPU\u901f\u5ea6\uff0c\u53ef\u4ee5\u591a\u914d\u7f6e\u7ebf\u7a0b\uff0c\u63d0\u5347CPU\u7684\u5229\u7528\u7387\u3002 \u53c2\u8003 java\u7ebf\u7a0b\u6c60\u4f7f\u7528\u6700\u5168\u8be6\u89e3","title":"\u7ebf\u7a0b\u6c60\u53c2\u6570\u914d\u7f6e\u6700\u4f73\u5b9e\u8df5"},{"location":"pages/java/2-concurrent/03-synchronized/","text":"Synchronized \u57fa\u672c\u4f7f\u7528 \u5bf9\u8c61\u9501 \u4f7f\u7528\u5728\u666e\u901a\u65b9\u6cd5\u4e0a\uff0c\u9501\u7684\u5bf9\u8c61\u65f6\u5f53\u524d\u7684\u5b9e\u4f8b\uff0c\u5373this\u3002 class Instance { public synchronized void foo () { ... } } \u5728\u4ee3\u7801\u5757\u4e2d\u4f7f\u7528\uff0c\u9501\u7684\u5bf9\u8c61\u53ef\u4ee5\u662f\u5f53\u524d\u5b9e\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49\u7684\u5176\u4ed6\u5bf9\u8c61\u3002 class Instance { private Object lock = new Object (); public void foo () { // \u65b9\u5f0f\u4e00 \u4f7f\u7528\u5f53\u524d\u5bf9\u8c61 synchronized ( this ) { ... } // \u65b9\u5f0f\u4e8c \u4f7f\u7528\u81ea\u5b9a\u4e49\u5bf9\u8c61 synchronized ( lock ) { ... } } } \u7c7b\u9501 \u4f7f\u7528\u5728\u9759\u6001\u65b9\u6cd5\u4e0a\u6216\u8005\u9501\u5b9a\u7684\u5bf9\u8c61\u662fClass\u5bf9\u8c61\u3002 class Instance { // \u9501\u5b9a\u9759\u6001\u65b9\u6cd5 public synchronized static void foo () { ... } public void foo1 () { synchronized ( Instance . class ) { ... } } } \u539f\u7406 synchronized\u4f5c\u7528\u5728\u4ee3\u7801\u5757\u4e0a\u548c\u65b9\u6cd5\u4e0a\uff0c\u5e95\u5c42\u7684\u539f\u7406\u4e0d\u4e00\u6837\u3002 \u4f5c\u7528\u5728\u65b9\u6cd5\u4e0a\u65f6\uff0c\u662f\u901a\u8fc7ObjectMonitor\u6765\u5b9e\u73b0\u7684\uff0c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2amonitor\uff0c\u5f53\u4e00\u4e2amonitor\u88ab\u6301\u6709\u540e\uff0c\u5bf9\u8c61\u5373\u5904\u4e8e\u9501\u5b9a\u72b6\u6001\u3002synchronized\u4ee3\u7801\u5757\u4e2d\uff0c\u5728\u5b57\u8282\u7801\u524d\u540e\u5206\u522b\u4f1a\u63d2\u5165\u4e00\u4e2amonitorenter\u548cmonitorexit\u3002 \u5f53\u7ebf\u7a0b\u8fdb\u5165monitorenter\u65f6\uff0c\u4f1a\u5c1d\u8bd5\u83b7\u53d6monitor\u7684\u6240\u6709\u6743\uff0c\u8fc7\u7a0b\u5982\u4e0b\uff1a 1\u3001\u5f53monitor\u7684\u8ba1\u6570\u4e3a0\uff0c\u5219\u5f53\u524d\u7ebf\u7a0b\u8fdb\u5165monitor\uff0c\u540c\u65f6\u8ba1\u6570\u52a01\uff0c\u5373\u8be5\u7ebf\u7a0b\u6301\u6709\u4e86monitor\uff1b 2\u3001\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u5df2\u7ecf\u6301\u6709\u7684monitor\uff0c\u91cd\u65b0\u8fdb\u5165monitor\uff0c\u8ba1\u6570\u4e5f\u52a01\uff1b 3\u3001\u5982\u679c\u5176\u4ed6\u7ebf\u7a0b\u5df2\u7ecf\u6301\u6709\u4e86monitor\uff0c\u5219\u7ebf\u7a0b\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u76f4\u81f3monitor\u7684\u8ba1\u6570\u53d8\u4e3a0\uff0c\u518d\u5c1d\u8bd5\u91cd\u65b0\u83b7\u53d6monitor\u3002 monitorexit\uff1a\u6267\u884cmonitorexit\u7684\u7ebf\u7a0b\u5fc5\u987b\u662f\u6301\u6709monitorenter\u7684\u7ebf\u7a0b\uff0c\u5f53\u8fdb\u5165monitorexit\u65f6\uff0cmonitor\u7684\u8ba1\u6570\u51cf1\uff0c\u5982\u679c\u51cf1\u540e\u53d8\u6210\u4e860\uff0c\u5219\u5f53\u524d\u7ebf\u7a0b\u9000\u51famonitor\uff0c\u5176\u4ed6\u7684\u7ebf\u7a0b\u53ef\u4ee5\u5c1d\u8bd5\u8fdb\u5165monitor\u3002 \u4f5c\u7528\u5728\u65b9\u6cd5\u4e0a\u65f6\uff0c\u5728\u65b9\u6cd5\u5e38\u91cf\u6c60\u4e2d\u4f1a\u6709\u4e00\u4e2aACC_SYNCHRONIZED\uff0c\u8868\u660e\u8be5\u65b9\u6cd5\u662f\u4e00\u4e2a\u540c\u6b65\u65b9\u6cd5\u3002\u5f53JVM\u8c03\u7528\u5230\u8be5\u65b9\u6cd5\u65f6\uff0c\u4f1a\u5148\u5c1d\u8bd5\u83b7\u53d6monitor\uff0c\u83b7\u53d6\u6210\u529f\u4e4b\u540e\u624d\u53ef\u4ee5\u6267\u884c\u8be5\u65b9\u6cd5\uff0c\u6267\u884c\u7ed3\u675f\u4e4b\u540e\u91ca\u653emonitor\u3002\u5728\u540c\u6b65\u65b9\u6cd5\u6267\u884c\u671f\u95f4\uff0c\u5176\u4ed6\u4efb\u4f55\u65b9\u6cd5\u90fd\u65e0\u6cd5\u83b7\u53d6monitor\u3002 JVM\u5bf9synchronized\u7684\u4f18\u5316 \u5728JDK 1.6\u4e4b\u524d\uff0c\u624d\u662f\u76f4\u63a5\u7528ObjectMonitor\u7684enter\u548cexit\uff0c\u8fd9\u662f\u91cd\u91cf\u7ea7\u7684\u9501\uff0c\u7528\u7684\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684MutexLock\uff0c\u9700\u8981\u5c06\u5f53\u524d\u7ebf\u7a0b\u6302\u8d77\uff0c\u64cd\u4f5c\u7cfb\u7edf\u9891\u7e41\u7531\u7528\u6237\u6001\u5207\u6362\u5230\u5185\u6838\u6001\uff0c\u975e\u5e38\u6d88\u8017\u6027\u80fd\u3002 JDK 1.6\u4e2d\u5f15\u5165\u4e86\u9501\u7c97\u5316\u3001\u9501\u6d88\u9664\u3001\u8f7b\u91cf\u7ea7\u9501\u3001\u504f\u5411\u9501\u3001\u9002\u5e94\u6027\u81ea\u65cb\u7b49\u624b\u6bb5\u6765\u51cf\u5c11\u9501\u7684\u5f00\u9500\u3002\u5728JDK 15\u4e2d\uff0c\u504f\u5411\u9501\u53c8\u88ab\u5e9f\u9664\u3002 Java\u7684\u5bf9\u8c61\u5b9e\u4f8b\u4e2d\u5305\u62ec\u5bf9\u8c61\u5934\u3001\u5b9e\u4f8b\u6570\u636e\u3001\u5bf9\u9f50\u586b\u5145\u6570\u636e\uff0c\u5176\u4e2d\u5bf9\u8c61\u5934\u4e2d\u7684Mark Word\u8bb0\u5f55\u4e86\u5bf9\u8c61\u548c\u9501\u76f8\u5173\u7684\u4fe1\u606f \u9501\u7c97\u5316\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684lock\u548cunlock\uff0c\u5c06\u591a\u4e2a\u8fde\u7eed\u7684\u9501\u6269\u5927\u4e00\u4e2a\u66f4\u5927\u7684\u9501 \u9501\u6d88\u9664\uff0c\u7f16\u8bd1\u5668\u5bf9\u9501\u7684\u4f18\u5316\uff0cJIT\u7f16\u8bd1\u5668\u5728\u52a8\u6001\u7f16\u8bd1\u540c\u6b65\u4ee3\u7801\u5757\u65f6\uff0c\u4f7f\u7528\u9003\u9038\u6280\u672f\uff0c\u5224\u65ad\u540c\u6b65\u4ee3\u7801\u5757\u662f\u5426\u53ea\u80fd\u88ab\u540c\u4e00\u4e2a\u5bf9\u8c61\u8bbf\u95ee\uff0c\u5982\u679c\u786e\u8ba4\u6ca1\u6709\u9003\u9038\uff0c\u5219\u4e0d\u4f1a\u751f\u6210\u9501\u7533\u8bf7\u548c\u9501\u91ca\u653e\u7684\u673a\u5668\u7801 \u504f\u5411\u9501\uff0c\u7528\u4e8e\u4f18\u5316\u540c\u4e00\u4e2a\u7ebf\u7a0b\u591a\u6b21\u7533\u8bf7\u540c\u4e00\u4e2a\u9501\uff0c\u4f7f\u7528monitor\u65f6\u4e00\u4e2a\u7ebf\u7a0b\u53cd\u590d\u6301\u6709\u548c\u91ca\u653e\u540c\u4e00\u4e2a\u9501\u4f1a\u9020\u6210\u7528\u6237\u6001\u548c\u5185\u6838\u6001\u53cd\u590d\u5207\u6362\uff0c\u6bd4\u8f83\u8017\u6027\u80fd\u3002\u540c\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u6b65\u4ee3\u7801\u5757\u65f6\uff0c\u7ebf\u7a0b\u53ea\u9700\u8981\u5224\u65adMark Word\u4e2d\u662f\u5426\u6709\u504f\u5411\u9501\u6307\u5411\u81ea\u5df1\uff0c\u5982\u6709\u5219\u4e0d\u8fdb\u5165monitor\u3002\u5f53\u6709\u5176\u5b83\u7ebf\u7a0b\u7ade\u4e89\u9501\u65f6\uff0c\u504f\u5411\u9501\u4f1a\u88ab\u64a4\u9500\uff0c\u65f6\u673a\u5728\u5168\u5c40\u5b89\u5168\u70b9\uff0c\u6b64\u65f6\u4f1a\u6682\u505c\u6301\u6709\u9501\u7684\u7ebf\u7a0b\uff0c\u540c\u65f6\u68c0\u67e5\u8be5\u7ebf\u7a0b\u662f\u5426\u8fd8\u5728\u6267\u884c\u8be5\u65b9\u6cd5\uff0c\u662f\u5219\u5347\u7ea7\u9501\uff0c\u5426\u5219\u5176\u4ed6\u7ebf\u7a0b\u53bb\u62a2\u5360\u9501\u3002 \u9ad8\u5e76\u53d1\u573a\u666f\u4e0b\uff0c\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u7ade\u4e89\u9501\u8d44\u6e90\u65f6\uff0c\u504f\u5411\u9501\u4f1a\u88ab\u64a4\u9500\uff0c\u53d1\u751fGC\u540e\uff0c\u91cd\u65b0\u5f00\u542f\u504f\u5411\u9501\u4f1a\u5e26\u6765\u8f83\u5927\u7684\u6027\u80fd\u5f00\u9500\uff0c\u6240\u4ee5\u5728JDK 15\u4e2d\uff0c\u53d6\u6d88\u4e86\u504f\u5411\u9501\u3002 \u8f7b\u91cf\u7ea7\u9501\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u9501\u8d44\u6e90\u65f6\uff0c\u53d1\u73b0Mark Word\u4e2d\u504f\u5411\u9501\u7684\u7ebf\u7a0bid\u4e0d\u662f\u81ea\u5df1\uff0c\u5219\u4f1a\u5c1d\u8bd5\u7528CAS\u6765\u83b7\u53d6\u9501\uff0c\u83b7\u53d6\u6210\u529f\uff0c\u7ee7\u7eed\u4fdd\u6301\u504f\u5411\u9501\uff0cMark Word\u4e2d\u7684\u7ebf\u7a0bid\u66ff\u6362\u6210\u81ea\u5df1\uff0c\u83b7\u53d6\u5931\u8d25\uff0c\u9501\u7ee7\u7eed\u5347\u7ea7\u3002 \u81ea\u65cb\u9501\uff0c\u8f7b\u91cf\u7ea7\u9501CAS\u5931\u8d25\u540e\uff0c\u7ebf\u7a0b\u4f1a\u88ab\u6302\u8d77\u963b\u585e\uff0c\u82e5\u6301\u6709\u9501\u7684\u7ebf\u7a0b\u5f88\u5feb\u91ca\u653e\u4e86\u9501\uff0c\u521a\u521a\u8fdb\u5165\u963b\u585e\u72b6\u6001\u7684\u7ebf\u7a0b\u4f1a\u91cd\u65b0\u7533\u8bf7\u9501\u8d44\u6e90\uff0c\u8be5\u8fc7\u7a0b\u53ef\u4ee5\u4e00\u76f4\u6301\u7eed\uff0c\u81ea\u65cb\u7684\u6b21\u6570\u53ef\u4ee5\u901a\u8fc7JVM\u7684\u53c2\u6570\u8bbe\u7f6e\uff0cJDK 1.7\u4e4b\u540e\uff0c\u81ea\u65cb\u662f\u9ed8\u8ba4\u5f00\u542f\u7684\uff0c\u4f46\u662f\u81ea\u65cb\u5b57\u6570\u7531JVM\u63a7\u5236\u3002\u5f53\u81ea\u65cb\u91cd\u8bd5\u5931\u8d25\u540e\uff0c\u540c\u6b65\u9501\u4f1a\u5347\u7ea7\u6210\u91cd\u91cf\u7ea7\u9501\uff0c\u672a\u62a2\u5360\u5230\u9501\u7684\u7ebf\u7a0b\uff0c\u90fd\u4f1a\u8fdb\u5165monitor\uff0c\u88ab\u963b\u585e\u5728\u961f\u5217\u4e2d\u3002 JDK 1.6\u4e2dSynchronized\u7684\u9501\u67094\u79cd\u72b6\u6001\uff0c\u65e0\u9501\u3001\u504f\u5411\u9501\u3001\u8f7b\u91cf\u7ea7\u9501\u3001\u91cd\u91cf\u7ea7\u9501\uff0c\u968f\u7740\u7ade\u4e89\u7684\u6fc0\u70c8\u7a0b\u5ea6\uff0c\u9501\u4f1a\u9010\u6e10\u5347\u7ea7\uff0c\u5e76\u4e14\u5347\u7ea7\u540e\u4e0d\u4f1a\u964d\u7ea7\u3002 synchronized\u548cLock\u7684\u533a\u522b synchronized\u7684\u7f3a\u9677 \u6548\u7387\u4f4e\uff0c\u53ea\u6709\u5f53\u4ee3\u7801\u6267\u884c\u7ed3\u675f\u624d\u80fd\u91ca\u653e\u9501\uff0c\u83b7\u53d6\u9501\u7684\u65f6\u5019\u4e5f\u4e0d\u80fd\u8d85\u65f6\uff1b \u4e0d\u591f\u7075\u6d3b\uff0c\u52a0\u9501\u548c\u89e3\u9501\u7684\u65f6\u673a\u548c\u6761\u4ef6\u90fd\u6bd4\u8f83\u5355\u4e00\uff0c\u65e0\u6cd5\u5b9a\u5236\uff1b \u65e0\u6cd5\u77e5\u9053\u662f\u5426\u6210\u529f\u83b7\u53d6\u9501\uff0cLock\u53ef\u4ee5\u6839\u636e\u83b7\u53d6\u9501\u6210\u529f\u548c\u5931\u8d25\u505a\u4e0d\u540c\u7684\u64cd\u4f5c\u3002 synchronized\u548cLock\u7684\u533a\u522b Lock\u662f\u663e\u5f0f\u9501\uff0c\u9700\u8981\u624b\u52a8\u5f00\u542f\u548c\u5173\u95ed\uff0csynchronized\u662f\u9690\u5f0f\u9501\uff0c\u81ea\u52a8\u91ca\u653e\u9501\uff1b Lock\u53ef\u4ee5\u4e2d\u65ad\uff0csynchronized\u53ea\u80fd\u7b49\u4ee3\u7801\u6267\u884c\u5b8c\u4e86\u624d\u53ef\u4ee5\u91ca\u653e\u9501\uff1b \u53d1\u751f\u5f02\u5e38\u65f6\uff0cLock\u4e0d\u4f1a\u4e3b\u52a8\u91ca\u653e\u9501\uff0c\u5fc5\u987b\u624b\u52a8unlock\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u6b7b\u9501\uff0csynchronized\u53d1\u751f\u5f02\u5e38\u65f6\u4f1a\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\uff0c\u4e0d\u4f1a\u6b7b\u9501\uff1b Lock\u53ef\u4ee5\u5224\u65ad\u9501\u7684\u72b6\u6001\uff0csynchronized\u4e0d\u53ef\u4ee5\uff1b Lock\u662f\u53ef\u91cd\u5165\u9501\u3001\u516c\u5e73\u9501\uff0csynchronized\u662f\u53ef\u91cd\u5165\u9501\u3001\u975e\u516c\u5e73\u9501\uff1b Lock\u9002\u7528\u4e8e\u9ad8\u5e76\u53d1\u5927\u91cf\u540c\u6b65\u4ee3\u7801\u5757\u7684\u573a\u666f\uff0csynchronized\u9002\u7528\u4e8e\u5c11\u4e86\u540c\u6b65\u4ee3\u7801\u5757\u7684\u573a\u666f\u3002 \u53c2\u8003 1\u3001 synchhronized 2\u3001 \u7531Java 15\u5e9f\u5f03\u504f\u5411\u9501\uff0c\u8c08\u8c08Java Synchronized \u7684\u9501\u673a\u5236","title":"synchronized"},{"location":"pages/java/2-concurrent/03-synchronized/#synchronized","text":"","title":"Synchronized"},{"location":"pages/java/2-concurrent/03-synchronized/#_1","text":"","title":"\u57fa\u672c\u4f7f\u7528"},{"location":"pages/java/2-concurrent/03-synchronized/#_2","text":"\u4f7f\u7528\u5728\u666e\u901a\u65b9\u6cd5\u4e0a\uff0c\u9501\u7684\u5bf9\u8c61\u65f6\u5f53\u524d\u7684\u5b9e\u4f8b\uff0c\u5373this\u3002 class Instance { public synchronized void foo () { ... } } \u5728\u4ee3\u7801\u5757\u4e2d\u4f7f\u7528\uff0c\u9501\u7684\u5bf9\u8c61\u53ef\u4ee5\u662f\u5f53\u524d\u5b9e\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49\u7684\u5176\u4ed6\u5bf9\u8c61\u3002 class Instance { private Object lock = new Object (); public void foo () { // \u65b9\u5f0f\u4e00 \u4f7f\u7528\u5f53\u524d\u5bf9\u8c61 synchronized ( this ) { ... } // \u65b9\u5f0f\u4e8c \u4f7f\u7528\u81ea\u5b9a\u4e49\u5bf9\u8c61 synchronized ( lock ) { ... } } }","title":"\u5bf9\u8c61\u9501"},{"location":"pages/java/2-concurrent/03-synchronized/#_3","text":"\u4f7f\u7528\u5728\u9759\u6001\u65b9\u6cd5\u4e0a\u6216\u8005\u9501\u5b9a\u7684\u5bf9\u8c61\u662fClass\u5bf9\u8c61\u3002 class Instance { // \u9501\u5b9a\u9759\u6001\u65b9\u6cd5 public synchronized static void foo () { ... } public void foo1 () { synchronized ( Instance . class ) { ... } } }","title":"\u7c7b\u9501"},{"location":"pages/java/2-concurrent/03-synchronized/#_4","text":"synchronized\u4f5c\u7528\u5728\u4ee3\u7801\u5757\u4e0a\u548c\u65b9\u6cd5\u4e0a\uff0c\u5e95\u5c42\u7684\u539f\u7406\u4e0d\u4e00\u6837\u3002 \u4f5c\u7528\u5728\u65b9\u6cd5\u4e0a\u65f6\uff0c\u662f\u901a\u8fc7ObjectMonitor\u6765\u5b9e\u73b0\u7684\uff0c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2amonitor\uff0c\u5f53\u4e00\u4e2amonitor\u88ab\u6301\u6709\u540e\uff0c\u5bf9\u8c61\u5373\u5904\u4e8e\u9501\u5b9a\u72b6\u6001\u3002synchronized\u4ee3\u7801\u5757\u4e2d\uff0c\u5728\u5b57\u8282\u7801\u524d\u540e\u5206\u522b\u4f1a\u63d2\u5165\u4e00\u4e2amonitorenter\u548cmonitorexit\u3002 \u5f53\u7ebf\u7a0b\u8fdb\u5165monitorenter\u65f6\uff0c\u4f1a\u5c1d\u8bd5\u83b7\u53d6monitor\u7684\u6240\u6709\u6743\uff0c\u8fc7\u7a0b\u5982\u4e0b\uff1a 1\u3001\u5f53monitor\u7684\u8ba1\u6570\u4e3a0\uff0c\u5219\u5f53\u524d\u7ebf\u7a0b\u8fdb\u5165monitor\uff0c\u540c\u65f6\u8ba1\u6570\u52a01\uff0c\u5373\u8be5\u7ebf\u7a0b\u6301\u6709\u4e86monitor\uff1b 2\u3001\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u5df2\u7ecf\u6301\u6709\u7684monitor\uff0c\u91cd\u65b0\u8fdb\u5165monitor\uff0c\u8ba1\u6570\u4e5f\u52a01\uff1b 3\u3001\u5982\u679c\u5176\u4ed6\u7ebf\u7a0b\u5df2\u7ecf\u6301\u6709\u4e86monitor\uff0c\u5219\u7ebf\u7a0b\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u76f4\u81f3monitor\u7684\u8ba1\u6570\u53d8\u4e3a0\uff0c\u518d\u5c1d\u8bd5\u91cd\u65b0\u83b7\u53d6monitor\u3002 monitorexit\uff1a\u6267\u884cmonitorexit\u7684\u7ebf\u7a0b\u5fc5\u987b\u662f\u6301\u6709monitorenter\u7684\u7ebf\u7a0b\uff0c\u5f53\u8fdb\u5165monitorexit\u65f6\uff0cmonitor\u7684\u8ba1\u6570\u51cf1\uff0c\u5982\u679c\u51cf1\u540e\u53d8\u6210\u4e860\uff0c\u5219\u5f53\u524d\u7ebf\u7a0b\u9000\u51famonitor\uff0c\u5176\u4ed6\u7684\u7ebf\u7a0b\u53ef\u4ee5\u5c1d\u8bd5\u8fdb\u5165monitor\u3002 \u4f5c\u7528\u5728\u65b9\u6cd5\u4e0a\u65f6\uff0c\u5728\u65b9\u6cd5\u5e38\u91cf\u6c60\u4e2d\u4f1a\u6709\u4e00\u4e2aACC_SYNCHRONIZED\uff0c\u8868\u660e\u8be5\u65b9\u6cd5\u662f\u4e00\u4e2a\u540c\u6b65\u65b9\u6cd5\u3002\u5f53JVM\u8c03\u7528\u5230\u8be5\u65b9\u6cd5\u65f6\uff0c\u4f1a\u5148\u5c1d\u8bd5\u83b7\u53d6monitor\uff0c\u83b7\u53d6\u6210\u529f\u4e4b\u540e\u624d\u53ef\u4ee5\u6267\u884c\u8be5\u65b9\u6cd5\uff0c\u6267\u884c\u7ed3\u675f\u4e4b\u540e\u91ca\u653emonitor\u3002\u5728\u540c\u6b65\u65b9\u6cd5\u6267\u884c\u671f\u95f4\uff0c\u5176\u4ed6\u4efb\u4f55\u65b9\u6cd5\u90fd\u65e0\u6cd5\u83b7\u53d6monitor\u3002","title":"\u539f\u7406"},{"location":"pages/java/2-concurrent/03-synchronized/#jvmsynchronized","text":"\u5728JDK 1.6\u4e4b\u524d\uff0c\u624d\u662f\u76f4\u63a5\u7528ObjectMonitor\u7684enter\u548cexit\uff0c\u8fd9\u662f\u91cd\u91cf\u7ea7\u7684\u9501\uff0c\u7528\u7684\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684MutexLock\uff0c\u9700\u8981\u5c06\u5f53\u524d\u7ebf\u7a0b\u6302\u8d77\uff0c\u64cd\u4f5c\u7cfb\u7edf\u9891\u7e41\u7531\u7528\u6237\u6001\u5207\u6362\u5230\u5185\u6838\u6001\uff0c\u975e\u5e38\u6d88\u8017\u6027\u80fd\u3002 JDK 1.6\u4e2d\u5f15\u5165\u4e86\u9501\u7c97\u5316\u3001\u9501\u6d88\u9664\u3001\u8f7b\u91cf\u7ea7\u9501\u3001\u504f\u5411\u9501\u3001\u9002\u5e94\u6027\u81ea\u65cb\u7b49\u624b\u6bb5\u6765\u51cf\u5c11\u9501\u7684\u5f00\u9500\u3002\u5728JDK 15\u4e2d\uff0c\u504f\u5411\u9501\u53c8\u88ab\u5e9f\u9664\u3002 Java\u7684\u5bf9\u8c61\u5b9e\u4f8b\u4e2d\u5305\u62ec\u5bf9\u8c61\u5934\u3001\u5b9e\u4f8b\u6570\u636e\u3001\u5bf9\u9f50\u586b\u5145\u6570\u636e\uff0c\u5176\u4e2d\u5bf9\u8c61\u5934\u4e2d\u7684Mark Word\u8bb0\u5f55\u4e86\u5bf9\u8c61\u548c\u9501\u76f8\u5173\u7684\u4fe1\u606f \u9501\u7c97\u5316\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684lock\u548cunlock\uff0c\u5c06\u591a\u4e2a\u8fde\u7eed\u7684\u9501\u6269\u5927\u4e00\u4e2a\u66f4\u5927\u7684\u9501 \u9501\u6d88\u9664\uff0c\u7f16\u8bd1\u5668\u5bf9\u9501\u7684\u4f18\u5316\uff0cJIT\u7f16\u8bd1\u5668\u5728\u52a8\u6001\u7f16\u8bd1\u540c\u6b65\u4ee3\u7801\u5757\u65f6\uff0c\u4f7f\u7528\u9003\u9038\u6280\u672f\uff0c\u5224\u65ad\u540c\u6b65\u4ee3\u7801\u5757\u662f\u5426\u53ea\u80fd\u88ab\u540c\u4e00\u4e2a\u5bf9\u8c61\u8bbf\u95ee\uff0c\u5982\u679c\u786e\u8ba4\u6ca1\u6709\u9003\u9038\uff0c\u5219\u4e0d\u4f1a\u751f\u6210\u9501\u7533\u8bf7\u548c\u9501\u91ca\u653e\u7684\u673a\u5668\u7801 \u504f\u5411\u9501\uff0c\u7528\u4e8e\u4f18\u5316\u540c\u4e00\u4e2a\u7ebf\u7a0b\u591a\u6b21\u7533\u8bf7\u540c\u4e00\u4e2a\u9501\uff0c\u4f7f\u7528monitor\u65f6\u4e00\u4e2a\u7ebf\u7a0b\u53cd\u590d\u6301\u6709\u548c\u91ca\u653e\u540c\u4e00\u4e2a\u9501\u4f1a\u9020\u6210\u7528\u6237\u6001\u548c\u5185\u6838\u6001\u53cd\u590d\u5207\u6362\uff0c\u6bd4\u8f83\u8017\u6027\u80fd\u3002\u540c\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u6b65\u4ee3\u7801\u5757\u65f6\uff0c\u7ebf\u7a0b\u53ea\u9700\u8981\u5224\u65adMark Word\u4e2d\u662f\u5426\u6709\u504f\u5411\u9501\u6307\u5411\u81ea\u5df1\uff0c\u5982\u6709\u5219\u4e0d\u8fdb\u5165monitor\u3002\u5f53\u6709\u5176\u5b83\u7ebf\u7a0b\u7ade\u4e89\u9501\u65f6\uff0c\u504f\u5411\u9501\u4f1a\u88ab\u64a4\u9500\uff0c\u65f6\u673a\u5728\u5168\u5c40\u5b89\u5168\u70b9\uff0c\u6b64\u65f6\u4f1a\u6682\u505c\u6301\u6709\u9501\u7684\u7ebf\u7a0b\uff0c\u540c\u65f6\u68c0\u67e5\u8be5\u7ebf\u7a0b\u662f\u5426\u8fd8\u5728\u6267\u884c\u8be5\u65b9\u6cd5\uff0c\u662f\u5219\u5347\u7ea7\u9501\uff0c\u5426\u5219\u5176\u4ed6\u7ebf\u7a0b\u53bb\u62a2\u5360\u9501\u3002 \u9ad8\u5e76\u53d1\u573a\u666f\u4e0b\uff0c\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u7ade\u4e89\u9501\u8d44\u6e90\u65f6\uff0c\u504f\u5411\u9501\u4f1a\u88ab\u64a4\u9500\uff0c\u53d1\u751fGC\u540e\uff0c\u91cd\u65b0\u5f00\u542f\u504f\u5411\u9501\u4f1a\u5e26\u6765\u8f83\u5927\u7684\u6027\u80fd\u5f00\u9500\uff0c\u6240\u4ee5\u5728JDK 15\u4e2d\uff0c\u53d6\u6d88\u4e86\u504f\u5411\u9501\u3002 \u8f7b\u91cf\u7ea7\u9501\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u9501\u8d44\u6e90\u65f6\uff0c\u53d1\u73b0Mark Word\u4e2d\u504f\u5411\u9501\u7684\u7ebf\u7a0bid\u4e0d\u662f\u81ea\u5df1\uff0c\u5219\u4f1a\u5c1d\u8bd5\u7528CAS\u6765\u83b7\u53d6\u9501\uff0c\u83b7\u53d6\u6210\u529f\uff0c\u7ee7\u7eed\u4fdd\u6301\u504f\u5411\u9501\uff0cMark Word\u4e2d\u7684\u7ebf\u7a0bid\u66ff\u6362\u6210\u81ea\u5df1\uff0c\u83b7\u53d6\u5931\u8d25\uff0c\u9501\u7ee7\u7eed\u5347\u7ea7\u3002 \u81ea\u65cb\u9501\uff0c\u8f7b\u91cf\u7ea7\u9501CAS\u5931\u8d25\u540e\uff0c\u7ebf\u7a0b\u4f1a\u88ab\u6302\u8d77\u963b\u585e\uff0c\u82e5\u6301\u6709\u9501\u7684\u7ebf\u7a0b\u5f88\u5feb\u91ca\u653e\u4e86\u9501\uff0c\u521a\u521a\u8fdb\u5165\u963b\u585e\u72b6\u6001\u7684\u7ebf\u7a0b\u4f1a\u91cd\u65b0\u7533\u8bf7\u9501\u8d44\u6e90\uff0c\u8be5\u8fc7\u7a0b\u53ef\u4ee5\u4e00\u76f4\u6301\u7eed\uff0c\u81ea\u65cb\u7684\u6b21\u6570\u53ef\u4ee5\u901a\u8fc7JVM\u7684\u53c2\u6570\u8bbe\u7f6e\uff0cJDK 1.7\u4e4b\u540e\uff0c\u81ea\u65cb\u662f\u9ed8\u8ba4\u5f00\u542f\u7684\uff0c\u4f46\u662f\u81ea\u65cb\u5b57\u6570\u7531JVM\u63a7\u5236\u3002\u5f53\u81ea\u65cb\u91cd\u8bd5\u5931\u8d25\u540e\uff0c\u540c\u6b65\u9501\u4f1a\u5347\u7ea7\u6210\u91cd\u91cf\u7ea7\u9501\uff0c\u672a\u62a2\u5360\u5230\u9501\u7684\u7ebf\u7a0b\uff0c\u90fd\u4f1a\u8fdb\u5165monitor\uff0c\u88ab\u963b\u585e\u5728\u961f\u5217\u4e2d\u3002 JDK 1.6\u4e2dSynchronized\u7684\u9501\u67094\u79cd\u72b6\u6001\uff0c\u65e0\u9501\u3001\u504f\u5411\u9501\u3001\u8f7b\u91cf\u7ea7\u9501\u3001\u91cd\u91cf\u7ea7\u9501\uff0c\u968f\u7740\u7ade\u4e89\u7684\u6fc0\u70c8\u7a0b\u5ea6\uff0c\u9501\u4f1a\u9010\u6e10\u5347\u7ea7\uff0c\u5e76\u4e14\u5347\u7ea7\u540e\u4e0d\u4f1a\u964d\u7ea7\u3002","title":"JVM\u5bf9synchronized\u7684\u4f18\u5316"},{"location":"pages/java/2-concurrent/03-synchronized/#synchronizedlock","text":"synchronized\u7684\u7f3a\u9677 \u6548\u7387\u4f4e\uff0c\u53ea\u6709\u5f53\u4ee3\u7801\u6267\u884c\u7ed3\u675f\u624d\u80fd\u91ca\u653e\u9501\uff0c\u83b7\u53d6\u9501\u7684\u65f6\u5019\u4e5f\u4e0d\u80fd\u8d85\u65f6\uff1b \u4e0d\u591f\u7075\u6d3b\uff0c\u52a0\u9501\u548c\u89e3\u9501\u7684\u65f6\u673a\u548c\u6761\u4ef6\u90fd\u6bd4\u8f83\u5355\u4e00\uff0c\u65e0\u6cd5\u5b9a\u5236\uff1b \u65e0\u6cd5\u77e5\u9053\u662f\u5426\u6210\u529f\u83b7\u53d6\u9501\uff0cLock\u53ef\u4ee5\u6839\u636e\u83b7\u53d6\u9501\u6210\u529f\u548c\u5931\u8d25\u505a\u4e0d\u540c\u7684\u64cd\u4f5c\u3002 synchronized\u548cLock\u7684\u533a\u522b Lock\u662f\u663e\u5f0f\u9501\uff0c\u9700\u8981\u624b\u52a8\u5f00\u542f\u548c\u5173\u95ed\uff0csynchronized\u662f\u9690\u5f0f\u9501\uff0c\u81ea\u52a8\u91ca\u653e\u9501\uff1b Lock\u53ef\u4ee5\u4e2d\u65ad\uff0csynchronized\u53ea\u80fd\u7b49\u4ee3\u7801\u6267\u884c\u5b8c\u4e86\u624d\u53ef\u4ee5\u91ca\u653e\u9501\uff1b \u53d1\u751f\u5f02\u5e38\u65f6\uff0cLock\u4e0d\u4f1a\u4e3b\u52a8\u91ca\u653e\u9501\uff0c\u5fc5\u987b\u624b\u52a8unlock\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u6b7b\u9501\uff0csynchronized\u53d1\u751f\u5f02\u5e38\u65f6\u4f1a\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\uff0c\u4e0d\u4f1a\u6b7b\u9501\uff1b Lock\u53ef\u4ee5\u5224\u65ad\u9501\u7684\u72b6\u6001\uff0csynchronized\u4e0d\u53ef\u4ee5\uff1b Lock\u662f\u53ef\u91cd\u5165\u9501\u3001\u516c\u5e73\u9501\uff0csynchronized\u662f\u53ef\u91cd\u5165\u9501\u3001\u975e\u516c\u5e73\u9501\uff1b Lock\u9002\u7528\u4e8e\u9ad8\u5e76\u53d1\u5927\u91cf\u540c\u6b65\u4ee3\u7801\u5757\u7684\u573a\u666f\uff0csynchronized\u9002\u7528\u4e8e\u5c11\u4e86\u540c\u6b65\u4ee3\u7801\u5757\u7684\u573a\u666f\u3002 \u53c2\u8003 1\u3001 synchhronized 2\u3001 \u7531Java 15\u5e9f\u5f03\u504f\u5411\u9501\uff0c\u8c08\u8c08Java Synchronized \u7684\u9501\u673a\u5236","title":"synchronized\u548cLock\u7684\u533a\u522b"},{"location":"pages/java/2-concurrent/04-volatile/","text":"volatile \u4f5c\u7528 \u4fdd\u8bc1\u53ef\u89c1\u6027\uff0c\u5f53\u53d8\u91cf\u7684\u503c\u5728\u4e00\u4e2a\u7ebf\u7a0b\u66f4\u65b0\u540e\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6709\u53ef\u80fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u5230\u7684\u662f\u66f4\u65b0\u524d\u7684\u503c\uff0cvolatile\u53d8\u91cf\u4fdd\u8bc1\u4e86\u6bcf\u6b21\u4ece\u5185\u5b58\u4e2d\u8bfb\u5230\u7684\u503c\u90fd\u662f\u6700\u65b0\u7684\uff1b \u7981\u6b62\u91cd\u6392\u5e8f\uff0c\u5728\u4e0d\u5f71\u54cd\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u7684\u524d\u63d0\u4e0b\uff0cJVM\u4f1a\u5bf9\u6307\u4ee4\u7684\u91cd\u6392\u5e8f\uff0c\u591a\u7ebf\u7a0b\u60c5\u51b5\u4e0b\u91cd\u6392\u5e8f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5f02\u5e38\u3002volatile\u53d8\u91cf\u53ef\u4ee5\u4fdd\u8bc1\u5199\u64cd\u4f5c\u4e00\u5b9a\u5728\u8bfb\u64cd\u4f5c\u4e4b\u540e\u5b8c\u6210\uff1b \u4fdd\u8bc1\u539f\u5b50\u6027\uff0c32\u4f4d\u673a\u5668\u4e0a\uff0clong\u548cdouble\u7684\u8d4b\u503c\u4e0d\u662f\u539f\u5b50\u7684\uff0c\u4f1a\u52062\u6b65\u5b8c\u6210\uff0cvolatile\u4fdd\u8bc1\u4e86\u8d4b\u503c\u64cd\u4f5c\u7684\u539f\u5b50\u6027\u3002\u4f46\u662f\u5f53\u524d\u5404\u5e73\u53f0\u7684JVM\u90fd\u5df2\u7ecf\u628a64\u4f4d\u6570\u636e\u7684\u8bfb\u5199\u8bbe\u8ba1\u6210\u539f\u5b50\u6027\u64cd\u4f5c\u4e86\uff0c\u4e0d\u52a0volatile\u4e5f\u4e0d\u4f1a\u51fa\u9519\u3002 \u5e94\u7528\u573a\u666f \u591a\u7ebf\u7a0b\u4e0b\u7684\u6807\u5fd7\u4f4d \u53cc\u91cd\u6821\u9a8c\uff0c\u5982\u5355\u4f8b CAS\u65e0\u9501\u540c\u6b65\u7684\u53d8\u91cf\u58f0\u660e \u5b9e\u73b0\u539f\u7406 volatile\u7684\u53ef\u89c1\u6027\u662f\u57fa\u4e8e\u5185\u5b58\u5c4f\u969c(Memory Barrier)\u6765\u5b9e\u73b0\u7684\u3002 \u5185\u5b58\u5c4f\u969c\u662f\u4e00\u4e2aCPU\u6307\u4ee4\u3002\u4e3a\u4e86\u63d0\u5347\u6027\u80fd\uff0c\u7f16\u8bd1\u5668\u548cCPU\u4f1a\u5bf9\u6307\u4ee4\u8fdb\u884c\u91cd\u6392\u5e8f\uff0cJMM\u4e3a\u4e86\u4fdd\u8bc1\u5728\u4e0d\u540c\u7f16\u8bd1\u5668\u548cCPU\u4e0a\u90fd\u6709\u76f8\u540c\u7684\u6267\u884c\u7ed3\u679c\uff0c\u4f1a\u63d2\u5165\u7279\u5b9a\u7684\u5185\u5b58\u5c4f\u969c\u7684\u6307\u4ee4\u6765\u7981\u6b62\u7f16\u8bd1\u5668\u548cCPU\u8fdb\u884c\u8fdb\u884c\u6307\u4ee4\u91cd\u6392\u3002 JVM\u4e2dvolatile\u662f\u901a\u8fc7lock\u6307\u4ee4\u6765\u5b9e\u73b0\u5185\u5b58\u5c4f\u969c\u7684\u3002\u4e3a\u4e86\u63d0\u9ad8\u5904\u7406\u5668\u7684\u901f\u5ea6\uff0c\u5904\u7406\u5668\u5185\u90fd\u5e26\u6709\u9ad8\u901f\u7f13\u5b58\u3002\u5f53\u5bf9volatile\u4fee\u9970\u7684\u53d8\u91cf\u8fdb\u884c\u5199\u64cd\u4f5c\u65f6\uff0c\u4f1a\u751f\u6210\u4e00\u6761\u5e26\u6709lock\u7684\u6307\u4ee4\uff0c\u540c\u65f6\u5c06\u7f13\u5b58\u4e2d\u7684\u503c\u5199\u5165\u4e3b\u5b58\u4e2d\uff0c\u5176\u4ed6CPU\u5728\u603b\u7ebf\u4e0a\u611f\u77e5\u5230\u8fd9\u4e2a\u5199\u64cd\u4f5c\u4e4b\u540e\uff0c\u4f1a\u8ba9\u7f13\u5b58\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u5931\u6548\uff0c\u5f53\u8bfb\u53d6\u5230\u8fd9\u4e2a\u503c\u65f6\uff0c\u53d1\u73b0\u7f13\u5b58\u65e0\u6548\uff0c\u5c31\u4f1a\u5148\u4ece\u4e3b\u5b58\u4e2d\u5148\u8bfb\u51fa\u503c\u653e\u5165\u7f13\u5b58\u4e2d\u3002 volatile\u6709\u5e8f\u6027\u7684\u5b9e\u73b0\u662f\u901a\u8fc7happens-before\u6765\u4fdd\u8bc1\u7684\uff0c\u5bf9\u4e00\u4e2avolatile\u53d8\u91cf\u7684\u5199\uff0chappens-before\u4e8e\u4efb\u610f\u540e\u7eed\u4f1a\u8fd9\u4e2a\u53d8\u91cf\u7684\u8bfb\u3002 \u53c2\u8003 volatile\u8be6\u89e3 \u7406\u89e3Java\u5173\u952e\u5b57volatile","title":"volatile"},{"location":"pages/java/2-concurrent/04-volatile/#volatile","text":"","title":"volatile"},{"location":"pages/java/2-concurrent/04-volatile/#_1","text":"\u4fdd\u8bc1\u53ef\u89c1\u6027\uff0c\u5f53\u53d8\u91cf\u7684\u503c\u5728\u4e00\u4e2a\u7ebf\u7a0b\u66f4\u65b0\u540e\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6709\u53ef\u80fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u5230\u7684\u662f\u66f4\u65b0\u524d\u7684\u503c\uff0cvolatile\u53d8\u91cf\u4fdd\u8bc1\u4e86\u6bcf\u6b21\u4ece\u5185\u5b58\u4e2d\u8bfb\u5230\u7684\u503c\u90fd\u662f\u6700\u65b0\u7684\uff1b \u7981\u6b62\u91cd\u6392\u5e8f\uff0c\u5728\u4e0d\u5f71\u54cd\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u7684\u524d\u63d0\u4e0b\uff0cJVM\u4f1a\u5bf9\u6307\u4ee4\u7684\u91cd\u6392\u5e8f\uff0c\u591a\u7ebf\u7a0b\u60c5\u51b5\u4e0b\u91cd\u6392\u5e8f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5f02\u5e38\u3002volatile\u53d8\u91cf\u53ef\u4ee5\u4fdd\u8bc1\u5199\u64cd\u4f5c\u4e00\u5b9a\u5728\u8bfb\u64cd\u4f5c\u4e4b\u540e\u5b8c\u6210\uff1b \u4fdd\u8bc1\u539f\u5b50\u6027\uff0c32\u4f4d\u673a\u5668\u4e0a\uff0clong\u548cdouble\u7684\u8d4b\u503c\u4e0d\u662f\u539f\u5b50\u7684\uff0c\u4f1a\u52062\u6b65\u5b8c\u6210\uff0cvolatile\u4fdd\u8bc1\u4e86\u8d4b\u503c\u64cd\u4f5c\u7684\u539f\u5b50\u6027\u3002\u4f46\u662f\u5f53\u524d\u5404\u5e73\u53f0\u7684JVM\u90fd\u5df2\u7ecf\u628a64\u4f4d\u6570\u636e\u7684\u8bfb\u5199\u8bbe\u8ba1\u6210\u539f\u5b50\u6027\u64cd\u4f5c\u4e86\uff0c\u4e0d\u52a0volatile\u4e5f\u4e0d\u4f1a\u51fa\u9519\u3002","title":"\u4f5c\u7528"},{"location":"pages/java/2-concurrent/04-volatile/#_2","text":"\u591a\u7ebf\u7a0b\u4e0b\u7684\u6807\u5fd7\u4f4d \u53cc\u91cd\u6821\u9a8c\uff0c\u5982\u5355\u4f8b CAS\u65e0\u9501\u540c\u6b65\u7684\u53d8\u91cf\u58f0\u660e","title":"\u5e94\u7528\u573a\u666f"},{"location":"pages/java/2-concurrent/04-volatile/#_3","text":"volatile\u7684\u53ef\u89c1\u6027\u662f\u57fa\u4e8e\u5185\u5b58\u5c4f\u969c(Memory Barrier)\u6765\u5b9e\u73b0\u7684\u3002 \u5185\u5b58\u5c4f\u969c\u662f\u4e00\u4e2aCPU\u6307\u4ee4\u3002\u4e3a\u4e86\u63d0\u5347\u6027\u80fd\uff0c\u7f16\u8bd1\u5668\u548cCPU\u4f1a\u5bf9\u6307\u4ee4\u8fdb\u884c\u91cd\u6392\u5e8f\uff0cJMM\u4e3a\u4e86\u4fdd\u8bc1\u5728\u4e0d\u540c\u7f16\u8bd1\u5668\u548cCPU\u4e0a\u90fd\u6709\u76f8\u540c\u7684\u6267\u884c\u7ed3\u679c\uff0c\u4f1a\u63d2\u5165\u7279\u5b9a\u7684\u5185\u5b58\u5c4f\u969c\u7684\u6307\u4ee4\u6765\u7981\u6b62\u7f16\u8bd1\u5668\u548cCPU\u8fdb\u884c\u8fdb\u884c\u6307\u4ee4\u91cd\u6392\u3002 JVM\u4e2dvolatile\u662f\u901a\u8fc7lock\u6307\u4ee4\u6765\u5b9e\u73b0\u5185\u5b58\u5c4f\u969c\u7684\u3002\u4e3a\u4e86\u63d0\u9ad8\u5904\u7406\u5668\u7684\u901f\u5ea6\uff0c\u5904\u7406\u5668\u5185\u90fd\u5e26\u6709\u9ad8\u901f\u7f13\u5b58\u3002\u5f53\u5bf9volatile\u4fee\u9970\u7684\u53d8\u91cf\u8fdb\u884c\u5199\u64cd\u4f5c\u65f6\uff0c\u4f1a\u751f\u6210\u4e00\u6761\u5e26\u6709lock\u7684\u6307\u4ee4\uff0c\u540c\u65f6\u5c06\u7f13\u5b58\u4e2d\u7684\u503c\u5199\u5165\u4e3b\u5b58\u4e2d\uff0c\u5176\u4ed6CPU\u5728\u603b\u7ebf\u4e0a\u611f\u77e5\u5230\u8fd9\u4e2a\u5199\u64cd\u4f5c\u4e4b\u540e\uff0c\u4f1a\u8ba9\u7f13\u5b58\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u5931\u6548\uff0c\u5f53\u8bfb\u53d6\u5230\u8fd9\u4e2a\u503c\u65f6\uff0c\u53d1\u73b0\u7f13\u5b58\u65e0\u6548\uff0c\u5c31\u4f1a\u5148\u4ece\u4e3b\u5b58\u4e2d\u5148\u8bfb\u51fa\u503c\u653e\u5165\u7f13\u5b58\u4e2d\u3002 volatile\u6709\u5e8f\u6027\u7684\u5b9e\u73b0\u662f\u901a\u8fc7happens-before\u6765\u4fdd\u8bc1\u7684\uff0c\u5bf9\u4e00\u4e2avolatile\u53d8\u91cf\u7684\u5199\uff0chappens-before\u4e8e\u4efb\u610f\u540e\u7eed\u4f1a\u8fd9\u4e2a\u53d8\u91cf\u7684\u8bfb\u3002","title":"\u5b9e\u73b0\u539f\u7406"},{"location":"pages/java/2-concurrent/04-volatile/#_4","text":"volatile\u8be6\u89e3 \u7406\u89e3Java\u5173\u952e\u5b57volatile","title":"\u53c2\u8003"},{"location":"pages/java/2-concurrent/05-final/","text":"final \u57fa\u7840\u4f7f\u7528 \u4fee\u9970\u7c7b final\u4fee\u9970\u7684\u7c7b\u4e0d\u53ef\u4ee5\u88ab\u7ee7\u627f\u3002final\u7c7b\u4e2d\u6240\u6709\u7684\u65b9\u6cd5\u90fd\u662f\u9690\u5f0ffinal\u7684\uff0c\u56e0\u4e3a\u4e0d\u80fd\u88ab\u7ee7\u627f\uff0c\u56e0\u6b64final\u7c7b\u4e2d\u65b9\u6cd5\u80af\u5b9a\u4e0d\u80fd\u88ab\u590d\u5199\u3002 \u5bf9final\u7c7b\u6269\u5c55\u53ef\u4ee5\u4f7f\u7528\u7ec4\u5408\u7684\u65b9\u5f0f\uff0c\u5982\u5bf9String\u7c7b\u6269\u5c55\uff0c\u589e\u52a0\u4e00\u4e2acopy\u65b9\u6cd5\uff1a public class StringWrapper { final String realString ; // ... // \u4ee3\u7406public\u65b9\u6cd5 public int length () { return realString . length (); } // ... /** * \u6269\u5c55\u7684\u65b9\u6cd5 **/ public String copy () { return new String ( realString ); } } JDK\u4e2d\u5e38\u89c1\u7684final\u7c7b\u6709\uff1a java.lang\u5305\uff0c\u5305\u62ec\u57fa\u672c\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u578b(Integer\u3001Double\u7b49)\u3001String\u7cfb\u5217(String\u3001StringBuffer\u7b49)\u3001\u7cfb\u7edf\u7c7b(System\u3001Class\u7b49)\u3001\u6570\u5b66\u7c7b(Math\u3001StrictMath) java.util\u5305\uff0c\u5305\u62ecUUID\u3001Optional\u3001Scanner\u7b49 java.lang.reflect\u5305\uff0c\u5982Array\u3001Constructor\u3001Field\u7b49 java.time\u5305\uff0cDuration\u3001LocalTime\u7b49 \u4fee\u9970\u65b9\u6cd5 final\u4fee\u9970\u7684\u65b9\u6cd5\u4e0d\u80fd\u88ab\u590d\u5199\uff0c\u4f46\u662f\u53ef\u4ee5\u88ab\u91cd\u8f7d\u3002\u6240\u6709private\u65b9\u6cd5\u90fd\u662f\u9690\u5f0ffinal\u7684\uff0c\u56e0\u4e3aprivate\u65b9\u6cd5\u4e0d\u53ef\u4ee5\u88ab\u91cd\u5199\u3002 \u4fee\u9970\u53d8\u91cf final\u4fee\u9970\u7684\u53d8\u91cf\u4e3a\u4e0d\u53ef\u53d8\u53d8\u91cf\uff0c\u4e00\u65e6\u8d4b\u503c\u4e4b\u540e\uff0c\u4e0d\u53ef\u4ee5\u88ab\u91cd\u65b0\u8d4b\u503c\u3002\u5f15\u7528\u7c7b\u578bfinal\u53d8\u91cf\uff0c\u867d\u7136\u4e0d\u80fd\u5bf9\u53d8\u91cf\u672c\u8eab\u91cd\u65b0\u8d4b\u503c\uff0c\u4f46\u662f\u53ef\u4ee5\u4fee\u6539\u5f15\u7528\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u3002 final\u7c7b\u578b\u6210\u5458\u53d8\u91cf\uff0c\u5fc5\u987b\u5728\u58f0\u660e\u53d8\u91cf\u65f6\u8d4b\u503c\uff0c\u6216\u8005\u5728\u6784\u9020\u65b9\u6cd5\u3001\u6784\u9020\u4ee3\u7801\u5757\u3001\u9759\u6001\u4ee3\u7801\u5757\u4e2d\u8d4b\u503c\u3002 final\u7c7b\u578b\u5c40\u90e8\u53d8\u91cf\uff0c\u5fc5\u987b\u5728\u58f0\u660e\u65f6\u8d4b\u503c\u3002 static final\u7c7b\u578b\u7684\u53d8\u91cf\u53ef\u4ee5\u79f0\u4e3aJava\u4e2d\u7684\u5e38\u91cf\uff0c\u9700\u8981\u5728\u58f0\u660e\u53d8\u91cf\u6216\u9759\u6001\u4ee3\u7801\u5757\u4e2d\u5bf9\u53d8\u91cf\u8d4b\u521d\u59cb\u503c\u3002 \u4fee\u9970\u53c2\u6570 final\u4fee\u9970\u7684\u53c2\u6570\u8868\u660e\u53c2\u6570\u4e0d\u53ef\u4ee5\u88ab\u91cd\u65b0\u8d4b\u503c\u3002 final\u4e0e\u533f\u540d\u5185\u90e8\u7c7b \u5f53\u533f\u540d\u5185\u90e8\u7c7b\u8bbf\u95ee\u5916\u90e8\u5c40\u90e8\u53d8\u91cf\u65f6\uff0c\u5c40\u90e8\u53d8\u91cf\u5fc5\u987b\u88ab\u58f0\u660e\u4e3afinal\u3002Java 8\u4e4b\u540e\u867d\u7136\u4e0d\u7528\u663e\u793a\u58f0\u660e\u4e3afinal\uff0c\u4f46\u5b9e\u9645\u88ab\u533f\u540d\u5185\u90e8\u7c7b\u8bbf\u95ee\u7684\u5c40\u90e8\u53d8\u91cf\u4ecd\u7136\u662ffinal\u7684\u3002 class OuterClass { public void foo () { final int a = 1 ; // \u5fc5\u987b\u58f0\u660e\u4e3afinal\uff0c\u5426\u5219\u4f1a\u7f16\u8bd1\u62a5\u9519 Runnable r = () -> { System . out . println ( \"a=\" + a ); } r . run (); } } \u8fd9\u4e48\u505a\u7684\u539f\u56e0\u662f\uff0c\u533f\u540d\u5185\u90e8\u7c7b\u7684\u751f\u547d\u5468\u671f\u53ef\u80fd\u6bd4\u5916\u90e8\u7c7b\u957f\uff0c\u5f53\u5916\u90e8\u7c7b\u7684\u65b9\u6cd5\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u8c03\u7528\u6808\u88ab\u6e05\u7a7a\uff0c\u5c40\u90e8\u53d8\u91cf\u503c\u88ab\u56de\u6536\uff0c\u5982\u679c\u533f\u540d\u5185\u90e8\u7c7b\u76f4\u63a5\u5f15\u7528\u5916\u90e8\u7c7b\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u6709\u53ef\u80fd\u4f1a\u8bbf\u95ee\u5230\u4e00\u4e2a\u88ab\u56de\u6536\u7684\u53d8\u91cf\u3002 \u56e0\u6b64JVM\u7684\u5b9e\u73b0\u4e2d\uff0c\u5bf9\u4e8e\u88ab\u5f15\u7528\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u7ed9\u533f\u540d\u5185\u90e8\u7c7b\u589e\u52a0\u4e86\u4e00\u4e2a\u6210\u5458\u53d8\u91cf\uff0c\u5c06\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u8d4b\u503c\u7ed9\u533f\u540d\u5185\u90e8\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u4f46\u662f\u5b58\u5728\u6210\u5458\u53d8\u91cf\u88ab\u91cd\u65b0\u8d4b\u503c\u7684\u53ef\u80fd\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5b89\u5168\uff0c\u5f3a\u5236\u7ea6\u5b9a\u88ab\u533f\u540d\u5185\u90e8\u7c7b\u5f15\u7528\u7684\u6210\u5458\u53d8\u91cf\u5fc5\u987b\u58f0\u660e\u4e3afinal\u7c7b\u578b\u3002 \u4e0a\u9762\u7684\u4ee3\u7801\u7b49\u540c\u4e8e\u4e0b\u9762\u7684\u4ee3\u7801\uff1a class OuterClass { public void foo () { final int a = 1 ; Runnable r = new OuterClass$1 ( a ); r . run (); } } class OuterClass$1 implements Runnable { int a ; OuterClass ( int a ) { this . a = a ; } public void run () { System . out . println ( \"a=\" + a ); } } final\u91cd\u6392\u5e8f\u89c4\u5219 final\u7684\u5b9e\u73b0\u539f\u7406 \u53c2\u8003 \u5173\u952e\u5b57: final\u8be6\u89e3","title":"final"},{"location":"pages/java/2-concurrent/05-final/#final","text":"","title":"final"},{"location":"pages/java/2-concurrent/05-final/#_1","text":"\u4fee\u9970\u7c7b final\u4fee\u9970\u7684\u7c7b\u4e0d\u53ef\u4ee5\u88ab\u7ee7\u627f\u3002final\u7c7b\u4e2d\u6240\u6709\u7684\u65b9\u6cd5\u90fd\u662f\u9690\u5f0ffinal\u7684\uff0c\u56e0\u4e3a\u4e0d\u80fd\u88ab\u7ee7\u627f\uff0c\u56e0\u6b64final\u7c7b\u4e2d\u65b9\u6cd5\u80af\u5b9a\u4e0d\u80fd\u88ab\u590d\u5199\u3002 \u5bf9final\u7c7b\u6269\u5c55\u53ef\u4ee5\u4f7f\u7528\u7ec4\u5408\u7684\u65b9\u5f0f\uff0c\u5982\u5bf9String\u7c7b\u6269\u5c55\uff0c\u589e\u52a0\u4e00\u4e2acopy\u65b9\u6cd5\uff1a public class StringWrapper { final String realString ; // ... // \u4ee3\u7406public\u65b9\u6cd5 public int length () { return realString . length (); } // ... /** * \u6269\u5c55\u7684\u65b9\u6cd5 **/ public String copy () { return new String ( realString ); } } JDK\u4e2d\u5e38\u89c1\u7684final\u7c7b\u6709\uff1a java.lang\u5305\uff0c\u5305\u62ec\u57fa\u672c\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u578b(Integer\u3001Double\u7b49)\u3001String\u7cfb\u5217(String\u3001StringBuffer\u7b49)\u3001\u7cfb\u7edf\u7c7b(System\u3001Class\u7b49)\u3001\u6570\u5b66\u7c7b(Math\u3001StrictMath) java.util\u5305\uff0c\u5305\u62ecUUID\u3001Optional\u3001Scanner\u7b49 java.lang.reflect\u5305\uff0c\u5982Array\u3001Constructor\u3001Field\u7b49 java.time\u5305\uff0cDuration\u3001LocalTime\u7b49 \u4fee\u9970\u65b9\u6cd5 final\u4fee\u9970\u7684\u65b9\u6cd5\u4e0d\u80fd\u88ab\u590d\u5199\uff0c\u4f46\u662f\u53ef\u4ee5\u88ab\u91cd\u8f7d\u3002\u6240\u6709private\u65b9\u6cd5\u90fd\u662f\u9690\u5f0ffinal\u7684\uff0c\u56e0\u4e3aprivate\u65b9\u6cd5\u4e0d\u53ef\u4ee5\u88ab\u91cd\u5199\u3002 \u4fee\u9970\u53d8\u91cf final\u4fee\u9970\u7684\u53d8\u91cf\u4e3a\u4e0d\u53ef\u53d8\u53d8\u91cf\uff0c\u4e00\u65e6\u8d4b\u503c\u4e4b\u540e\uff0c\u4e0d\u53ef\u4ee5\u88ab\u91cd\u65b0\u8d4b\u503c\u3002\u5f15\u7528\u7c7b\u578bfinal\u53d8\u91cf\uff0c\u867d\u7136\u4e0d\u80fd\u5bf9\u53d8\u91cf\u672c\u8eab\u91cd\u65b0\u8d4b\u503c\uff0c\u4f46\u662f\u53ef\u4ee5\u4fee\u6539\u5f15\u7528\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u3002 final\u7c7b\u578b\u6210\u5458\u53d8\u91cf\uff0c\u5fc5\u987b\u5728\u58f0\u660e\u53d8\u91cf\u65f6\u8d4b\u503c\uff0c\u6216\u8005\u5728\u6784\u9020\u65b9\u6cd5\u3001\u6784\u9020\u4ee3\u7801\u5757\u3001\u9759\u6001\u4ee3\u7801\u5757\u4e2d\u8d4b\u503c\u3002 final\u7c7b\u578b\u5c40\u90e8\u53d8\u91cf\uff0c\u5fc5\u987b\u5728\u58f0\u660e\u65f6\u8d4b\u503c\u3002 static final\u7c7b\u578b\u7684\u53d8\u91cf\u53ef\u4ee5\u79f0\u4e3aJava\u4e2d\u7684\u5e38\u91cf\uff0c\u9700\u8981\u5728\u58f0\u660e\u53d8\u91cf\u6216\u9759\u6001\u4ee3\u7801\u5757\u4e2d\u5bf9\u53d8\u91cf\u8d4b\u521d\u59cb\u503c\u3002 \u4fee\u9970\u53c2\u6570 final\u4fee\u9970\u7684\u53c2\u6570\u8868\u660e\u53c2\u6570\u4e0d\u53ef\u4ee5\u88ab\u91cd\u65b0\u8d4b\u503c\u3002","title":"\u57fa\u7840\u4f7f\u7528"},{"location":"pages/java/2-concurrent/05-final/#final_1","text":"\u5f53\u533f\u540d\u5185\u90e8\u7c7b\u8bbf\u95ee\u5916\u90e8\u5c40\u90e8\u53d8\u91cf\u65f6\uff0c\u5c40\u90e8\u53d8\u91cf\u5fc5\u987b\u88ab\u58f0\u660e\u4e3afinal\u3002Java 8\u4e4b\u540e\u867d\u7136\u4e0d\u7528\u663e\u793a\u58f0\u660e\u4e3afinal\uff0c\u4f46\u5b9e\u9645\u88ab\u533f\u540d\u5185\u90e8\u7c7b\u8bbf\u95ee\u7684\u5c40\u90e8\u53d8\u91cf\u4ecd\u7136\u662ffinal\u7684\u3002 class OuterClass { public void foo () { final int a = 1 ; // \u5fc5\u987b\u58f0\u660e\u4e3afinal\uff0c\u5426\u5219\u4f1a\u7f16\u8bd1\u62a5\u9519 Runnable r = () -> { System . out . println ( \"a=\" + a ); } r . run (); } } \u8fd9\u4e48\u505a\u7684\u539f\u56e0\u662f\uff0c\u533f\u540d\u5185\u90e8\u7c7b\u7684\u751f\u547d\u5468\u671f\u53ef\u80fd\u6bd4\u5916\u90e8\u7c7b\u957f\uff0c\u5f53\u5916\u90e8\u7c7b\u7684\u65b9\u6cd5\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u8c03\u7528\u6808\u88ab\u6e05\u7a7a\uff0c\u5c40\u90e8\u53d8\u91cf\u503c\u88ab\u56de\u6536\uff0c\u5982\u679c\u533f\u540d\u5185\u90e8\u7c7b\u76f4\u63a5\u5f15\u7528\u5916\u90e8\u7c7b\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u6709\u53ef\u80fd\u4f1a\u8bbf\u95ee\u5230\u4e00\u4e2a\u88ab\u56de\u6536\u7684\u53d8\u91cf\u3002 \u56e0\u6b64JVM\u7684\u5b9e\u73b0\u4e2d\uff0c\u5bf9\u4e8e\u88ab\u5f15\u7528\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u7ed9\u533f\u540d\u5185\u90e8\u7c7b\u589e\u52a0\u4e86\u4e00\u4e2a\u6210\u5458\u53d8\u91cf\uff0c\u5c06\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u8d4b\u503c\u7ed9\u533f\u540d\u5185\u90e8\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u4f46\u662f\u5b58\u5728\u6210\u5458\u53d8\u91cf\u88ab\u91cd\u65b0\u8d4b\u503c\u7684\u53ef\u80fd\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5b89\u5168\uff0c\u5f3a\u5236\u7ea6\u5b9a\u88ab\u533f\u540d\u5185\u90e8\u7c7b\u5f15\u7528\u7684\u6210\u5458\u53d8\u91cf\u5fc5\u987b\u58f0\u660e\u4e3afinal\u7c7b\u578b\u3002 \u4e0a\u9762\u7684\u4ee3\u7801\u7b49\u540c\u4e8e\u4e0b\u9762\u7684\u4ee3\u7801\uff1a class OuterClass { public void foo () { final int a = 1 ; Runnable r = new OuterClass$1 ( a ); r . run (); } } class OuterClass$1 implements Runnable { int a ; OuterClass ( int a ) { this . a = a ; } public void run () { System . out . println ( \"a=\" + a ); } }","title":"final\u4e0e\u533f\u540d\u5185\u90e8\u7c7b"},{"location":"pages/java/2-concurrent/05-final/#final_2","text":"","title":"final\u91cd\u6392\u5e8f\u89c4\u5219"},{"location":"pages/java/2-concurrent/05-final/#final_3","text":"","title":"final\u7684\u5b9e\u73b0\u539f\u7406"},{"location":"pages/java/2-concurrent/05-final/#_2","text":"\u5173\u952e\u5b57: final\u8be6\u89e3","title":"\u53c2\u8003"},{"location":"pages/java/2-concurrent/06-lock/","text":"lock","title":"lock"},{"location":"pages/java/2-concurrent/06-lock/#lock","text":"","title":"lock"},{"location":"pages/java/2-concurrent/07-java-memory-model/","text":"JVM\u5185\u5b58\u6a21\u578b Java\u8fd0\u884c\u65f6\u6570\u636e\u533a Java\u865a\u62df\u673a\u5728\u6267\u884cJava\u7a0b\u5e8f\u7684\u65f6\u5019,\u4f1a\u628a\u5b83\u7ba1\u7406\u7684\u5185\u5b58\u533a\u57df\u5206\u4e3a\u591a\u4e2a\u90e8\u5206\uff0c\u4e3b\u8981\u5206\u4e3a\u7ebf\u7a0b\u79c1\u6709\u533a\u548c\u5171\u4eab\u6570\u636e\u533a\u4e24\u4e2a\u90e8\u5206\u3002 \u65b9\u6cd5\u533a\u548c\u5806\u533a\u5c5e\u4e8e\u5171\u4eab\u6570\u636e\u533a\uff0c\u865a\u62df\u673a\u6808\u3001\u672c\u5730\u65b9\u6cd5\u6808\u548c\u7a0b\u5e8f\u8ba1\u6570\u5668\u5c5e\u4e8e\u7ebf\u7a0b\u79c1\u6709\u533a\u3002 \u65b9\u6cd5\u533a \u5b58\u653e\u88ab\u865a\u62df\u673a\u52a0\u8f7d\u7684\u7c7b\u4fe1\u606f\uff0c\u5e38\u91cf\uff0c\u9759\u6001\u53d8\u91cf\uff0c\u4ee5\u53ca\u7f16\u8bd1\u5668\u7f16\u8bd1\u8fc7\u7684\u4ee3\u7801\u7b49\u6570\u636e\u3002\u4e00\u822c\u6bd4\u8f83\u5c11\u53d1\u751fGC. \u53ef\u4ee5\u8dd1\u51faOOM\u9519\u8bef\u3002 \u8fd0\u884c\u65f6\u5e38\u91cf\u6c60 \u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\u662f\u65b9\u6cd5\u533a\u7684\u4e00\u90e8\u5206\uff0c\u5b58\u653e\u5b57\u9762\u91cf\u548c\u7b26\u53f7\u5f15\u7528\u3002\u9664\u4e86\u7f16\u8bd1\u671f\u751f\u6210\u7684class\u6587\u4ef6\u7684\u5e38\u91cf\uff0c\u8fd0\u884c\u65f6\u4e5f\u53ef\u4ee5\u52a0\u5165\u65b0\u7684\u5e38\u91cf\u3002\u5e38\u91cf\u6c60\u4e0d\u4f1a\u629b\u51faOOM\u9519\u8bef\u3002 Java\u5806 Java\u5806\u662fJava\u865a\u62df\u673a\u7ba1\u7406\u7684\u6700\u5927\u7684\u4e00\u5757\u533a\u57df\uff0c\u5b58\u653e\u7740\u51e0\u4e4e\u6240\u6709\u5bf9\u8c61\u7684\u5b9e\u4f8b\uff0c\u8fd8\u6709\u6570\u7ec4\u6570\u636e\uff0c\u662fGC\u7684\u4e3b\u8981\u533a\u57df\u3002\u8be5\u533a\u57df\u53ef\u4ee5\u629b\u51faOOM\u9519\u8bef\u3002 \u865a\u62df\u673a\u6808 \u751f\u547d\u5468\u671f\u548c\u7ebf\u7a0b\u4e00\u6837\uff0c\u662fJava\u65b9\u6cd5\u6267\u884c\u7684\u5185\u5b58\u6a21\u578b\u3002\u6bcf\u4e00\u4e2a\u65b9\u6cd5\u6267\u884c\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u6808\u5e27\u3002\u4f1a\u629b\u51faOOM\u548cStackOverflowError. \u672c\u5730\u65b9\u6cd5\u6808 \u672c\u5730\u65b9\u6cd5\u6808\u548c\u865a\u62df\u673a\u6808\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5b83\u662fnative\u65b9\u6cd5\u6267\u884c\u7684\u5185\u5b58\u6a21\u578b\u3002 \u7a0b\u5e8f\u8ba1\u6570\u5668 PC\u662f\u5185\u5b58\u4e2d\u8f83\u5c0f\u7684\u4e00\u5757\uff0c\u5b83\u6307\u5411\u4ee3\u7801\u6267\u884c\u7684\u5730\u5740\uff0c\u5982\u679c\u6b63\u5728\u6267\u884c\u7684\u662fJava\u65b9\u6cd5\uff0c\u5219\u5b83\u6307\u5411\u7684\u662f\u5b57\u8282\u7801\u7684\u5730\u5740\uff0c\u6267\u884c\u7684\u662fnative\u65b9\u6cd5\u7684\u65f6\u5019\uff0cPC\u4e3a\u7a7a\u3002 Java\u5185\u5b58\u6a21\u578b \u9700\u8981\u6ce8\u610f\u7684\u662f,Java\u5185\u5b58\u6a21\u578b\u4e0eJVM\u7684\u6570\u636e\u533a\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u6982\u5ff5. \u5b9a\u4e49Java\u5185\u5b58\u6a21\u578b\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u5c4f\u853d\u6389\u786c\u4ef6\u548c\u64cd\u4f5c\u7cfb\u7edf\u8bbf\u95ee\u5185\u5b58\u7684\u5dee\u5f02,\u4f7f\u5f97Java\u7a0b\u5e8f\u80fd\u5728\u4e0d\u540c\u7684\u5e73\u53f0\u4e0a\u90fd\u8868\u73b0\u51fa\u76f8\u540c\u7684\u5e76\u53d1\u6548\u679c,\u907f\u514d\u50cfC/C++\u4e00\u6837,\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\u533a\u57df. \u6240\u4ee5Java\u5185\u5b58\u6a21\u578b\u5b9a\u4e49\u4e86\u7a0b\u5e8f\u4e2d\u53d8\u91cf\u7684\u8bbf\u95ee\u89c4\u5219,\u5373\u865a\u62df\u673a\u662f\u5982\u4f55\u5c06\u53d8\u91cf\u5b58\u5230\u5185\u5b58\u4e2d\u4ee5\u53ca\u5982\u4f55\u4ece\u5185\u5b58\u4e2d\u53d6\u51fa\u6570\u636e. Java\u5185\u5b58\u6a21\u578b\u4e2d\u89c4\u5b9a, Java\u865a\u62df\u673a\u4e2d\u7684\u6240\u6709\u53d8\u91cf\u90fd\u5b58\u50a8\u5728\u4e3b\u5b58\u4e2d, \u4f46\u662f\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u5de5\u4f5c\u5185\u5b58, \u5b58\u6709\u8fd9\u4e9b\u53d8\u91cf\u7684\u526f\u672c, \u4e00\u4e2a\u7ebf\u7a0b\u4e0d\u80fd\u8bbf\u95ee\u5176\u4ed6\u7ebf\u7a0b\u7684\u5de5\u4f5c\u5185\u5b58, \u5f53\u4e00\u4e2a\u7ebf\u7a0b\u9700\u8981\u66f4\u65b0\u53d8\u91cf,\u5148\u66f4\u65b0\u81ea\u5df1\u5de5\u4f5c\u7ebf\u7a0b\u4e2d\u7684\u6570\u636e,\u7136\u540e\u5237\u65b0\u5230\u5230\u4e3b\u5b58\u4e2d. \u53c2\u8003 JVM\u5185\u5b58\u6a21\u578b","title":"JVM\u8fd0\u884c\u65f6\u6570\u636e\u533a\u548cJava\u5185\u5b58\u6a21\u578b"},{"location":"pages/java/2-concurrent/07-java-memory-model/#jvm","text":"","title":"JVM\u5185\u5b58\u6a21\u578b"},{"location":"pages/java/2-concurrent/07-java-memory-model/#java","text":"Java\u865a\u62df\u673a\u5728\u6267\u884cJava\u7a0b\u5e8f\u7684\u65f6\u5019,\u4f1a\u628a\u5b83\u7ba1\u7406\u7684\u5185\u5b58\u533a\u57df\u5206\u4e3a\u591a\u4e2a\u90e8\u5206\uff0c\u4e3b\u8981\u5206\u4e3a\u7ebf\u7a0b\u79c1\u6709\u533a\u548c\u5171\u4eab\u6570\u636e\u533a\u4e24\u4e2a\u90e8\u5206\u3002 \u65b9\u6cd5\u533a\u548c\u5806\u533a\u5c5e\u4e8e\u5171\u4eab\u6570\u636e\u533a\uff0c\u865a\u62df\u673a\u6808\u3001\u672c\u5730\u65b9\u6cd5\u6808\u548c\u7a0b\u5e8f\u8ba1\u6570\u5668\u5c5e\u4e8e\u7ebf\u7a0b\u79c1\u6709\u533a\u3002 \u65b9\u6cd5\u533a \u5b58\u653e\u88ab\u865a\u62df\u673a\u52a0\u8f7d\u7684\u7c7b\u4fe1\u606f\uff0c\u5e38\u91cf\uff0c\u9759\u6001\u53d8\u91cf\uff0c\u4ee5\u53ca\u7f16\u8bd1\u5668\u7f16\u8bd1\u8fc7\u7684\u4ee3\u7801\u7b49\u6570\u636e\u3002\u4e00\u822c\u6bd4\u8f83\u5c11\u53d1\u751fGC. \u53ef\u4ee5\u8dd1\u51faOOM\u9519\u8bef\u3002 \u8fd0\u884c\u65f6\u5e38\u91cf\u6c60 \u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\u662f\u65b9\u6cd5\u533a\u7684\u4e00\u90e8\u5206\uff0c\u5b58\u653e\u5b57\u9762\u91cf\u548c\u7b26\u53f7\u5f15\u7528\u3002\u9664\u4e86\u7f16\u8bd1\u671f\u751f\u6210\u7684class\u6587\u4ef6\u7684\u5e38\u91cf\uff0c\u8fd0\u884c\u65f6\u4e5f\u53ef\u4ee5\u52a0\u5165\u65b0\u7684\u5e38\u91cf\u3002\u5e38\u91cf\u6c60\u4e0d\u4f1a\u629b\u51faOOM\u9519\u8bef\u3002 Java\u5806 Java\u5806\u662fJava\u865a\u62df\u673a\u7ba1\u7406\u7684\u6700\u5927\u7684\u4e00\u5757\u533a\u57df\uff0c\u5b58\u653e\u7740\u51e0\u4e4e\u6240\u6709\u5bf9\u8c61\u7684\u5b9e\u4f8b\uff0c\u8fd8\u6709\u6570\u7ec4\u6570\u636e\uff0c\u662fGC\u7684\u4e3b\u8981\u533a\u57df\u3002\u8be5\u533a\u57df\u53ef\u4ee5\u629b\u51faOOM\u9519\u8bef\u3002 \u865a\u62df\u673a\u6808 \u751f\u547d\u5468\u671f\u548c\u7ebf\u7a0b\u4e00\u6837\uff0c\u662fJava\u65b9\u6cd5\u6267\u884c\u7684\u5185\u5b58\u6a21\u578b\u3002\u6bcf\u4e00\u4e2a\u65b9\u6cd5\u6267\u884c\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u6808\u5e27\u3002\u4f1a\u629b\u51faOOM\u548cStackOverflowError. \u672c\u5730\u65b9\u6cd5\u6808 \u672c\u5730\u65b9\u6cd5\u6808\u548c\u865a\u62df\u673a\u6808\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5b83\u662fnative\u65b9\u6cd5\u6267\u884c\u7684\u5185\u5b58\u6a21\u578b\u3002 \u7a0b\u5e8f\u8ba1\u6570\u5668 PC\u662f\u5185\u5b58\u4e2d\u8f83\u5c0f\u7684\u4e00\u5757\uff0c\u5b83\u6307\u5411\u4ee3\u7801\u6267\u884c\u7684\u5730\u5740\uff0c\u5982\u679c\u6b63\u5728\u6267\u884c\u7684\u662fJava\u65b9\u6cd5\uff0c\u5219\u5b83\u6307\u5411\u7684\u662f\u5b57\u8282\u7801\u7684\u5730\u5740\uff0c\u6267\u884c\u7684\u662fnative\u65b9\u6cd5\u7684\u65f6\u5019\uff0cPC\u4e3a\u7a7a\u3002","title":"Java\u8fd0\u884c\u65f6\u6570\u636e\u533a"},{"location":"pages/java/2-concurrent/07-java-memory-model/#java_1","text":"\u9700\u8981\u6ce8\u610f\u7684\u662f,Java\u5185\u5b58\u6a21\u578b\u4e0eJVM\u7684\u6570\u636e\u533a\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u6982\u5ff5. \u5b9a\u4e49Java\u5185\u5b58\u6a21\u578b\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u5c4f\u853d\u6389\u786c\u4ef6\u548c\u64cd\u4f5c\u7cfb\u7edf\u8bbf\u95ee\u5185\u5b58\u7684\u5dee\u5f02,\u4f7f\u5f97Java\u7a0b\u5e8f\u80fd\u5728\u4e0d\u540c\u7684\u5e73\u53f0\u4e0a\u90fd\u8868\u73b0\u51fa\u76f8\u540c\u7684\u5e76\u53d1\u6548\u679c,\u907f\u514d\u50cfC/C++\u4e00\u6837,\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\u533a\u57df. \u6240\u4ee5Java\u5185\u5b58\u6a21\u578b\u5b9a\u4e49\u4e86\u7a0b\u5e8f\u4e2d\u53d8\u91cf\u7684\u8bbf\u95ee\u89c4\u5219,\u5373\u865a\u62df\u673a\u662f\u5982\u4f55\u5c06\u53d8\u91cf\u5b58\u5230\u5185\u5b58\u4e2d\u4ee5\u53ca\u5982\u4f55\u4ece\u5185\u5b58\u4e2d\u53d6\u51fa\u6570\u636e. Java\u5185\u5b58\u6a21\u578b\u4e2d\u89c4\u5b9a, Java\u865a\u62df\u673a\u4e2d\u7684\u6240\u6709\u53d8\u91cf\u90fd\u5b58\u50a8\u5728\u4e3b\u5b58\u4e2d, \u4f46\u662f\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u5de5\u4f5c\u5185\u5b58, \u5b58\u6709\u8fd9\u4e9b\u53d8\u91cf\u7684\u526f\u672c, \u4e00\u4e2a\u7ebf\u7a0b\u4e0d\u80fd\u8bbf\u95ee\u5176\u4ed6\u7ebf\u7a0b\u7684\u5de5\u4f5c\u5185\u5b58, \u5f53\u4e00\u4e2a\u7ebf\u7a0b\u9700\u8981\u66f4\u65b0\u53d8\u91cf,\u5148\u66f4\u65b0\u81ea\u5df1\u5de5\u4f5c\u7ebf\u7a0b\u4e2d\u7684\u6570\u636e,\u7136\u540e\u5237\u65b0\u5230\u5230\u4e3b\u5b58\u4e2d.","title":"Java\u5185\u5b58\u6a21\u578b"},{"location":"pages/java/2-concurrent/07-java-memory-model/#_1","text":"JVM\u5185\u5b58\u6a21\u578b","title":"\u53c2\u8003"},{"location":"pages/java/2-concurrent/08-thread-local/","text":"ThreadLocal ThreadLocal\u53ef\u4ee5\u521b\u5efa\u7ebf\u7a0b\u79c1\u6709\u7684\u53d8\u91cf\uff0c\u5728\u7ebf\u7a0b\u5916\u58f0\u660e\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u4fee\u6539\u503c\u53ea\u5728\u672c\u7ebf\u7a0b\u5185\u8d77\u4f5c\u7528\uff0c\u4e0d\u4f1a\u88ab\u5176\u4ed6\u7ebf\u7a0b\u4fee\u6539\u3002 \u539f\u7406 \u5728\u6bcf\u4e2aThread\u4e2d\uff0c\u90fd\u6709\u4e00\u4e2aThreadLocalMap\uff0c\u5728\u7ebf\u7a0b\u4e2d\u7ed9\u6bcf\u4e2aThreadLocal\u8d4b\u503c\u65f6\uff0c\u90fd\u4f1a\u4ee5ThreadLocal\u4e3akey\uff0c\u5c06\u503c\u5b58\u5165\u5230ThreadLocalMap\u4e2d\uff0c\u8fd9\u6837\u5728\u6bcf\u4e2a\u7ebf\u7a0b\u4e2d\u53d6\u503c\u548c\u8d4b\u503c\u65f6\uff0c\u53d6\u51fa\u7684\u548c\u4fee\u6539\u7684\u90fd\u662f\u5f53\u524d\u7ebf\u7a0b\u7684ThreadLocalMap\u7684\u503c\uff0c\u8fd9\u6837\u5c31\u786e\u4fdd\u4e86\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u7ebf\u7a0b\u4e2d\u7684\u503c\u3002 InheritableThreadLocal \u53ef\u7ee7\u627f\u7684ThreadLocal\u503c\uff0c\u5728\u65b0\u5efa\u5b50\u7ebf\u7a0b\u65f6\uff0cInheritableThreadLocal\u7684\u503c\u4f1a\u88ab\u4f20\u9012\u7ed9\u5b50\u7ebf\u7a0b\uff0c\u4e4b\u540e\u4e24\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5404\u81ea\u72ec\u7acb\u4fee\u6539\u503c\u3002\u539f\u56e0\u662f\uff0c\u5728\u7ebf\u7a0b\u5b9e\u4f8b\u5316\u65f6\uff0c\u4f1a\u68c0\u67e5\u5f53\u524d\u7236\u7ebf\u7a0b\u7684InheritableThreadLocal\u503c\uff0c\u4f1a\u4ee5\u5b83\u6765\u6784\u9020\u5b50\u7ebf\u7a0b\u7684InheritableThreadLocal\u3002 \u5185\u5b58\u6cc4\u6f0f Thread\u4e2d\u4fdd\u5b58ThreadLocal\u503c\uff0ckey\u4f7f\u7528\u7684\u662f\u5f31\u5f15\u7528\uff0c\u5982\u679cThreadLocal\u88ab\u56de\u6536\u4e86\uff0c\u4f46\u662f\u7ebf\u7a0b\u8fd8\u5b58\u6d3b\uff0c\u6bd4\u5982\u4f7f\u7528\u7ebf\u7a0b\u6c60\u7684\u65f6\u5019\uff0cThreadLocalMap\u7684key\u5c31\u4f1a\u6709\u7a7a\u503c\uff0c\u5982\u679c\u4e00\u76f4\u5b58\u5728\u5c31\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002 ThreadLocal\u7684get(), set(), remove()\u65b9\u6cd5\u90fd\u4f1a\u6e05\u7a7akey\u4e3anull\u7684\u503c\uff0c\u4f46\u662f\u5982\u679c\u5206\u914d\u7684ThreadLocal\u662f\u9759\u6001\u7684\uff0c\u6216\u8005ThreadLocal\u5206\u914d\u4e86\u503c\uff0c\u53c8\u6ca1\u8c03\u7528get()\u7b49\u65b9\u6cd5\uff0c\u5c31\u4f1a\u9020\u6210\u6cc4\u6f0f\u3002 \u53c2\u8003 \u6df1\u5165\u7406\u89e3ThreadLocal \u6df1\u5165\u5206\u6790 ThreadLocal \u5185\u5b58\u6cc4\u6f0f\u95ee\u9898","title":"ThreadLocal"},{"location":"pages/java/2-concurrent/08-thread-local/#threadlocal","text":"ThreadLocal\u53ef\u4ee5\u521b\u5efa\u7ebf\u7a0b\u79c1\u6709\u7684\u53d8\u91cf\uff0c\u5728\u7ebf\u7a0b\u5916\u58f0\u660e\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u4fee\u6539\u503c\u53ea\u5728\u672c\u7ebf\u7a0b\u5185\u8d77\u4f5c\u7528\uff0c\u4e0d\u4f1a\u88ab\u5176\u4ed6\u7ebf\u7a0b\u4fee\u6539\u3002","title":"ThreadLocal"},{"location":"pages/java/2-concurrent/08-thread-local/#_1","text":"\u5728\u6bcf\u4e2aThread\u4e2d\uff0c\u90fd\u6709\u4e00\u4e2aThreadLocalMap\uff0c\u5728\u7ebf\u7a0b\u4e2d\u7ed9\u6bcf\u4e2aThreadLocal\u8d4b\u503c\u65f6\uff0c\u90fd\u4f1a\u4ee5ThreadLocal\u4e3akey\uff0c\u5c06\u503c\u5b58\u5165\u5230ThreadLocalMap\u4e2d\uff0c\u8fd9\u6837\u5728\u6bcf\u4e2a\u7ebf\u7a0b\u4e2d\u53d6\u503c\u548c\u8d4b\u503c\u65f6\uff0c\u53d6\u51fa\u7684\u548c\u4fee\u6539\u7684\u90fd\u662f\u5f53\u524d\u7ebf\u7a0b\u7684ThreadLocalMap\u7684\u503c\uff0c\u8fd9\u6837\u5c31\u786e\u4fdd\u4e86\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u7ebf\u7a0b\u4e2d\u7684\u503c\u3002","title":"\u539f\u7406"},{"location":"pages/java/2-concurrent/08-thread-local/#inheritablethreadlocal","text":"\u53ef\u7ee7\u627f\u7684ThreadLocal\u503c\uff0c\u5728\u65b0\u5efa\u5b50\u7ebf\u7a0b\u65f6\uff0cInheritableThreadLocal\u7684\u503c\u4f1a\u88ab\u4f20\u9012\u7ed9\u5b50\u7ebf\u7a0b\uff0c\u4e4b\u540e\u4e24\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5404\u81ea\u72ec\u7acb\u4fee\u6539\u503c\u3002\u539f\u56e0\u662f\uff0c\u5728\u7ebf\u7a0b\u5b9e\u4f8b\u5316\u65f6\uff0c\u4f1a\u68c0\u67e5\u5f53\u524d\u7236\u7ebf\u7a0b\u7684InheritableThreadLocal\u503c\uff0c\u4f1a\u4ee5\u5b83\u6765\u6784\u9020\u5b50\u7ebf\u7a0b\u7684InheritableThreadLocal\u3002","title":"InheritableThreadLocal"},{"location":"pages/java/2-concurrent/08-thread-local/#_2","text":"Thread\u4e2d\u4fdd\u5b58ThreadLocal\u503c\uff0ckey\u4f7f\u7528\u7684\u662f\u5f31\u5f15\u7528\uff0c\u5982\u679cThreadLocal\u88ab\u56de\u6536\u4e86\uff0c\u4f46\u662f\u7ebf\u7a0b\u8fd8\u5b58\u6d3b\uff0c\u6bd4\u5982\u4f7f\u7528\u7ebf\u7a0b\u6c60\u7684\u65f6\u5019\uff0cThreadLocalMap\u7684key\u5c31\u4f1a\u6709\u7a7a\u503c\uff0c\u5982\u679c\u4e00\u76f4\u5b58\u5728\u5c31\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002 ThreadLocal\u7684get(), set(), remove()\u65b9\u6cd5\u90fd\u4f1a\u6e05\u7a7akey\u4e3anull\u7684\u503c\uff0c\u4f46\u662f\u5982\u679c\u5206\u914d\u7684ThreadLocal\u662f\u9759\u6001\u7684\uff0c\u6216\u8005ThreadLocal\u5206\u914d\u4e86\u503c\uff0c\u53c8\u6ca1\u8c03\u7528get()\u7b49\u65b9\u6cd5\uff0c\u5c31\u4f1a\u9020\u6210\u6cc4\u6f0f\u3002","title":"\u5185\u5b58\u6cc4\u6f0f"},{"location":"pages/java/2-concurrent/08-thread-local/#_3","text":"\u6df1\u5165\u7406\u89e3ThreadLocal \u6df1\u5165\u5206\u6790 ThreadLocal \u5185\u5b58\u6cc4\u6f0f\u95ee\u9898","title":"\u53c2\u8003"},{"location":"pages/java/6-design-pattern/00-design-pattern/","text":"\u8bbe\u8ba1\u6a21\u5f0f \u5e38\u89c1\u7684\u8bbe\u8ba1\u6a21\u5f0f\u4e00\u5171\u670923\u79cd\uff0c\u5927\u81f4\u5206\u4e3a\u6784\u5efa\u578b\u6a21\u5f0f\u548c\u7ed3\u6784\u6027\u6a21\u5f0f\u3002 \u521b\u5efa\u578b\u6a21\u5f0f\uff08Creational Pattern\uff09 \u5bf9\u7c7b\u7684\u5b9e\u4f8b\u5316\u8fc7\u7a0b\u8fdb\u884c\u4e86\u62bd\u8c61\uff0c\u80fd\u591f\u5c06\u8f6f\u4ef6\u6a21\u5757\u4e2d\u5bf9\u8c61\u7684\u521b\u5efa\u548c\u5bf9\u8c61\u7684\u4f7f\u7528\u5206\u79bb\u3002 \uff085\u79cd\uff09\u5de5\u5382\u6a21\u5f0f\u3001\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u3001\u5355\u4f8b\u6a21\u5f0f\u3001\u5efa\u9020\u8005\u6a21\u5f0f\u3001\u539f\u578b\u6a21\u5f0f \u7ed3\u6784\u578b\u6a21\u5f0f\uff08Structural Pattern\uff09 \u5173\u6ce8\u4e8e\u5bf9\u8c61\u7684\u7ec4\u6210\u4ee5\u53ca\u5bf9\u8c61\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u63cf\u8ff0\u5982\u4f55\u5c06\u7c7b\u6216\u8005\u5bf9\u8c61\u7ed3\u5408\u5728\u4e00\u8d77\u5f62\u6210\u66f4\u5927\u7684\u7ed3\u6784\uff0c\u5c31\u50cf\u642d\u79ef\u6728\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u79ef\u6728\u7684\u7ec4\u5408\u5f62\u6210\u590d\u6742\u7684\u3001\u529f\u80fd\u66f4\u4e3a\u5f3a\u5927\u7684\u7ed3\u6784\u3002 \uff087\u79cd\uff09\u9002\u914d\u5668\u6a21\u5f0f\u3001\u88c5\u9970\u8005\u6a21\u5f0f\u3001\u4ee3\u7406\u6a21\u5f0f\u3001\u5916\u89c2\u6a21\u5f0f\u3001\u6865\u63a5\u6a21\u5f0f\u3001\u7ec4\u5408\u6a21\u5f0f\u3001\u4eab\u5143\u6a21\u5f0f \u884c\u4e3a\u578b\u6a21\u5f0f\uff08Behavioral Pattern\uff09 \u5173\u6ce8\u4e8e\u5bf9\u8c61\u7684\u884c\u4e3a\u95ee\u9898\uff0c\u662f\u5bf9\u5728\u4e0d\u540c\u7684\u5bf9\u8c61\u4e4b\u95f4\u5212\u5206\u8d23\u4efb\u548c\u7b97\u6cd5\u7684\u62bd\u8c61\u5316\uff1b\u4e0d\u4ec5\u4ec5\u5173\u6ce8\u7c7b\u548c\u5bf9\u8c61\u7684\u7ed3\u6784\uff0c\u800c\u4e14\u91cd\u70b9\u5173\u6ce8\u5b83\u4eec\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u3002 \uff0811\u79cd\uff09\u7b56\u7565\u6a21\u5f0f\u3001\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u3001\u89c2\u5bdf\u8005\u6a21\u5f0f\u3001\u8fed\u4ee3\u5668\u6a21\u5f0f\u3001\u8d23\u4efb\u94fe\u6a21\u5f0f\u3001\u547d\u4ee4\u6a21\u5f0f\u3001\u5907\u5fd8\u5f55\u6a21\u5f0f\u3001\u72b6\u6001\u6a21\u5f0f\u3001\u8bbf\u95ee\u8005\u6a21\u5f0f\u3001\u4e2d\u4ecb\u8005\u6a21\u5f0f\u3001\u89e3\u91ca\u5668\u6a21\u5f0f","title":"\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/00-design-pattern/#_1","text":"\u5e38\u89c1\u7684\u8bbe\u8ba1\u6a21\u5f0f\u4e00\u5171\u670923\u79cd\uff0c\u5927\u81f4\u5206\u4e3a\u6784\u5efa\u578b\u6a21\u5f0f\u548c\u7ed3\u6784\u6027\u6a21\u5f0f\u3002 \u521b\u5efa\u578b\u6a21\u5f0f\uff08Creational Pattern\uff09 \u5bf9\u7c7b\u7684\u5b9e\u4f8b\u5316\u8fc7\u7a0b\u8fdb\u884c\u4e86\u62bd\u8c61\uff0c\u80fd\u591f\u5c06\u8f6f\u4ef6\u6a21\u5757\u4e2d\u5bf9\u8c61\u7684\u521b\u5efa\u548c\u5bf9\u8c61\u7684\u4f7f\u7528\u5206\u79bb\u3002 \uff085\u79cd\uff09\u5de5\u5382\u6a21\u5f0f\u3001\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u3001\u5355\u4f8b\u6a21\u5f0f\u3001\u5efa\u9020\u8005\u6a21\u5f0f\u3001\u539f\u578b\u6a21\u5f0f \u7ed3\u6784\u578b\u6a21\u5f0f\uff08Structural Pattern\uff09 \u5173\u6ce8\u4e8e\u5bf9\u8c61\u7684\u7ec4\u6210\u4ee5\u53ca\u5bf9\u8c61\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u63cf\u8ff0\u5982\u4f55\u5c06\u7c7b\u6216\u8005\u5bf9\u8c61\u7ed3\u5408\u5728\u4e00\u8d77\u5f62\u6210\u66f4\u5927\u7684\u7ed3\u6784\uff0c\u5c31\u50cf\u642d\u79ef\u6728\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u79ef\u6728\u7684\u7ec4\u5408\u5f62\u6210\u590d\u6742\u7684\u3001\u529f\u80fd\u66f4\u4e3a\u5f3a\u5927\u7684\u7ed3\u6784\u3002 \uff087\u79cd\uff09\u9002\u914d\u5668\u6a21\u5f0f\u3001\u88c5\u9970\u8005\u6a21\u5f0f\u3001\u4ee3\u7406\u6a21\u5f0f\u3001\u5916\u89c2\u6a21\u5f0f\u3001\u6865\u63a5\u6a21\u5f0f\u3001\u7ec4\u5408\u6a21\u5f0f\u3001\u4eab\u5143\u6a21\u5f0f \u884c\u4e3a\u578b\u6a21\u5f0f\uff08Behavioral Pattern\uff09 \u5173\u6ce8\u4e8e\u5bf9\u8c61\u7684\u884c\u4e3a\u95ee\u9898\uff0c\u662f\u5bf9\u5728\u4e0d\u540c\u7684\u5bf9\u8c61\u4e4b\u95f4\u5212\u5206\u8d23\u4efb\u548c\u7b97\u6cd5\u7684\u62bd\u8c61\u5316\uff1b\u4e0d\u4ec5\u4ec5\u5173\u6ce8\u7c7b\u548c\u5bf9\u8c61\u7684\u7ed3\u6784\uff0c\u800c\u4e14\u91cd\u70b9\u5173\u6ce8\u5b83\u4eec\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u3002 \uff0811\u79cd\uff09\u7b56\u7565\u6a21\u5f0f\u3001\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u3001\u89c2\u5bdf\u8005\u6a21\u5f0f\u3001\u8fed\u4ee3\u5668\u6a21\u5f0f\u3001\u8d23\u4efb\u94fe\u6a21\u5f0f\u3001\u547d\u4ee4\u6a21\u5f0f\u3001\u5907\u5fd8\u5f55\u6a21\u5f0f\u3001\u72b6\u6001\u6a21\u5f0f\u3001\u8bbf\u95ee\u8005\u6a21\u5f0f\u3001\u4e2d\u4ecb\u8005\u6a21\u5f0f\u3001\u89e3\u91ca\u5668\u6a21\u5f0f","title":"\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/01-creational-pattern/","text":"\u6784\u5efa\u578b\u6a21\u5f0f \u5355\u4f8b\u6a21\u5f0f \u53cc\u91cd\u6821\u9a8c \u6700\u5e38\u89c1\u7684\u5199\u6cd5\uff1b class Singleton { private static volatile Singleton instance ; private Singleton (){} public static Singleton getInstance () { if ( instance == null ) { synchronized ( Singleton . class ) { instance = new Singleton (); } } return instance ; } } \u997f\u6c49\u673a\u5236 \u6bd4\u8f83\u5c11\u7528\uff0c\u5728\u7c7b\u52a0\u8f7d\u7684\u65f6\u5019\uff0c\u5c31\u5df2\u7ecf\u5b9e\u4f8b\u5316\u4e86\uff1b class Singleton { private static final Singleton instance = new Singleton (); private Singleton (){} public static Instance getInstance () { return instance ; } } \u61d2\u6c49\u6a21\u5f0f \u53ea\u8981InstanceHolder\u6ca1\u6709\u88ab\u4e3b\u52a8\u4f7f\u7528\u8fc7\uff0c\u5c31\u4e0d\u4f1a\u88ab\u52a0\u8f7d\uff0c\u5b9e\u9645\u4e0a\u4e5f\u662f\u76f8\u5f53\u4e8e\u61d2\u52a0\u8f7d\u7684\u3002 class Singleton { private static Singleton instance ; public static Singleton getInstance () { return InstanceHolder . INSTANCE ; } private static class InstanceHolder { private static final Singleton INSTANCE = new Singleton (); } } \u4f7f\u7528\u679a\u4e3e \u679a\u4e3e\u672c\u8eab\u5c31\u662f\u5355\u4f8b\u7684\u3002\u679a\u4e3e\u7c7b\u662f\u5728\u7b2c\u4e00\u6b21\u8bbf\u95ee\u65f6\u624d\u88ab\u5b9e\u4f8b\u5316\uff0c\u662f\u61d2\u52a0\u8f7d\u7684 class enum Singleton { INSTANCE ; } \u539f\u578b\u6a21\u5f0f \u5de5\u5382\u6a21\u5f0f \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f \u5efa\u9020\u8005\u6a21\u5f0f \u53c2\u8003 \u90a3\u4e9b\u5e74\uff0c\u6211\u4eec\u4e00\u8d77\u5199\u8fc7\u7684\u201c\u5355\u4f8b\u6a21\u5f0f\u201d","title":"\u6784\u5efa\u578b\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/01-creational-pattern/#_1","text":"","title":"\u6784\u5efa\u578b\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/01-creational-pattern/#_2","text":"","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/01-creational-pattern/#_3","text":"\u6700\u5e38\u89c1\u7684\u5199\u6cd5\uff1b class Singleton { private static volatile Singleton instance ; private Singleton (){} public static Singleton getInstance () { if ( instance == null ) { synchronized ( Singleton . class ) { instance = new Singleton (); } } return instance ; } }","title":"\u53cc\u91cd\u6821\u9a8c"},{"location":"pages/java/6-design-pattern/01-creational-pattern/#_4","text":"\u6bd4\u8f83\u5c11\u7528\uff0c\u5728\u7c7b\u52a0\u8f7d\u7684\u65f6\u5019\uff0c\u5c31\u5df2\u7ecf\u5b9e\u4f8b\u5316\u4e86\uff1b class Singleton { private static final Singleton instance = new Singleton (); private Singleton (){} public static Instance getInstance () { return instance ; } }","title":"\u997f\u6c49\u673a\u5236"},{"location":"pages/java/6-design-pattern/01-creational-pattern/#_5","text":"\u53ea\u8981InstanceHolder\u6ca1\u6709\u88ab\u4e3b\u52a8\u4f7f\u7528\u8fc7\uff0c\u5c31\u4e0d\u4f1a\u88ab\u52a0\u8f7d\uff0c\u5b9e\u9645\u4e0a\u4e5f\u662f\u76f8\u5f53\u4e8e\u61d2\u52a0\u8f7d\u7684\u3002 class Singleton { private static Singleton instance ; public static Singleton getInstance () { return InstanceHolder . INSTANCE ; } private static class InstanceHolder { private static final Singleton INSTANCE = new Singleton (); } }","title":"\u61d2\u6c49\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/01-creational-pattern/#_6","text":"\u679a\u4e3e\u672c\u8eab\u5c31\u662f\u5355\u4f8b\u7684\u3002\u679a\u4e3e\u7c7b\u662f\u5728\u7b2c\u4e00\u6b21\u8bbf\u95ee\u65f6\u624d\u88ab\u5b9e\u4f8b\u5316\uff0c\u662f\u61d2\u52a0\u8f7d\u7684 class enum Singleton { INSTANCE ; }","title":"\u4f7f\u7528\u679a\u4e3e"},{"location":"pages/java/6-design-pattern/01-creational-pattern/#_7","text":"","title":"\u539f\u578b\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/01-creational-pattern/#_8","text":"","title":"\u5de5\u5382\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/01-creational-pattern/#_9","text":"","title":"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/01-creational-pattern/#_10","text":"\u53c2\u8003 \u90a3\u4e9b\u5e74\uff0c\u6211\u4eec\u4e00\u8d77\u5199\u8fc7\u7684\u201c\u5355\u4f8b\u6a21\u5f0f\u201d","title":"\u5efa\u9020\u8005\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/02-structural-pattern/","text":"\u7ed3\u6784\u578b\u6a21\u5f0f \u9002\u914d\u5668\u6a21\u5f0f \u6865\u63a5\u6a21\u5f0f \u88c5\u9970\u6a21\u5f0f \u7ec4\u5408\u6a21\u5f0f \u5916\u89c2\u6a21\u5f0f \u4eab\u5143\u6a21\u5f0f \u4ee3\u7406\u6a21\u5f0f","title":"\u7ed3\u6784\u578b\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/02-structural-pattern/#_1","text":"","title":"\u7ed3\u6784\u578b\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/02-structural-pattern/#_2","text":"","title":"\u9002\u914d\u5668\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/02-structural-pattern/#_3","text":"","title":"\u6865\u63a5\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/02-structural-pattern/#_4","text":"","title":"\u88c5\u9970\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/02-structural-pattern/#_5","text":"","title":"\u7ec4\u5408\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/02-structural-pattern/#_6","text":"","title":"\u5916\u89c2\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/02-structural-pattern/#_7","text":"","title":"\u4eab\u5143\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/02-structural-pattern/#_8","text":"","title":"\u4ee3\u7406\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/03-behavioral-pattern/","text":"\u884c\u4e3a\u578b \u8d23\u4efb\u94fe\u6a21\u5f0f \u7b56\u7565\u6a21\u5f0f \u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f \u89c2\u5bdf\u8005\u6a21\u5f0f \u8fed\u4ee3\u5668\u6a21\u5f0f \u547d\u4ee4\u6a21\u5f0f \u5907\u5fd8\u5f55\u6a21\u5f0f \u8bbf\u95ee\u8005\u6a21\u5f0f \u72b6\u6001\u6a21\u5f0f \u89e3\u91ca\u5668\u6a21\u5f0f \u4e2d\u4ecb\u8005\u6a21\u5f0f","title":"\u884c\u4e3a\u578b\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/03-behavioral-pattern/#_1","text":"","title":"\u884c\u4e3a\u578b"},{"location":"pages/java/6-design-pattern/03-behavioral-pattern/#_2","text":"","title":"\u8d23\u4efb\u94fe\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/03-behavioral-pattern/#_3","text":"","title":"\u7b56\u7565\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/03-behavioral-pattern/#_4","text":"","title":"\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/03-behavioral-pattern/#_5","text":"","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/03-behavioral-pattern/#_6","text":"","title":"\u8fed\u4ee3\u5668\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/03-behavioral-pattern/#_7","text":"","title":"\u547d\u4ee4\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/03-behavioral-pattern/#_8","text":"","title":"\u5907\u5fd8\u5f55\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/03-behavioral-pattern/#_9","text":"","title":"\u8bbf\u95ee\u8005\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/03-behavioral-pattern/#_10","text":"","title":"\u72b6\u6001\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/03-behavioral-pattern/#_11","text":"","title":"\u89e3\u91ca\u5668\u6a21\u5f0f"},{"location":"pages/java/6-design-pattern/03-behavioral-pattern/#_12","text":"","title":"\u4e2d\u4ecb\u8005\u6a21\u5f0f"},{"location":"pages/kotlin/none/","text":"","title":"\u656c\u8bf7\u671f\u5f85"}]}